#!/sbin/runscript
# --
# otrs-scheduler-gentoo - provides Scheduler init control on gentoo linux
# Copyright (C) 2001-2011 OTRS AG, http://otrs.org/
# --
# $Id: otrs-scheduler-gentoo,v 1.1 2011-05-21 15:56:53 cr Exp $
# --
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU AFFERO General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# or see L<http://www.gnu.org/licenses/agpl.txt>.
# --
#-----------------------------------------------------------------------
# User defined variables
OTRSHome=/opt/otrs
User=otrs
Group=otrs
# User and Group needs to be the same as the apache user and group
# set on apache configuration
#----------------------------------------------------------------------

PATH=$PATH:/bin:/sbin:/usr/sbin
# set Scheduler script
Scheduler=$OTRSHome/bin/otrs.Scheduler.pl

# Regular expresions
RegExDigit="[0-9]+"

#Check user and group
TestUID=$(id -u $User)

if [[ ! $TestUID =~ $RegExDigit ]]; then
    echo "The user ${User} does not exist in this system."
    exit 1
fi

TestGID=$(id -g $Group)
if [[ ! $TestGID =~ $RegExDigit ]]; then
    echo "The group ${Group} does not exist in this system."
    exit 1
fi

CanRun() {

    # check if scheduler can be runned
    test -x "$Scheduler" || {
        echo "Cannot run $Scheduler"
        exit 1
    }
}

# check if scheduler can be runned
CanRun

# set Scheduler PID
STATUS=$("$Scheduler" -a status)

# remove any non numeric character like in "Running 123"
PID=${STATUS//[^0-9]/}

# depend function: set the startup order
depend() {
        use mysql postgresql
}

start() {

    # check scheduler is not running
    if [[ ! $PID =~ $RegExDigit ]]; then
        ebegin "Starting OTRS Scheduler"

        # start Scheduler
        start-stop-daemon --start --chuid $User:$Group --exec $Scheduler -- -a start
        eend $?

    # otherwise cant run it again
    else
       eerror "OTRS Scheduler is already running ${PID}"
       eend 1
    fi
}

stop() {

    # check if Scheduler is running
    if [[ $PID =~ $RegExDigit ]]; then
        ebegin "Stoping OTRS Scheduler"

        # stop Scheduler
        start-stop-daemon --stop --name otrs.Scheduler. --retry 2

        # query Scheduler PID again to check id is stopped
        STATUS=$("$Scheduler" -a status)

        # remove any non numeric character like in "Running 123"
        PID=${STATUS//[^0-9]/}

        # check if still running
        if [[  $PID =~ $RegExDigit ]]; then

            # for some strange reason Gentoo does not send the kill signal no matter if it
            # found the process, if --test is set it says that the system is sending the
            # signal 2 to the process id but aparenty it does not sent it.

            # this is a work arround to fix this problem
            $Scheduler -a stop
        fi
        eend $?
    else
        ebegin "Scheduler is already stopped"
        eend 0
    fi
}

restart() {
    stop && start
}

status() {
    echo -n "Checking for OTRS Scheduler"

    # check if scheduler returns a numeric PID
    if [[ $PID =~ $RegExDigit ]]; then
        echo " ...running ${PID}"

    #otherwise is not running
    else
        echo " ...not running"
    fi
}
