<?xml version="1.0" encoding="iso-8859-1"?>
<!--
Possible SubGroups
        - AgentFrontend
        - AgentPreferences
        - Core        
        - CustomerFrontend
        - CustomerPreferences
        - FrontendModuleNotify                   
        - FrontendModulReg
        - LinkObject
        - Log  
        - MIME-Viewer 
        - Misc        
        - Package            
        - PGP
        - Session
        - SMIME
        - SpellChecker
        - Stats        
        - TicketCore
        - Time                     

String
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup>a</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
    </ConfigItem>                     

Options (PullDownMenu)
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Option SelectedID="Key">
                <Item Key=""></Item>
                <Item Key=""></Item>                
            </Option>
        </Setting>
    </ConfigItem>   
    
Hash
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Hash>
                <Item Key=""></Item>
                <Item Key=""></Item>                
            </Hash>
        </Setting>
    </ConfigItem> 
    
Array
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Array>
                <Item></Item>
                <Item></Item>                
            </Array>
        </Setting>
    </ConfigItem>             
    
TextArea
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <TextArea>
                use &gt; instead of >
                and &lt; instead of <           
            </TextArea>
        </Setting>
    </ConfigItem> 

FrontendModulRegistration    
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup>FrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Title></Title>
                <GroupRo></GroupRo>
                <Group></Group>
                <Description></Description>
                <NavBarName></NavBarName>
                <NavBar>
                    <Description></Description>
                    <Name></Name>
                    <Image></Image>
                    <Link></Link>
                    <NavBar></NavBar>
                    <Type></Type>
                    <Prio></Prio>
                    <Block></Block>
                </NavBar>
                <NavBar>
                    <GroupRo></GroupRo>
                    <Description></Description>
                    <Name></Name>
                    <Image></Image>
                    <Link></Link>
                    <NavBar><NavBar>
                    <Prio><Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
    </ConfigItem>     
       
TimeVacationDaysOneTime 
TimeVacationDays 
TimeWorkingHours    
                                      
-->
<otrs_config version="1.0" init="Application">
    <CVS>$Id: Ticket.xml,v 1.32 2005-05-27 18:08:48 martin Exp $</CVS>
    <ConfigItem Name="Ticket::Hook" Required="1" Valid="1">
        <Description Lang="en">The identifyer for a ticket, e.g. Ticket#, Call#, MyTicket#. The default is Ticket#.</Description>
        <Description Lang="de">Ticket-Identifikator, z.B. Ticket#,Call#, MyTicket#. Als Standard wird Ticket# verwendet.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Ticket#</String>
        </Setting>
        <!-- $Self->{'Ticket::Hook'} = 'Ticket#'; -->
    </ConfigItem>
    <ConfigItem Name="Ticket::HookDivider" Required="1" Valid="1">
        <Description Lang="en">The divider between TicketHook and ticket number. E.g ': '.</Description>
        <Description Lang="de">Der Teiler zwischen Ticket-Identifikator (TicketHook) und der Ticket-Nummer.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{'Ticket::HookDivider'} = ''; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::SubjectSize" Required="1" Valid="1">
        <Description Lang="en">Max size of the subjects in an email reply.</Description>
        <Description Lang="de">Maximal zulässige Größe des Betreffs bei einer Email-Antwort.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">60</String>
        </Setting>
        <!-- $Self->{'Ticket::SubjectSize'} = 60; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::SubjectRe" Required="1" Valid="1">
        <Description Lang="en">The text at the beginning of the subject in a email reply, e.g. RE, AW or AS.</Description>
        <Description Lang="de">Präfix im Betreff bei einer E-Mail-Antwort, z.B. RE, AW oder AS.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Re</String>
        </Setting>
        <!--  $Self->{'Ticket::SubjectRe'} = 'Re'; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::CustomQueue" Required="1" Valid="1">
        <Description Lang="en">Name of custom queue. The custom queue is a queue selection of your prefered queues and can be selected in the preferences settings.</Description>
        <Description Lang="de">Name der persönlich zusammengestellten Queues eines Agenten. Diese Queues können innerhalb der persönlichen Einstellungen ausgewählt werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">My Queues</String>
        </Setting>
        <!--  $Self->{'Ticket::CustomQueue'} = 'My Queues'; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::ForceNewStateAfterLock" Required="0" Valid="0">
        <Description Lang="en">Force a new ticket state after lock action. For key you have to define the current state and for value you have to define the next state after lock action.</Description>
        <Description Lang="de">Automatisches setzen eines neun Ticket-Status nach dem das Ticket gesperrt wurde. Die Zuteilung ist im Key der aktuelle Status und als Inhalt der Status nach der Sperr-Aktion.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="new">open</Item>
            </Hash>
        </Setting>
        <!-- 
            #    $Self->{'Ticket::ForceNewStateAfterLock'} = {
            #        'new' => 'open',
            #    };     
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::ForceUnlockAfterMove" Required="1" Valid="1">
        <Description Lang="en">Would you like to force tickets to be unlocked after move action?</Description>
        <Description Lang="de">Möchten Sie dass die Sperrung eines Tickets automatisch aufgehoben wird, nachdem es in eine andere Queue verschoben worden ist?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!--  $Self->{'Ticket::ForceUnlockAfterMove'} = 0; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::ChangeOwnerToEveryone" Required="1" Valid="1">
        <Description Lang="en">Would you like to make it possible to change owner of foreign tickets (useful for ASP).</Description>
        <Description Lang="de">Soll es möglich sein, den Besitzer eines fremden Tickets zuändern (Kann für ASP nützlich sein)?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!--  $Self->{'Ticket::ChangeOwnerToEveryone'} = 0; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::QueueViewAllPossibleTickets" Required="1" Valid="1">
        <Description Lang="en">Show all ro and rw queues in the queue view (not only rw queues)?</Description>
        <Description Lang="de">Zeigen aller Queues in der Queue-Ansicht für die Schreib- und Leserechte vorhanden sind? Standardmäßig werden nur die Queues angezeigt, für die Schreibrechte vergeben wurden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::QueueViewAllPossibleTickets'} = 0; -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::NewMessageMode" Required="1" Valid="1">
        <Description Lang="en">Mode how the new message count in the agent navigation bar is used.</Description>
        <Description Lang="de">Modus, wie der 'neue Nachrichten' Zähler im Agenten-Navigationsbar benutzt werden soll.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option SelectedID="ArticleLastSender">
                <Item Key="ArticleLastSender">ArticleLastSender</Item>
                <Item Key="ArticleSeen">ArticleSeen</Item>                
            </Option>
        </Setting>
        <!--     
             $Self->{'Ticket::NewMessageMode'} = 'ArticleLastSender';
        #    $Self->{'Ticket::NewMessageMode'} = 'ArticleSeen';   
        -->
    </ConfigItem>      
    <ConfigItem Name="TicketFreeKey1" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 1 for tickets. With this setting you can define an new ticket property.</Description>
        <Description Lang="de">Definition des Freien-Schlüssel-Feldes 1 für Tickets. Damit kann eine neue Ticket-Eigenschaft definiert werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey1"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey1::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 1 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 1 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey1::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText1" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 1 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 1 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText1"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText1::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 1 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 1 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText1::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey2" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 2 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Key-Feldes 2 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey2"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey2::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 2 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 2 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey2::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText2" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 2 for tickets. It's a new ticket poperty.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 2 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText2"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText2::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 2 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 2 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText2::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey3" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 3 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 3 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey3"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey3::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 3 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 3 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey3::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText3" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 3 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 3 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText3"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText3::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 3 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 3 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText3::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey4" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 4 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 4 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey4"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey4::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 4 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 4 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey4::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText4" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 4 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 4 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText4"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText4::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 4 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 4 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText4::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey5" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 5 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 5 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey5"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey5::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 5 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 5 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey5::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText5" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 5 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 5 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText5"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText5::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 5 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 5 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText5::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey6" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 6 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 6 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey6"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey6::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 6 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 6 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey6::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText6" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 6 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 6 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText6"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText6::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 6 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 6 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText6::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey7" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 7 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 7 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey7"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey7::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 7 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 7 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey7::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText7" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 7 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 7 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText7"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText7::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 7 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 7 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText7::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeKey8" Required="0" Valid="0">
        <Description Lang="en">Define the free key field 8 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Schlüssel-Feldes 8 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Product">Product</Item>                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeKey8"} = {
        #        '' => '-',
        #        'Product' => 'Product',
        #    };        
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeKey8::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free key field 8 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Schlüssel-Feldes 8 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--
            $Self->{"TicketFreeKey8::DefaultSelection"} = '';        
        -->
    </ConfigItem>    
    <ConfigItem Name="TicketFreeText8" Required="0" Valid="0">
        <Description Lang="en">Define the free text field 8 for tickets. It's a new ticket property.</Description>
        <Description Lang="de">Definition des Freier-Text-Feldes 8 für Tickets. Es ist eine neue Ticket-Eigenschaft.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="">-</Item>
                <Item Key="PC">PC</Item> 
                <Item Key="Notebook">Notebook</Item>
                <Item Key="Phone">Phone</Item>                                
            </Hash>
        </Setting>
        <!--
        #    $Self->{"TicketFreeText8"} = {
        #        '' => '-',
        #        'PC' => 'PC',
        #        'Notebook' => 'Notebook',
        #        'LCD' => 'LCD',
        #        'Phone' => 'Phone',
        #    };      
        -->
    </ConfigItem> 
    <ConfigItem Name="TicketFreeText8::DefaultSelection" Required="0" Valid="0">
        <Description Lang="en">The default selection of free text field 8 if more then one option is defined.</Description>
        <Description Lang="de">Die Standard-Auswahl des Freier-Text-Feldes 8 wenn mehrere Optionen definiert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">Notebook</String>
        </Setting>
        <!--
            $Self->{"TicketFreeText8::DefaultSelection"} = 'Notebook';        
        -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::NumberGenerator" Required="1" Valid="1">
        <Description Lang="en">Select the ticket number generator module. "AutoIncrement" just increments the ticket number, the SystemID and the counter are used. The format is SystemID.counter, e.g. 1010138, 1010139. With "Date" the ticket numbers will be generated by the current date, the SystemID and the counter. The format looks like Year.Month.Day.SystemID.counter, e.g. 200206231010138, 200206231010139. With "DateChecksum"  the counter will be appended as check summ to the string of date and SystemID. The check summ will be rotaded daily. The format looks like Year.Month.Day.SystemID.Counter.CheckSum, e.g. 2002070110101520, 2002070110101535. "Random" generates randomized ticket numbers in the format "SystemID.Random", e.g. 100057866352, 103745394596.</Description>
        <Description Lang="de">Auswahl des Moduls zur Generierung der Ticketnummern. "AutoIncrement" zählt die Ticketnummer automatisch hoch und verbindet sie mit der SystemID. Es wird das Format SystemID.Counter verwendet, z.B. 1010138, 1010139. "Date" generiert die Ticketnummer aus Datum, SystemID und dem Counter, es wird das Format "Jahr.Monat.Tag.SystemID.Counter verwendet, z.B 200206231010138, 200206231010139. "DateChecksum" erzeugt die Ticketnummer aus dem Datum, der SystemID, dem Counter und einer Checksumme. Es wird das Format "Jahr.Monat.Tag.SystemID.Counter.CheckSumme verwendet, z.B. 2002070110101520, 2002070110101535. "Random" generiert aus der SystemID und einer Zufallszahl die Ticketnummern. Es wird das Format SystemID.Random verwendet, z.B. 100057866352, 103745394596.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option Location="Kernel/System/Ticket/Number/*.pm" SelectedID="Kernel::System::Ticket::Number::DateChecksum"></Option>
        </Setting>
    </ConfigItem>    
    <ConfigItem Name="Ticket::NumberGenerator::MinCounterSize" Required="1" Valid="1">
        <Description Lang="en">If "AutoIncrement" was selected for TicketNumberGenerator, you can set the minimal ticket counter size. Default is 5, this means the counter starts from 10000.</Description>
        <Description Lang="de">Wenn "AutoIncrement" für TicketNumberGenerator ausgewählt wurde, kann hier die minimale Länge des Zählers (Counters) festgelegt werden. Standard ist 5, d.h. gezählt wird ab 10000.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="^[0-9]$">5</String>
        </Setting>
    </ConfigItem>
    <ConfigItem Name="Ticket::CounterLog" Required="1" Valid="1">
        <Description Lang="en">Log file for the ticket counter.</Description>
        <Description Lang="de">Pfad und Verzeichnis zum Logfile für den Ticket-Counter.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">&lt;OTRS_CONFIG_Home&gt;/var/log/TicketCounter.log</String>
        </Setting>
        <!--  $Self->{'Ticket::CounterLog'} = '<OTRS_CONFIG_Home>/var/log/TicketCounter.log';   -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::IndexModule" Required="1" Valid="1">
        <Description Lang="en">IndexAccelerator, choose your backend TicketViewAccelerator module. "RuntimeDB" generates each queue view on the fly from ticket table. You won't have performance problems till 60.000 tickets and 6.000 open tickets in your system. "StaticDB" is the most powerfull module. It should be used, if more then 80.000 and 6.000 opten tickets are stored in the system. The module uses a extra ticket_index table, that works like a view. Use the script "bin/RebuildTicketIndex.pl" for initial index update.</Description>
        <Description Lang="de">IndexAccelerator, wählen Sie das gewünschte BackendModul aus. "RuntimeDB" generiert jede QueueAnsicht "on the fly" aus der Tickettabelle. Bis zu einer Anzahl von 60.000 Tickets insgesamt und 6.000 offenen Tickets sollten Sie mit diesem Modul kein Performanceproblem bekommen. Für Installationen mit über 80.000 Tickets insgesamt und 6.000 offenen Tickets sollte das Modul "StaticDB" gewählt werden. Für das Modul wird eine extra Tabelle (ticket_index) verwendet, die ähnlich wie ein "view" arbeitet. Benutzen für die erste Einrichtung der Tabelle das Skript "bin/RebuildTicketIndex.pl".</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option Location="Kernel/System/Ticket/IndexAccelerator/*.pm" SelectedID="Kernel::System::Ticket::IndexAccelerator::RuntimeDB">
            </Option>
        </Setting>
        <!-- 
        $Self->{'Ticket::IndexModule'} = 'Kernel::System::Ticket::IndexAccelerator::StaticDB'; 
        $Self->{'Ticket::IndexModule'} = 'Kernel::System::Ticket::IndexAccelerator::RuntimeDB';
        -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::StorageModule" Required="1" Valid="1">
        <Description Lang="en">Select your TicketStorageModule to safe the attachments of articles. "DB" stores all data in the database. Don't use this module if big attachments will be stored. "FS" stores the data in the file system, it is faster but webserver user should be the otrs user. You can switch between the modules even with a running system, all data will be availabel and are searched for example.</Description>
        <Description Lang="de">Wählen Sie das TicketStorage-Modul aus und legen sie fest, wie die Anhänge zu Artikeln gespeichert werden sollen. "DB" speichert alle Daten in der Datenbank. Wird nur mit kleinen Anhängen gearbeitet, ist das kein Problem. "FS" legt die Daten im Filesystem ab, der Zugriff ist schneller. Allerdings sollte bei Verwendung von "FS" der WEB-Server unter dem selben Benutzer laufen, der auch für OTRS verwendet wird. Sie können das Modul auch für laufende Systeme ändern, es wird trotzdem weiter auf alle Daten zugegriffen und auch die Daten, die mit Hilfe des anderen Moduls gespeichert wurden, bleiben verfügbar.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option Location="Kernel/System/Ticket/ArticleStorage*.pm" SelectedID="Kernel::System::Ticket::ArticleStorageDB">
            </Option>
        </Setting>
        <!-- 
        $Self->{'Ticket::StorageModule'} = 'Kernel::System::Ticket::ArticleStorageFS';
        $Self->{'Ticket::StorageModule'} = 'Kernel::System::Ticket::ArticleStorageDB';        
        -->
    </ConfigItem>    
    <ConfigItem Name="ArticleDir" Required="1" Valid="1">
        <Description Lang="en">If you have selected "FS" for TicketStorageModule, you have to specifiy the directory where to store the data.</Description>
        <Description Lang="de">Wurde "FS" als ArticleStoragModule ausgewählt, muss das Verzeichnis angegeben werden, in dem die Daten abgelegt werden sollen.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex="">&lt;OTRS_CONFIG_Home&gt;/var/article</String>
        </Setting>
        <!--  $Self->{ArticleDir} = '<OTRS_CONFIG_Home>/var/article';   -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::CustomModule" Required="0" Valid="0">
        <Description Lang="en">A module with custom functions to redefine Kernel::System::Ticket functions (e. g. Kernel::System::Ticket::Custom).</Description>
        <Description Lang="de">Ein Modul mit angepassten Funktionen welche die standard Kernel::System::Ticket überschreibt (z. B. Kernel::System::Ticket::Custom).</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  $Self->{'Ticket::CustomModule'} = 'Kernel::System::Ticket::Custom';   -->
    </ConfigItem>       
    <ConfigItem Name="HighlightAge1" Required="1" Valid="1">
        <Description Lang="en">Set the age (first level) for highlighting of old queue (Age in min).</Description>
        <Description Lang="de">Zeit ab dem eine Queue mit nicht bearbeiteten Inhalten in erster Stufe gehighlighted wird (Angabe in min).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">1440</String>
        </Setting>
        <!--  $Self->{HighlightAge1} = 1440;   -->
    </ConfigItem>       
    <ConfigItem Name="HighlightColor1" Required="1" Valid="1">
        <Description Lang="en">Set the color for highlighting of old queue (first level).</Description>
        <Description Lang="de">Farbe mit der eine Queue mit nicht bearbeiteten Inhalten in erster Stufe gehighlighted wird.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">orange</String>
        </Setting>
        <!--  $Self->{HighlightColor1} = 'orange';   -->
    </ConfigItem>           
    <ConfigItem Name="HighlightAge2" Required="1" Valid="1">
        <Description Lang="en">Set the age (second level) for highlighting of old queue (Age in min).</Description>
        <Description Lang="de">Zeit ab dem eine Queue mit nicht bearbeiteten Inhalten in zweiter Stufe gehighlighted wird (Angabe in min).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">2880</String>
        </Setting>
        <!--  $Self->{HighlightAge2} = 2880;   -->
    </ConfigItem>       
    <ConfigItem Name="HighlightColor2" Required="1" Valid="1">
        <Description Lang="en">Set the color for highlighting of old queue (second level).</Description>
        <Description Lang="de">Farbe mit der eine Queue mit nicht bearbeiteten Inhalten in zweiter Stufe gehighlighted wird.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">red</String>
        </Setting>
        <!--  $Self->{HighlightColor2} = 'red';   -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::Frontend::PendingDiffTime" Required="1" Valid="1">
        <Description Lang="en">Time in sec. which "pending date" shows per default) (default: 24*60*60 = 1 day.</Description>
        <Description Lang="de">So lange wird ein Ticket per Defaulteinstellung als "Pending" eingestuft (Angabe in sec; Default: 24*60*60 = 1 Tag).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">86400</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PendingDiffTime'} = 24*60*60;   -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::QueueListType" Required="1" Valid="1">
        <Description Lang="en">Show queues in system as tree or as list.</Description>
        <Description Lang="de">Anzeige der Queues als Liste (list) oder in Baumstruktur (tree).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="tree">
                <Item Key="tree">tree</Item>
                <Item Key="list">list</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::QueueListType'} = 'tree';  -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::StdResponsesMode" Required="1" Valid="1">
        <Description Lang="en">Is the standard responses in the agent interface  shown as form or links?</Description>
        <Description Lang="de">Sollen Standard-Antworten im Agent-Interface als Formular oder als Links angezeigt werden?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="Link">
                <Item Key="Link">Link</Item>
                <Item Key="Form">Form</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::StdResponsesMode'} = 'Link';  -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::ZoomExpand" Required="1" Valid="1">
        <Description Lang="en">Show article expanded in agent interface under ticket zoom.</Description>
        <Description Lang="de">Zeige die Artikel erweitert im Agent-Interface unter Ticket-Zoom-Ansicht.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::ZoomExpand'} = 0; -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::ZoomExpandSort" Required="1" Valid="1">
        <Description Lang="en">Show article normal or in reverse order in the agent interface under ticket zoom.</Description>
        <Description Lang="de">Zeige die Artikel normal oder rückwärts sortiert im Agent-Interface unter der Ticket-Zoom-Ansicht.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="normal">
                <Item Key="reverse">reverse</Item>
                <Item Key="normal">normal</Item>                
            </Option>
        </Setting>
        <!-- 
        # $Self->{'Ticket::Frontend::ZoomExpandSort'} = 'reverse';
        $Self->{'Ticket::Frontend::ZoomExpandSort'} = 'normal';
        -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::HistoryOrder" Required="1" Valid="1">
        <Description Lang="en">Show history order reverse in the agent interface under ticket history.</Description>
        <Description Lang="de">Zeige die History normal oder rückwärts sortiert im Agent-Interface unter der Ticket-History.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="normal">
                <Item Key="reverse">reverse</Item>
                <Item Key="normal">normal</Item>                
            </Option>
        </Setting>
        <!-- 
        $Self->{'Ticket::Frontend::HistoryOrder'} = 'normal';
        # $Self->{'Ticket::Frontend::HistoryOrder'} = 'reverse';
        -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::TextAreaEmail" Required="1" Valid="1">
        <Description Lang="en">Width of compose email windows.</Description>
        <Description Lang="de">Anzahl der Zeichen pro Zeile im E-Mail-Fenster.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">78</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::TextAreaEmail'} = 78;   -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::TextAreaNote" Required="1" Valid="1">
        <Description Lang="en">Width of compose note windows.</Description>
        <Description Lang="de">Anzahl der Zeichen pro Zeile im Notiz-Fenster.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">70</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::TextAreaNote'} = 70;   -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::CustomerInfoCompose" Required="1" Valid="1">
        <Description Lang="en">Show customer user info in Compose screen (Phone and Email)?</Description>
        <Description Lang="de">Anzeige von Customer-Informationen in der Maske zum Erstellen einer Antwort (Telefon und Email)?</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::CustomerInfoCompose'} = 1; -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::CustomerInfoComposeMaxSize" Required="1" Valid="1">
        <Description Lang="en">Max size (in characters) of customer info table - Compose screen (Phone and Email).</Description>
        <Description Lang="de">Max. Anzeige an Zeichen für die Customer-Infomationen innerhalb der Antwort-Erstellen-Maske (Telefon and Email)?</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">22</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::CustomerInfoComposeMaxSize'} = 22;   -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::CustomerInfoZoom" Required="1" Valid="1">
        <Description Lang="en">Show customer user info in ticket zoom view?</Description>
        <Description Lang="de">Anzeige der Customer-Informationen im Ticket-Inhalt?</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::CustomerInfoZoom'} = 1; -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::CustomerInfoZoomMaxSize" Required="1" Valid="1">
        <Description Lang="en">Max size (in characters) of customer info table - Zoom.</Description>
        <Description Lang="de">Max. Anzeige der Zeichen in der Customer-Info für die Ticket-Zoom-Maske.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">22</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::CustomerInfoZoomMaxSize'} = 22;   -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::CustomerInfoQueue" Required="1" Valid="1">
        <Description Lang="en">Show customer user info in Queue view?</Description>
        <Description Lang="de">Anzeige der Customer-Info in der Queue-Ansicht?</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::CustomerInfoQueue'} = 0; -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::CustomerInfoQueueMaxSize" Required="1" Valid="1">
        <Description Lang="en">Max size (in characters) of customer info table - Queue.</Description>
        <Description Lang="de">Max. Anzeige der Zeichen in der Customer-Info für die Queue-Ansicht.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">18</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::CustomerInfoQueueMaxSize'} = 18;   -->
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::NoEscalationGroup" Required="1" Valid="1">
        <Description Lang="en">Don't show escalated tickets to agents, who have write permissions for their specifyed group.</Description>
        <Description Lang="de">Zeige keinem Agenten mit Schreibrechten aus der angegebenen Gruppe eskalierte Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">some_group</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NoEscalationGroup'} = 'some_group';   -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::QueueMaxShown" Required="1" Valid="1">
        <Description Lang="en">Max shown tickets in queue view.</Description>
        <Description Lang="de">Maximale Anzahl der in der QueueAnsicht angezeigten Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">1200</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::QueueMaxShown'} = 1200;   -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::Frontend::QueueSortDefault" Required="1" Valid="1">
        <Description Lang="en">Default sort order of the queue view (after priority sort). ASC: oldest on top. DESC: youngest on top.</Description>
        <Description Lang="de">Standard Sortierreihenfolge in der QueueAnsicht. ASC: die ältesten Tickets zuerst. DESC: die neuesten zuerst.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="ASC">
                <Item Key="ASC">ASC</Item>
                <Item Key="DESC">DESC</Item>                
            </Option>
        </Setting>
        <!-- 
        $Self->{'Ticket::Frontend::QueueSortDefault'} = 'ASC';
        $Self->{'Ticket::Frontend::QueueSortDefault'} = 'DESC'; 
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::QueueSort" Required="0" Valid="0">
        <Description Lang="en">Sort a queue ascending or descending after priority sort. Values: 0 = ascending (oldest on top, default), 1 = descending (youngest on top)</Description>
        <Description Lang="de">Queue auf- oder absteigend sortieren, nach der Sortierung nach Priorität. Mögliche Werte: 0 = Aufsteigend (alte Tickets zuerst), 1 = absteigend</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="7">1</Item>
                <Item Key="3">0</Item>
            </Hash>
        </Setting>
        <!--
            # $Self->{'Ticket::Frontend::QueueSort'} = {
            #       7 => 1,
            #     3 => 0,
            # };    
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::AccountTime" Required="1" Valid="1">
        <Description Lang="en">Aktivate time accounting.</Description>
        <Description Lang="de">Aktivieren der Zeiterfassung.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::AccountTime'} = 0; -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::TimeUnits" Required="1" Valid="1">
        <Description Lang="en">Your choice of your used time units (e.g. work units, hours, minutes).</Description>
        <Description Lang="de">Auswahl der Zeiteinheiten bei der Zeiterfassung (z. B. Arbeitseinheiten, Stunden, Minuten).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""> (work units)</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::TimeUnits'} = ' (work units)'; -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::NeedAccountedTime" Required="1" Valid="1">
        <Description Lang="en">Does the time have to be accounted?</Description>
        <Description Lang="de">Muss die benötigte Bearbeitungszeit angegeben werden?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NeedAccountedTime'} = 0; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::NeedSpellCheck" Required="1" Valid="1">
        <Description Lang="en">Newly composed messages have to be spell checked?</Description>
        <Description Lang="de">Müssen neu erstelle Nachrichten auf Rechtschreibfehler geprüft werden?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NeedSpellCheck'} = 0; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::BulkFeature" Required="1" Valid="1">
        <Description Lang="en">Do you want to activate a agent frontend feature to work on more then one ticket at the same time?</Description>
        <Description Lang="de">Soll eine Agent-Frontend-Funktion aktiviert werden, mit der gleichzeitig mit mehreren Tickets gearbeitet werden kann?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::BulkFeature'} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::BulkFeatureJavaScriptAlert" Required="1" Valid="1">
        <Description Lang="en">Show java script popup if a ticket is selected for bulk action?</Description>
        <Description Lang="de">Zeige Java Script Popup, wenn ein Ticket für die Bulk-Aktion ausgewählt wurde?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::BulkFeatureJavaScriptAlert'} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::MoveType" Required="1" Valid="1">
        <Description Lang="en">Show queue selection as dropdown box or open a new window to select a new queue?</Description>
        <Description Lang="de">Anzeige der Queue-Auswahl beim Verschieben als Dropdown Box oder öffnen eines neuen Fensters zur Auswahl der neuen Queue?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="form">
                <Item Key="link">New Window</Item>
                <Item Key="form">Dropdown</Item>
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::MoveType'} = 'form'; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::MoveSetState" Required="1" Valid="1">
        <Description Lang="en">Set new ticket state after ticket move?</Description>
        <Description Lang="de">Setzen eines neuen Ticket-Status nach dem verscheiben?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::MoveSetState'} = 1; -->
    </ConfigItem>        
    <ConfigItem Name="Ticket::DefaultNextMoveStateType" Required="1" Valid="1">
        <Description Lang="en">Possible state types after moving a ticket.</Description>
        <Description Lang="de">Mögliche Stati nach dem Verschieben von Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>closed</Item>                
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::DefaultNextMoveStateType'} = ['open', 'closed']; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::StatusView::ViewableTicketsPage" Required="1" Valid="1">
        <Description Lang="en">Shows all open tickets.</Description>
        <Description Lang="de">Zeigt alle offenen Tickets an.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">50</String>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::StatusView::ViewableTicketsPage'} = 50;   -->
    </ConfigItem>    
     <ConfigItem Name="Ticket::Frontend::SearchLimit" Required="1" Valid="1">
        <Description Lang="en">Search limit for ticket frontend.</Description>
        <Description Lang="de">Hier legen Sie das Ergebnislimit für die Ticketsuche fest.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="^[0-9]${1,10}">5000</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::SearchLimit'} = 5000;   -->                
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::SearchPageShown" Required="1" Valid="1">
        <Description Lang="en">Default of shown article a page.</Description>
        <Description Lang="de">Anzahl der angezeigten Treffer pro Seite bei der Ticketsuche.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">40</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::SearchPageShown'} = 40;   -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::SearchViewableTicketLines" Required="1" Valid="1">
        <Description Lang="en">Viewable ticket lines by search utility.</Description>
        <Description Lang="de">Anzahl der Zeilen, die durch das Suchwerkzeug angezeigt werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">10</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::SearchViewableTicketLines'} = 10;   -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::SearchArticleCSVTree" Required="1" Valid="1">
        <Description Lang="en">Export also whole article tree in search result export (take care of the system performance!).</Description>
        <Description Lang="de">Exportiere im Suchergebnisexport auch den ganzen ArtikelBaum (Achten Sie bei dieser Einstellung auf die System-Performance).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::SearchArticleCSVTree'} = 0; -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::SearchCSVData" Required="1" Valid="1">
        <Description Lang="en">Used data to export the search result in CSV format..</Description>
        <Description Lang="de">Angaben für den Export des Suchergebnisses im CSV-Format.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>TicketNumber</Item>
                <Item>Age</Item> 
                <Item>Created</Item>
                <Item>State</Item>  
                <Item>Priority</Item>
                <Item>Queue</Item>  
                <Item>Lock</Item>
                <Item>Owner</Item>  
                <Item>UserFirstname</Item>
                <Item>UserLastname</Item>    
                <Item>CustomerID</Item>
                <Item>CustomerName</Item> 
                <Item>From</Item>
                <Item>Subject</Item>  
                <Item>AccountedTime</Item>
                <Item>TicketFreeKey1</Item>  
                <Item>TicketFreeText1</Item>
                <Item>TicketFreeKey2</Item>  
                <Item>TicketFreeText2</Item>
                <Item>TicketFreeKey3</Item>   
                <Item>TicketFreeText3</Item>
                <Item>TicketFreeKey4</Item> 
                <Item>TicketFreeText4</Item>
                <Item>TicketFreeKey5</Item>  
                <Item>TicketFreeText5</Item>
                <Item>TicketFreeKey6</Item>  
                <Item>TicketFreeText6</Item>
                <Item>TicketFreeKey7</Item>  
                <Item>TicketFreeText7</Item>
                <Item>TicketFreeKey8</Item>    
                <Item>TicketFreeText8</Item>
                <Item>CustomerName</Item> 
                <Item>ArticleTree</Item>                                                                              
            </Array>
        </Setting>
        <!--     $Self->{'Ticket::Frontend::SearchCSVData'} = ['TicketNumber','Age','Created','State','Priority','Queue','Lock','Owner','UserFirstname','UserLastname','CustomerID','CustomerName','From','Subject','AccountedTime','TicketFreeKey1','TicketFreeText1','TicketFreeKey2','TicketFreeText2','TicketFreeKey3','TicketFreeText3','TicketFreeKey4','TicketFreeText4','TicketFreeKey5','TicketFreeText5','TicketFreeKey6','TicketFreeText6','TicketFreeKey7','TicketFreeText7','TicketFreeKey8','TicketFreeText8','ArticleTree','']; -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::Search::DB::DSN" Required="0" Valid="0">
        <Description Lang="en">If you want to use a mirror database for agent ticket fulltext search, specify the DSN to this database.</Description>
        <Description Lang="de">Wenn eine Datenbank mit den gespiegelten Daten für die Volltextsuche genutzt werden soll, kann hier die DSN für dieser Datenbank angegeben werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">DBI:mysql:database=mirrordb;host=mirrordbhost</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::Search::DB::DSN'} = "DBI:mysql:database=mirrordb;host=mirrordbhost";   -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::Search::DB::User" Required="0" Valid="0">
        <Description Lang="en">If you want to use a mirror database for agent ticket fulltext search, you can specify the user to authenticate to this database.</Description>
        <Description Lang="de">Wenn eine Datenbank mit den gespiegelten Daten für die Volltextsuche genutzt werden soll, kann hier der Benutzer angegeben werden, der für die Anmeldung an dieser Datenbank benötigt wird.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">some_user</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::Search::DB::User'} = "some_user";   -->
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::Search::DB::Password" Required="0" Valid="0">
        <Description Lang="en">If you want to use a mirror database for agent ticket fulltext search, you can specify the password to authenticate to this database.</Description>
        <Description Lang="de">Wenn eine Datenbank mit den gespiegelten Daten für die Volltextsuche genutzt werden soll, kann hier das Kennwort angegeben werden, das für die Anmeldung an dieser Datenbank benötigt wird.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">some_password</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::Search::DB::Password'} = "some_password";   -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::AgentCanBeCustomer" Required="1" Valid="1">
        <Description Lang="en">Can a agent also be a customer via the agent interface?</Description>
        <Description Lang="de">Kann ein Agent auch ein Kunde im Agent-Interface sein?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::AgentCanBeCustomer'} = 0;  -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PhoneArticleType" Required="1" Valid="1">
        <Description Lang="en">Default note type for phone tickets.</Description>
        <Description Lang="de">Standard Notiztyp bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">phone</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneArticleType'} = 'phone';   -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::PhoneSenderType" Required="1" Valid="1">
        <Description Lang="en">Default sender type for phone tickets.</Description>
        <Description Lang="de">Standard Sendertyp bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">agent</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneSenderType'} = 'agent';   -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::PhoneSubject" Required="1" Valid="1">        
        <Description Lang="en">Default subject for phone tickets.</Description>
        <Description Lang="de">Standard Betreff bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">$Text{"Phone call at %s", "Time(DateFormatLong)"}</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneSubject'} = '$Text{"Phone call at %s", "Time(DateFormatLong)"}';   -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::PhoneNote" Required="1" Valid="1">         
        <Description Lang="en">Default note text for phone tickets.</Description>
        <Description Lang="de">Standard Text für Notizen für Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">$Text{"Customer called"}</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNote'} = '$Text{"Customer called"}';   -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::PhoneDefaultNextStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states after phone.</Description>
        <Description Lang="de">Mögliche Stati nach dem Telefonat.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>pending auto</Item> 
                <Item>pending reminder</Item>
                <Item>closed</Item>                        
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::PhoneDefaultNextStateType'} = ['open', 'pending auto', 'pending reminder', 'closed']; -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::PhoneNextState" Required="1" Valid="1">     
        <Description Lang="en">Default next state after phone.</Description>
        <Description Lang="de">Vorauswahl für den nächsten Status der Telefonnotiz.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">closed successful</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNextState'} = 'closed successful';   -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::PhoneHistoryType" Required="1" Valid="1">      
        <Description Lang="en">Default history type for phone tickets.</Description>
        <Description Lang="de">Standard History-Typ für Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">PhoneCallAgent</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneHistoryType'} = 'PhoneCallAgent';   -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::PhoneHistoryComment" Required="1" Valid="1">      
        <Description Lang="en">Default history comment for phone tickets.</Description>
        <Description Lang="de">Standard History-Kommentar bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneHistoryComment'} = '';   -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::PhoneNewArticleType" Required="1" Valid="1">      
        <Description Lang="en">Default article type for phone tickets.</Description>
        <Description Lang="de">Default Artikeltyp für Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">phone</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNewArticleType'} = 'phone';   -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::PhoneNewSenderType" Required="1" Valid="1">      
        <Description Lang="en">Default sender type for new phone ticket.</Description>
        <Description Lang="de">Standard Sender-Typ bei neuen Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">customer</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNewSenderType'} = 'customer';   -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::PhoneNewSubject" Required="1" Valid="1">      
        <Description Lang="en">Default subject for new phone tickets (e.g. '$Text{"Phone call at %s", "Time(DateFormatLong)"}').</Description>
        <Description Lang="de">Standard Betreff für neue Telefontickets (z.B.         '$Text{"Phone call at %s", "Time(DateFormatLong)"}').</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  
        $Self->{'Ticket::Frontend::PhoneNewSubject'} = '$Text{"Phone call at %s", "Time(DateFormatLong)"}';
        $Self->{'Ticket::Frontend::PhoneNewSubject'} = '';
        -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::PhoneNewNote" Required="1" Valid="1">      
        <Description Lang="en">Default note text. E.g 'New ticket via call.'</Description>
        <Description Lang="de">Standard-Text für die Notiz bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  
        $Self->{'Ticket::Frontend::PhoneNewNote'} = 'New ticket via call.';
        $Self->{'Ticket::Frontend::PhoneNewNote'} = '';
        -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::PhoneNewNextState" Required="1" Valid="1">    
        <Description Lang="en">Default next state.</Description>
        <Description Lang="de">Standardmäßig vergebener nächster Status.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">open</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNewNextState'} = 'open';  -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PhonePriority" Required="1" Valid="1">    
        <Description Lang="en">Default priority for phone tickets.</Description>
        <Description Lang="de">Standardpriorität eines Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">3 normal</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhonePriority'} = '3 normal';  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::PhoneNewHistoryType" Required="1" Valid="1">    
        <Description Lang="en">Default history type for phone tickets.</Description>
        <Description Lang="de">Standard History-Typ bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">PhoneCallCustomer</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNewHistoryType'} = 'PhoneCallCustomer';  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::PhoneNewHistoryComment" Required="1" Valid="1">    
        <Description Lang="en">Default history comment for phone tickets.</Description>
        <Description Lang="de">Standard Kommentar für die History bei Telefontickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PhoneNewHistoryComment'} = '';  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::NewOwnerSelection" Required="1" Valid="1">
        <Description Lang="en">Show owner selection in phone and email ticket?</Description>
        <Description Lang="de">Zeige die Besitzerauswahl im Telefon- und E-Mail-Ticket?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NewOwnerSelection'} = 1;  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::NewQueueSelectionType" Required="1" Valid="1">
        <Description Lang="en">To: selection type. "Queue" shows all queues, "SystemAddress" displays all system addresses.</Description>
        <Description Lang="de">Auswahl des To: Anzeige-Typs. "Queue" zeigt alle Queues an, "SystemAddress" zeigt alle Systemadressen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="Queue">
                <Item Key="Queue">Queue</Item>
                <Item Key="SystemAddress">SystemAddress</Item>                
            </Option>
        </Setting>
        <!-- 
        $Self->{'Ticket::Frontend::NewQueueSelectionType'} = 'Queue';
        $Self->{'Ticket::Frontend::NewQueueSelectionType'} = 'SystemAddress';
        -->
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::NewQueueSelectionString" Required="1" Valid="1">
        <Description Lang="en">If "Queue" was selected for NewQueueSelectionType, you can specify a selection string.</Description>
        <Description Lang="de">Wenn "Queue" für NewQueueSelectionType ausgewählt wurde, kann hier eine Zeichenkette für die Auswahl angegeben werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">&lt;Queue&gt;</String>
        </Setting>
        <!-- 
        $Self->{'Ticket::Frontend::NewQueueSelectionString'} = 'Queue: <Queue> - <QueueComment>';
        $Self->{'Ticket::Frontend::NewQueueSelectionString'} = '<Queue>';
        $Self->{'Ticket::Frontend::NewQueueSelectionString'} = '<Realname> <<Email>> - Queue: <Queue> - <QueueComment>';
        $Self->{'Ticket::Frontend::NewQueueSelectionString'} = '<Realname> <<Email>> - Queue: <Queue>';
        -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::Frontend::NewQueueOwnSelection" Required="0" Valid="0">
        <Description Lang="en">If this is in use, "just this selection is valid" for the PhoneView.</Description>
        <Description Lang="de">Wenn Sie diese Auswahl benutzen, ist sie nur für die TelefonAnsicht gültig.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="1">First Queue!</Item>
                <Item Key="2">Second Queue!</Item>
            </Hash>
        </Setting>
        <!-- 
        $Self->{'Ticket::Frontend::NewQueueOwnSelection'} = {
            # QueueID => String
            '1' => 'First Queue!',
            '2' => 'Second Queue!',
        };    
        -->        
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::EmailPriority" Required="1" Valid="1">    
        <Description Lang="en">Default priority for emails.</Description>
        <Description Lang="de">Standard Priorität für Emails.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">3 normal</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailPriority'} = '3 normal';  -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::EmailNewArticleType" Required="1" Valid="1">    
        <Description Lang="en">Default article type for new article.</Description>
        <Description Lang="de">Standard Artikeltyp beim erstellen eines Artikels.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">email-external</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewArticleType'} = 'email-external';  -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::EmailNewSenderType" Required="1" Valid="1">    
        <Description Lang="en">Default sender type for article.</Description>
        <Description Lang="de">Standard Sender-Typ für Artikel.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">agent</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewSenderType'} = 'agent';  -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::EmailNewHistoryType" Required="1" Valid="1">    
        <Description Lang="en">Type for article history.</Description>
        <Description Lang="de">Typ für Artikel Historie.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">EmailAgent</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewHistoryType'} = 'EmailAgent';  -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::EmailNewHistoryComment" Required="1" Valid="1">    
        <Description Lang="en">Default comment for new email history.</Description>
        <Description Lang="de">Standard Kommentar für History-Eintrag bei neuen Emails.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewHistoryComment'} = '';  -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::EmailNewNote" Required="1" Valid="1">    
        <Description Lang="en">Default note text for emails.</Description>
        <Description Lang="de">Standard Text für Email-Notiz.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <TextArea></TextArea>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewNote'} = '';  -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::EmailDefaultNextStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states after e-mailphone.</Description>
        <Description Lang="de">Mögliche Stati nach dem erstellen einer Email.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>pending auto</Item> 
                <Item>pending reminder</Item>
                <Item>closed</Item>                        
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::EmailDefaultNextStateType'} = ['open', 'pending auto', 'pending reminder', 'closed']; -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::EmailNewNextState" Required="1" Valid="1">    
        <Description Lang="en">Default next state for the next new email.</Description>
        <Description Lang="de">Vorauswahl des Status für die nächste neue Email.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">open</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::EmailNewNextState'} = 'open';  -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::NoteSetState" Required="1" Valid="1">
        <Description Lang="en">Would you like to set the state of a ticket if a note is created by an agent?</Description>
        <Description Lang="de">Soll der Status eines Tickets gesetzt werden können, wenn eine Notiz durch einen Agent angelegt wird?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NoteSetState'} = 0;  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::NoteInformInvolvedAgent" Required="1" Valid="1">
        <Description Lang="en">Show selection of involved agents?</Description>
        <Description Lang="de">Auswahl der innvolvierten Agents anzeigen?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NoteInformInvolvedAgent'} = 0;  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::NoteInformAgent" Required="1" Valid="1">
        <Description Lang="en">Show selection of agents to inform?</Description>
        <Description Lang="de">Auswahl zu informierender Agents anzeigen?</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'Ticket::Frontend::NoteInformAgent'} = 0;  -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::DefaultNextNoteStateType" Required="1" Valid="1">
        <Description Lang="en">Default states of next note.</Description>
        <Description Lang="de">Standard Stati der nächsten Notiz.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>new</Item>
                <Item>open</Item> 
                <Item>closed</Item>                        
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultNextNoteStateType'} = ['new', 'open', 'closed']; -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::NoteType" Required="1" Valid="1"> 
        <Description Lang="en">Default note type.</Description>
        <Description Lang="de">Voreingestellter Notiztyp.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">note-internal</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::NoteType'} = 'note-internal';  -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::NoteTypes" Required="1" Valid="1">
        <Description Lang="en">Specify the different note types, that you want to use in your system.</Description>
        <Description Lang="de">Hier können die verschiedenen Notiz-Typen festgelegt werden, die innerhalb des Systems verwendet werden sollen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="note-internal">1</Item>
                <Item Key="note-external">0</Item>
                <Item Key="note-report">0</Item>
            </Hash>
        </Setting>
        <!--
        $Self->{'Ticket::Frontend::NoteTypes'} = {
            'note-internal' => 1,
            'note-external' => 0,
            'note-report' => 0,
        };        
        -->
    </ConfigItem> 
    <ConfigItem Name="Ticket::Frontend::NoteSubject" Required="1" Valid="1"> 
        <Description Lang="en">Default note subject.</Description>
        <Description Lang="de">Standardtext im Betreff einer Notiz.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">$Text{"Note!"}</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::NoteSubject'} = '$Text{"Note!"}';  -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::NoteText" Required="1" Valid="1"> 
        <Description Lang="en">Default note text.</Description>
        <Description Lang="de">Standardtext im Textfeld einer Notiz.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <TextArea></TextArea>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::NoteText'} = '';  -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::PendingSubject" Required="1" Valid="1"> 
        <Description Lang="en">Default text in the subject of pending tickets.</Description>
        <Description Lang="de">Standardtext im Betreff für anstehende (pendig) Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">Pending!</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PendingSubject'} = 'Pending!';  -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::PendingText" Required="1" Valid="1"> 
        <Description Lang="en">Default text for pending tickets.</Description>
        <Description Lang="de">Standardtext für anstehende (pending) Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PendingText'} = '';  -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::PendingState" Required="1" Valid="1"> 
        <Description Lang="en">Default state of pending ticket.</Description>
        <Description Lang="de">Standard Status für anstehende (pending) Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">pending reminder</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::PendingState'} = 'pending reminder';  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::DefaultPendingNextStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for pending tickets.</Description>
        <Description Lang="de">Nächst mögliche Stati für anstehende (pending) Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>pending reminder</Item>
                <Item>pending auto</Item> 
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultPendingNextStateType'} = ['pending reminder', 'pending auto']; -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::CloseNoteType" Required="1" Valid="1"> 
        <Description Lang="en">Default note type for closed tickets.</Description>
        <Description Lang="de">Standard Notiz Typ für geschlossene Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">note-internal</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::CloseNoteType'} = 'note-internal'  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::CloseSubject" Required="1" Valid="1"> 
        <Description Lang="en">Default text for subject of closed tickets.</Description>
        <Description Lang="de">Textvorgabe für den Betreff bei geschlossenen Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">Close!</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::CloseSubject'} = 'Close!';  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::CloseText" Required="1" Valid="1"> 
        <Description Lang="en">Default text for closed tickets.</Description>
        <Description Lang="de">Standardtext für geschlossene Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <TextArea></TextArea>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::CloseText'} = '';  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::CloseState" Required="1" Valid="1"> 
        <Description Lang="en">Default state for closed tickets.</Description>
        <Description Lang="de">Standard Status für geschlossene Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">closed successful</String>
        </Setting>
        <!--  $Self->{'Ticket::Frontend::CloseState'} = 'closed successful';  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::DefaultCloseNextStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for close tickets.</Description>
        <Description Lang="de">Nächst möglicher Status für geschlossene Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>closed</Item>                        
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultCloseNextStateType'} = ['closed'];   -->
    </ConfigItem>         
    <ConfigItem Name="Ticket::DefaultNextComposeType" Required="1" Valid="1"> 
        <Description Lang="en">Default compose next state.</Description>
        <Description Lang="de">Standardmäßig eingestellter Status für die Erstellung eines nächsten neuen Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">open</String>
        </Setting>
        <!--   $Self->{'Ticket::DefaultNextComposeType'} = 'open';  -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::DefaultNextComposeStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for compose message.</Description>
        <Description Lang="de">Nächst mögliche Stati für die Erstellung von Ticktes.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>closed</Item>                        
                <Item>pending auto</Item>                        
                <Item>pending reminder</Item>                                                                
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultNextComposeStateType'} = ['open', 'closed', 'pending auto', 'pending reminder'];   -->
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::ResponseFormat" Required="1" Valid="1">
        <Description Lang="en">Format of responses.</Description>
        <Description Lang="de">Textformat für Responses.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <TextArea>$Data{"Salutation"}
$Data{"OrigFrom"} $Text{"wrote"}:
$Data{"Body"}

$Data{"StdResponse"}

$Data{"Signature"}
</TextArea>
        </Setting>
        <!--                    
            # unix_style
            $Self->{'Ticket::Frontend::ResponseFormat'} = '$Data{"Salutation"}
            $Data{"OrigFrom"} $Text{"wrote"}:
            $Data{"Body"}

            $Data{"StdResponse"}

            $Data{"Signature"}
            ';
            # ms_style
            #    $Self->{'Ticket::Frontend::ResponseFormat'} = '$Data{"Salutation"}
            #
            #$Data{"StdResponse"}
            #
            #$Data{"Signature"}
            #
            #$Data{"OrigFrom"} $Text{"wrote"}:
            #$Data{"Body"}
            #';        
        -->
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::BounceState" Required="1" Valid="1"> 
        <Description Lang="en">Default bounce next state.</Description>
        <Description Lang="de">Nächster standardmäßiger Status bei Bounces.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">closed successful</String>
        </Setting>
        <!--   $Self->{'Ticket::Frontend::BounceState'} = 'closed successful';  -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::DefaultNextBounceStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for bounced message.</Description>
        <Description Lang="de">Nächst mögliche Stati für gebouncete Nachrichten.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>closed</Item>                                                                                    
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultNextBounceStateType'} = ['open', 'closed'];  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::BounceText" Required="1" Valid="1"> 
        <Description Lang="en">Default note text</Description>
        <Description Lang="de">Standardnotiztext beim bouncen einer Email</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <TextArea>Your email with ticket number "&lt;OTRS_TICKET&gt;" is bounced to "&lt;OTRS_BOUNCE_TO&gt;". Contact this address for further informations.</TextArea>
        </Setting>
        <!--       
        $Self->{'Ticket::Frontend::BounceText'} = 'Your email with ticket number "<OTRS_TICKET>" '.
        'is bounced to "<OTRS_BOUNCE_TO>". Contact this address for further informations.';
        -->
    </ConfigItem>  
    <ConfigItem Name="Ticket::DefaultNextForwardStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for forwarded message.</Description>
        <Description Lang="de">Mögliche Stati für weitergeleitete Nachrichten.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>open</Item>
                <Item>closed</Item>                                                                                    
            </Array>
        </Setting>
        <!--  $Self->{'Ticket::DefaultNextForwardStateType'} = ['open', 'closed'];  -->
    </ConfigItem>          
    <ConfigItem Name="Ticket::Frontend::ForwardArticleTypes" Required="1" Valid="1">
        <Description Lang="en">Possible email types.</Description>
        <Description Lang="de">Mögliche Email-Typen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>email-external</Item>
                <Item>email-internal</Item>                                                                                    
            </Array>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::ForwardArticleTypes'} = [
                'email-external',
                'email-internal',
            ];        
        -->
    </ConfigItem>   
    <ConfigItem Name="Ticket::Frontend::ForwardArticleType" Required="1" Valid="1"> 
        <Description Lang="en">Default type of forwarded message.</Description>
        <Description Lang="de">Standard Typ für weitergeleitete Nachrichten.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">email-external</String>
        </Setting>
        <!--   $Self->{'Ticket::Frontend::ForwardArticleType'} = 'email-external';  -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::ViewableSenderTypes" Required="1" Valid="1">
        <Description Lang="en">Which sender types are viewable by default (default:  customer)?</Description>
        <Description Lang="de">Welche Sender Typen sind standardmäßig sichtbar (Default: customer)?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>'customer'</Item>                                                                                    
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::ViewableSenderTypes'} = ["'customer'"];  -->
    </ConfigItem>     
    <ConfigItem Name="Ticket::ViewableLocks" Required="1" Valid="1">
        <Description Lang="en">Which locks are viewable? Default: unlock, tmp_lock.</Description>
        <Description Lang="de">Welche Locks sollen angezeigt werden? Default: unlock, tmp_lock.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>'unlock'</Item>     
                <Item>'tmp_lock'</Item>                                                                                                                                                                                   
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::ViewableLocks'} = ["'unlock'", "'tmp_lock'"];  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::ViewableStateType" Required="1" Valid="1">
        <Description Lang="en">Which state types for a ticket do you want to display?</Description>
        <Description Lang="de">Welche Stati für Tickets sollen angezeigt werden?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>new</Item>     
                <Item>open</Item>
                <Item>pending reminder</Item>     
                <Item>pending auto</Item>
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::ViewableStateType'} = ['new', 'open', 'pending reminder', 'pending auto'];  -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::UnlockStateType" Required="1" Valid="1">
        <Description Lang="en">What are the states for unlocked tickets? You can unlock tickets with the script "bin/UnlockTickets.pl".</Description>
        <Description Lang="de">Welche Stati soll für nicht gelockte Ticketes verwendet werden? Sie können Tickets mit Hilfe des Skripts "bin/UnlockTickets.pl" in diesen Status versetzen.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>new</Item>     
                <Item>open</Item>
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::UnlockStateType'} = ['open', 'new'];  -->
    </ConfigItem>       
    <ConfigItem Name="Ticket::PendingReminderStateType" Required="1" Valid="1">
        <Description Lang="en">State type für reminder for pending tickets.</Description>
        <Description Lang="de">Status für die Erinnerung an wartende Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>pending reminder</Item>
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::PendingReminderStateType'} = ['pending reminder'];  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::PendingAutoStateType" Required="1" Valid="1">
        <Description Lang="en">What are the states for pending tickets that changed state after reached time limit?</Description>
        <Description Lang="de">In welche Stati können anstehende (pending) Tickets versetzt werden, für die das Zeitlimit erreicht wurde?</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>pending auto</Item>                                                                                                                                                                                         
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::PendingAutoStateType'} = ['pending auto'];  -->
    </ConfigItem>    
    <ConfigItem Name="Ticket::StateAfterPending" Required="1" Valid="1">
        <Description Lang="en">States after pending time has reached.</Description>
        <Description Lang="de">Status den das Ticket bekommt nach dem die Pendingzeit abgelaufen ist.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="pending auto close+">closed successful</Item>
                <Item Key="pending auto close-">closed unsuccessful</Item>                
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::StateAfterPending'} = {
                'pending auto close+' => 'closed successful',
                'pending auto close-' => 'closed unsuccessful',
            };   
        -->        
    </ConfigItem>           
    <ConfigItem Name="CustomerDBLink" Required="1" Valid="1"> 
        <Description Lang="en">External link to customer db. E.g. 'http://yourhost/customer.php?CID=$Data{"CustomerID"}' or ''</Description>
        <Description Lang="de">Standardlink zur Customer-Datenbank. z.B. 'http://yourhost/customer.php?CID=$Data{"CustomerID"}' oder ''</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">$Env{"CGIHandle"}?Action=AgentTicketCustomer&TicketID=$Data{"TicketID"}</String>
        </Setting>
        <!--   
        #    $Self->{CustomerDBLink} = 'http://yourhost/customer.php?CID=$Data{"CustomerID"}';
             $Self->{CustomerDBLink} = '$Env{"CGIHandle"}?Action=AgentTicketCustomer&TicketID=$Data{"TicketID"}';
        #    $Self->{CustomerDBLink} = '';          
        -->
    </ConfigItem> 
    <ConfigItem Name="CustomerDBLinkTarget" Required="1" Valid="1"> 
        <Description Lang="en">Target attribute in Link to external customer DB. E.g. 'target="cdb"'.</Description>
        <Description Lang="de">Target-Attribut für den Link zur externen Customer-DB. Z.B. 'Target="cdb"'.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!--   
             $Self->{CustomerDBLinkTarget} = '';
        #    $Self->{CustomerDBLinkTarget} = 'target="cdb"';  
        -->
    </ConfigItem>  
    <ConfigItem Name="SystemStatsMap###Ticket::Stats1" Required="1" Valid="1">
        <Description Lang="en">Module to print stats about new tickets. Possible values: Print, CSV, GraphLine, GraphBars, GraphPie.</Description>
        <Description Lang="de">Modul für die Ausgabe von Statistiken für neue Tickets. Mögliche Ausgabeformate: Print, CSV, GraphLine, GraphBars und GraphPie.</Description>
        <Group>Ticket</Group>
        <SubGroup>Stats</SubGroup>
        <Setting>
            <Hash>
	        <Item Key="Name">New Tickets</Item>
                <Item Key="Module">Kernel::System::Stats::NewTickets</Item>
                <Item Key="Desc">New created tickets for each queue in selected month</Item>
                <Item Key="SumCol">1</Item>
                <Item Key="SumRow">1</Item>
                <Item Key="UseResultCache">
                    <Option SelectedID="0">
                        <Item Key="0">No</Item>
                        <Item Key="1">Yes</Item>
                    </Option>
                </Item>
                <Item Key="Output">
                    <Array>
                        <Item>Print</Item>
                        <Item>CSV</Item>
                        <Item>Graph</Item>
                    </Array>
                </Item>
                <Item Key="OutputDefault">Print</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{SystemStatsMap}->{"Ticket::Stats1"} = {
                Name => 'New Tickets',
                Module => 'Kernel::System::Stats::NewTickets',
                Desc => 'New created tickets for each queue in selected month.',
                SumCol => 1,
                SumRow => 1,
                # UseResultCache => 1,
                # Output => ['Print', 'CSV', 'GraphLine', 'GraphBars', 'GraphPie'],
                Output => ['Print', 'CSV', 'Graph'],
                OutputDefault => 'Print',
            }
        -->            
    </ConfigItem>
    <ConfigItem Name="SystemStatsMap###Ticket::Stats2" Required="1" Valid="1">
        <Description Lang="en">Module to generate a overview of tickets in a queue at the end of a month. Possible output options are Print, CSV, GraphLine, GraphBars and GraphPie.</Description>
        <Description Lang="de">Modul für die Generierung von Statistiken für Tickets in einer Queue am Ende eines Monats. Mögliche Ausgabeformate: Print, CSV, GraphLine, GraphBars und GraphPie.</Description>
        <Group>Ticket</Group>
        <SubGroup>Stats</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Name">Ticket Overview</Item>
                <Item Key="Module">Kernel::System::Stats::TicketOverview</Item>
                <Item Key="Desc">Overview of the tickets in queue at the end of this month</Item>
                <Item Key="SumCol">1</Item>
                <Item Key="SumRow">1</Item>
                <Item Key="UseResultCache">
                    <Option SelectedID="1">
                        <Item Key="0">No</Item>
                        <Item Key="1">Yes</Item>
                    </Option>
                </Item>
                <Item Key="Output">
                    <Array>
                        <Item>Print</Item>
                        <Item>CSV</Item>
                        <Item>Graph</Item>
                    </Array>
                </Item>
                <Item Key="OutputDefault">Print</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{SystemStatsMap}->{"Ticket::Stats2"} = {
                Name => 'Ticket Overview',
                Module => 'Kernel::System::Stats::TicketOverview',
                Desc => 'Overview of the tickets in queue at the end of this month.',
                SumCol => 1,
                SumRow => 1,
                UseResultCache => 1,
                # Output => ['Print', 'CSV', 'GraphLine', 'GraphBars', 'GraphPie'],
                Output => ['Print', 'CSV', 'Graph'],
                OutputDefault => 'Print',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="SystemStatsMap###Ticket::Stats4" Required="1" Valid="1">
        <Description Lang="en">Module to trace system activities (Replacement of old bin/mkStats.pl). Possible output options are Print, CSV, GraphLine, GraphBars and GraphPie.</Description>
        <Description Lang="de">Modul für eine Übersicht über die Systemaktivität  (Ersetzt das Skript "bin/mkStats.pl"). Mögliche Ausgabeformate: Print, CSV, GraphLine, GraphBars und GraphPie.</Description>
        <Group>Ticket</Group>
        <SubGroup>Stats</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Name">State Action Overview</Item>
                <Item Key="Module">Kernel::System::Stats::StateAction</Item>
                <Item Key="Desc">Trace system activities (Replacement of old bin/mkStats.pl</Item>
                <Item Key="SumCol">1</Item>
                <Item Key="SumRow">1</Item>
                <Item Key="UseResultCache">
                    <Option SelectedID="0">
                        <Item Key="0">No</Item>
                        <Item Key="1">Yes</Item>
                    </Option>
                </Item>
                <Item Key="Output">
                    <Array>
                        <Item>Print</Item>
                        <Item>CSV</Item>
                        <Item>Graph</Item>
                    </Array>
                </Item>
                <Item Key="OutputDefault">Graph</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{SystemStatsMap}->{"Ticket::Stats4"} = {
                Name => 'State Action Overview',
                Module => 'Kernel::System::Stats::StateAction',
                Desc => 'Trace system activities (Replacement of old bin/mkStats.pl).',
                SumCol => 1,
                SumRow => 1,
                # UseResultCache => 1,
                # Output => ['Print', 'CSV', 'GraphLine', 'GraphBars', 'GraphPie'],
                Output => ['Print', 'CSV', 'Graph'],
                OutputDefault => 'Graph',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="SystemStatsMap###Ticket::Stats5" Required="1" Valid="1">
        <Description Lang="en">Module to create a list about accounted time per customer. Possible values for the output are Print and CSV.</Description>
        <Description Lang="de">Ein Modul für die Ausgabe einer Liste der Zeiten, die für die verschiedenen Customer innerhalb des Systems gearbeitet wurde. Mögliche Ausgabeformate: Print und CSV.</Description>
        <Group>Ticket</Group>
        <SubGroup>Stats</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Name">Time Accounting</Item>
                <Item Key="Module">Kernel::System::Stats::AccountedTime</Item>
                <Item Key="Desc">A list about accounted time per customer</Item>
                <Item Key="UseResultCache">
                    <Option SelectedID="0">
                        <Item Key="0">No</Item>
                        <Item Key="1">Yes</Item>
                    </Option>
                </Item>
                <Item Key="Output">
                    <Array>
                        <Item>Print</Item>
                        <Item>CSV</Item>
                    </Array>
                </Item>
                <Item Key="OutputDefault">Print</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{SystemStatsMap}->{"Ticket::Stats5"} = {
                Name => 'Time Accounting',
                Module => 'Kernel::System::Stats::AccountedTime',
                Desc => 'A list about accounted time per customer.',
                # UseResultCache => 1,
                Output => ['Print', 'CSV'],
                OutputDefault => 'Print',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="LinkObject###Ticket" Required="1" Valid="1">
        <Description Lang="en">Objects that can be linked.</Description>
        <Description Lang="de">Objekte, die verknüpft werden können.</Description>
        <Group>Ticket</Group>
        <SubGroup>LinkObject</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Name">Ticket Object</Item>
                <Item Key="Type">Object</Item>
                <Item Key="LinkObjects">
                    <Array>
                        <Item>Ticket</Item>
                        <Item>FAQ</Item>
                    </Array>
                </Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'LinkObject'}->{'Ticket'} = {
                Name => 'Ticket Object',
                Type => 'Object',
                LinkObjects => ['Ticket', 'FAQ'],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::NavBarModule###1-Ticket::LockedTickets" Required="0" Valid="1">
        <Description Lang="en">Agent interface notification module to check the used charset.</Description>
        <Description Lang="de">Modul mit dem Agents über das Agent-Interface über den Zeichensatz von Tickets benachrichtigt werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendNavBarModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::NavBarLockedTickets</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Frontend::NavBarModule'}->{'1-Ticket::LockedTickets'} = {
                Module => 'Kernel::Output::HTML::NavBarLockedTickets',
            };
        -->        
    </ConfigItem>  
    <ConfigItem Name="Frontend::NavBarModule###2-Ticket::BulkAction" Required="0" Valid="1">
        <Description Lang="en">Module registration for the BulkAction object in the agent interface.</Description>
        <Description Lang="de">Modul-Registration für das BulkAction-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendNavBarModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::NavBarTicketBulkAction</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Frontend::NavBarModule'}->{'2-Ticket::BulkAction'} = {
                Module => 'Kernel::Output::HTML::NavBarTicketBulkAction',
            };
        -->        
    </ConfigItem>  
    <ConfigItem Name="Frontend::NotifyModule###3-Ticket::AgentTicketSeen" Required="1" Valid="1">
        <Description Lang="en">Modul for the agent interface that to sets tickets to "seen".</Description>
        <Description Lang="de">Modul für das Agent-Interface, das Tickets in den Status "seen" setzt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModuleNotify</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::NotificationAgentTicketSeen</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Frontend::NotifyModule'}->{'3-Ticket::AgentTicketSeen'} = {
                Module => 'Kernel::Output::HTML::NotificationAgentTicketSeen',
            };
        -->        
    </ConfigItem>      
    <ConfigItem Name="Frontend::NotifyModule###4-Ticket::TicketNotify" Required="1" Valid="1">
        <Description Lang="en">Module to show agents important tickets via the agent interface.</Description>
        <Description Lang="de">Modul, das den Agents auf wichtige Tickets aufmerksam macht.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModuleNotify</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::NotificationAgentTicket</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Frontend::NotifyModule'}->{'4-Ticket::TicketNotify'} = {
                Module => 'Kernel::Output::HTML::NotificationAgentTicket',
            };
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::ArticleViewModule###1-PGP" Required="1" Valid="1">
        <Description Lang="en">Agent interface article notification module to check pgp.</Description>
        <Description Lang="de">Ein Agent-Interface-Artikel-Notiz-Modul um den PGP-Schlüssel zu checken.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleCheckPGP</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleViewModule'}->{'1-PGP'} = {
                Module => 'Kernel::Output::HTML::ArticleCheckPGP',
            };
        -->        
    </ConfigItem>           
    <ConfigItem Name="Ticket::Frontend::ArticleViewModule###1-SMIME" Required="1" Valid="1">
        <Description Lang="en">Agent interface article notification module to check smime.</Description>
        <Description Lang="de">Ein Agent-Interface-Artikel-Notiz-Modul um den SMIME-Schlüssel zu checken?.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleCheckSMIME</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleViewModule'}->{'1-SMIME'} = {
                Module => 'Kernel::Output::HTML::ArticleCheckSMIME',
            };  
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::ArticlePreViewModule###1-PGP" Required="1" Valid="1">
        <Description Lang="en">Agent interface article notification module to check pgp.</Description>
        <Description Lang="de">Modul für die Vorschau von Nachrichten mit PGP.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleCheckPGP</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticlePreViewModule'}->{'1-PGP'} = {
                Module => 'Kernel::Output::HTML::ArticleCheckPGP',
            };
        -->        
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::ArticlePreViewModule###1-SMIME" Required="1" Valid="1">
        <Description Lang="en">Agent interface article notification module to check smime.</Description>
        <Description Lang="de">Module für die Vorschau von mit S/MIME verschlüsselten Nachrichten.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleCheckSMIME</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticlePreViewModule'}->{'1-SMIME'} = {
                Module => 'Kernel::Output::HTML::ArticleCheckSMIME',
            };
        -->        
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::ArticleComposeModule###1-SignEmail" Required="1" Valid="1">
        <Description Lang="en">Module to compose signed messages (PG or S/MIME).</Description>
        <Description Lang="de">Modul zum Erstellen signierter Nachrichten (PGP oder S/MIME).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleComposeSign</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleComposeModule'}->{'1-SignEmail'} = {
                Module => 'Kernel::Output::HTML::ArticleComposeSign',
            };
        -->        
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::ArticleComposeModule###2-CryptEmail" Required="1" Valid="1">
        <Description Lang="en">Module to crypt composed messages (PGP or s/MIME).</Description>
        <Description Lang="de">Modul zum Verschlüsseln von neu erstellen Nachrichten (PGP oder S/MIME).</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleComposeCrypt</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleComposeModule'}->{'2-CryptEmail'} = {
                Module => 'Kernel::Output::HTML::ArticleComposeCrypt',
            };
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::ArticleAttachmentModule###1-Download" Required="1" Valid="1">
        <Description Lang="en">Links in agent zoom for attachments to download.</Description>
        <Description Lang="de">Links um im AgentZoom Attachments zum Download anzubieten.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleAttachmentDownload</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleAttachmentModule'}->{'1-Download'} = {
                Module => 'Kernel::Output::HTML::ArticleAttachmentDownload',
            };
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::ArticleAttachmentModule###2-HTML-Viewer" Required="1" Valid="1">
        <Description Lang="en">Links in agent zoom for attachments html online viewer.</Description>
        <Description Lang="de">Links um im AgentZoom HTML-Attachments ansehen zu können.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::ArticleAttachmentHTMLViewer</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::ArticleAttachmentModule'}->{'2-HTML-Viewer'} = {
                Module => 'Kernel::Output::HTML::ArticleAttachmentHTMLViewer',
            };
        -->        
    </ConfigItem>       
    <ConfigItem Name="Ticket::Frontend::MenuModule###000-Back" Required="0" Valid="1">
        <Description Lang="en">Module to show back link in menu.</Description>
        <Description Lang="de">Über dieses Modul werden die Zurück-Links in der Linkleiste angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Back</Item>
                <Item Key="Description">Back</Item>
                <Item Key="Action"></Item>
                <Item Key="Link">$Env{"LastScreenOverview"}&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::MenuModule'}->{'000-Back'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Back',
                Description => 'Back',
                Action => '',
                Link => '$Env{"LastScreenOverview"}&TicketID=$QData{"TicketID"}',
            };
        -->        
    </ConfigItem>  
    <ConfigItem Name="Ticket::Frontend::MenuModule###100-Lock" Required="0" Valid="1">
        <Description Lang="en">Module to show lock/unlock link in menu.</Description>
        <Description Lang="de">Über dieses Modul werden die Sperren- bzw. Freigeben-Links in der Linkleiste angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuLock</Item>
                <Item Key="Name">Lock</Item>
                <Item Key="Action">AgentTicketLock</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::MenuModule'}->{'100-Lock'} = {
                Module => 'Kernel::Output::HTML::TicketMenuLock',
                Name => 'Lock',
                Action => 'AgentTicketLock',
            };
        -->        
    </ConfigItem>      
    <ConfigItem Name="Ticket::Frontend::MenuModule###200-History" Required="0" Valid="1">
        <Description Lang="en">Module to show history link in menu.</Description>
        <Description Lang="de">Über dieses Modul werden die Historie-Links in der Linkleiste angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">History</Item>
                <Item Key="Description">Shows the ticket history!</Item>
                <Item Key="Action">AgentTicketHistory</Item>
                <Item Key="Link">Action=AgentTicketHistory&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::MenuModule'}->{'200-History'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'History',
                Action => 'AgentTicketHistory',
                Description => 'Shows the ticket history!',
                Link => 'Action=AgentTicketHistory&TicketID=$QData{"TicketID"}',
            };        
        -->        
    </ConfigItem>    
    <ConfigItem Name="Ticket::Frontend::MenuModule###210-Print" Required="0" Valid="1">
        <Description Lang="en">Module to show print link in menu.</Description>
        <Description Lang="de">Über dieses Modul werden die Drucken-Links in der Linkleiste angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Print</Item>
                <Item Key="Description">Print this ticket!</Item>
                <Item Key="Action">AgentTicketPrint</Item>
                <Item Key="Link">Action=AgentTicketPrint&TicketID=$QData{"TicketID"}</Item>
                <Item Key="LinkParam">target="print"</Item>                
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::MenuModule'}->{'210-Print'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Print',
                Action => 'AgentTicketPrint',
                Description => 'Print this ticket!',
                Link => 'Action=AgentTicketPrint&TicketID=$QData{"TicketID"}',
                LinkParam => 'target="print"',
            };   
        -->        
    </ConfigItem>     
    <ConfigItem Name="Ticket::Frontend::MenuModule###300-Priority" Required="0" Valid="1">
        <Description Lang="en">Module to show priority link in menu.</Description>
        <Description Lang="de">Über dieses Modul werden die Priorität-Links in der Linkleiste angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Priority</Item>
                <Item Key="Description">Change the ticket priority!</Item>
                <Item Key="Action">AgentTicketPriority</Item>
                <Item Key="Link">Action=AgentTicketPriority&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!-- 
            $Self->{'Ticket::Frontend::MenuModule'}->{'300-Priority'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Priority',
                Action => 'AgentTicketPriority',
                Description => 'Change the ticket priority!',
                Link => 'Action=AgentTicketPriority&TicketID=$QData{"TicketID"}',
            };
        -->        
    </ConfigItem>        
    <ConfigItem Name="Ticket::Frontend::MenuModule###310-FreeText" Required="0" Valid="1">
        <Description Lang="en">Module to show free text link in menu.</Description>
        <Description Lang="de">Frei definierten Textlink im Menü anzeigen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Free Fields</Item>
                <Item Key="Description">Change the ticket free fields!</Item>
                <Item Key="Action">AgentTicketFreeText</Item>
                <Item Key="Link">Action=AgentTicketFreeText&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'310-FreeText'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Free Fields',
                Action => 'AgentTicketFreeText',
                Description => 'Change the ticket free fields!',
                Link => 'Action=AgentTicketFreeText&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::MenuModule###320-Link" Required="0" Valid="1">
        <Description Lang="en">Module to show link to link a ticket with another object.</Description>
        <Description Lang="de">Über dieses Modul wird ein Link im Menü angezeigt, mit dem ein Ticket mit einem anderen Objekt verknüpft werden kann.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Link</Item>
                <Item Key="Description">Link this ticket to an other objects!</Item>
                <Item Key="Action">AgentLinkObject</Item>
                <Item Key="Link">Action=AgentLinkObject&SourceObject=Ticket&SourceID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'320-Link'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Link',
                Action => 'AgentLinkObject',
                Description => 'Link this ticket to an other objects!',
                Link => 'Action=AgentLinkObject&SourceObject=Ticket&SourceID=$QData{"TicketID"}',
            };
        -->
     </ConfigItem>
     <ConfigItem Name="Ticket::Frontend::MenuModule###400-Owner" Required="0" Valid="1">
        <Description Lang="en">Module to show owner link in menu.</Description>
        <Description Lang="de">Dieses Modul zeigt einen Link zum Besitzer eines Tickets im Menü an.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Owner</Item>
                <Item Key="Description">Change the ticket owner!</Item>
                <Item Key="Action">AgentTicketOwner</Item>
                <Item Key="Link">Action=AgentTicketOwner&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'400-Owner'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Owner',
                Action => 'AgentTicketOwner',
                Description => 'Change the ticket owner!',
                Link => 'Action=AgentTicketOwner&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::MenuModule###410-Customer" Required="0" Valid="1">
        <Description Lang="en">Module to show customer link in menu.</Description>
        <Description Lang="de">Modul zur Anzeige des Customer-Links im Menü.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Customer</Item>
                <Item Key="Description">Change the ticket customer!</Item>
                <Item Key="Action">AgentTicketCustomer</Item>
                <Item Key="Link">Action=AgentTicketCustomer&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'410-Customer'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Customer',
                Action => 'AgentTicketCustomer',
                Description => 'Change the ticket customer!',
                Link => 'Action=AgentTicketCustomer&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::MenuModule###420-Note" Required="0" Valid="1">
        <Description Lang="en">Module to show link to note in menu.</Description>
        <Description Lang="de">Modul zur Anzeiche des Notiz-Links innerhalb des Menüs.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Note</Item>
                <Item Key="Description">Add a note to this ticket!</Item>
                <Item Key="Action">AgentTicketNote</Item>
                <Item Key="Link">Action=AgentTicketNote&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'420-Note'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Note',
                Action => 'AgentTicketNote',
                Description => 'Add a note to this ticket!',
                Link => 'Action=AgentTicketNote&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::MenuModule###430-Pending" Required="0" Valid="1">
        <Description Lang="en">Module to show pending link in menu.</Description>
        <Description Lang="de">Über dieses Modul kann der Link für "Warten" (pending) im Menü angezeigt werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Pending</Item>
                <Item Key="Description">Set this ticket to pending</Item>
                <Item Key="Action">AgentTicketPending</Item>
                <Item Key="Link">Action=AgentTicketPending&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'430-Pending'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Pending',
                Action => 'AgentTicketPending',
                Description => 'Set this ticket to pending!',
                Link => 'Action=AgentTicketPending&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::MenuModule###440-Close" Required="0" Valid="1">
        <Description Lang="en">Module to show close link in menu.</Description>
        <Description Lang="de">Über dieses Modul wird der Link zum schließen eines Tickets im Menü angezeigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Close</Item>
                <Item Key="Description">Close this ticket</Item>
                <Item Key="Action">AgentTicketClose</Item>
                <Item Key="Link">AgentTicketClose&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::MenuModule'}->{'440-Close'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Close',
                Action => 'AgentTicketClose',
                Description => 'Close this ticket!',
                Link => 'Action=AgentTicketClose&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###100-Lock" Required="0" Valid="1">
        <Description Lang="en">Show lock / unlock link</Description>
        <Description Lang="de">Link für gesperrt / nicht gesperrt anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuLock</Item>
                <Item Key="Name">Lock</Item>
                <Item Key="Action">AgentTicketLock</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'100-Lock'} = {
                Module => 'Kernel::Output::HTML::TicketMenuLock',
                Name => 'Lock',
                Action => 'AgentTicketLock',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###200-Zoom" Required="0" Valid="1">
        <Description Lang="en">Show zoom link</Description>
        <Description Lang="de">Link zum Zoomen anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Zoom</Item>
                <Item Key="Action">AgentTicketZoom</Item>
                <Item Key="Description">Look into a ticket!</Item>
                <Item Key="Link">Action=AgentTicketZoom&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'200-Zoom'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Zoom',
                Action => 'AgentTicketZoom',
                Description => 'Look into a ticket!',
                Link => 'Action=AgentTicketZoom&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###210-History" Required="0" Valid="1">
        <Description Lang="en">Show history link</Description>
        <Description Lang="de">History Link anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">History</Item>
                <Item Key="Action">AgentTicketHistory</Item>
                <Item Key="Description">Shows the ticket history!</Item>
                <Item Key="Link">Action=AgentTicketHistory&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'210-History'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'History',
                Action => 'AgentTicketHistory',
                Description => 'Shows the ticket history!',
                Link => 'Action=AgentTicketHistory&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###300-Priority" Required="0" Valid="1">
        <Description Lang="en">Show priority link</Description>
        <Description Lang="de">Link für die Priorität anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Priority</Item>
                <Item Key="Action">AgentTicketPriority</Item>
                <Item Key="Description">Change the ticket priority!</Item>
                <Item Key="Link">Action=AgentTicketPriority&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'300-Priority'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Priority',
                Action => 'AgentTicketPriority',
                Description => 'Change the ticket priority!',
                Link => 'Action=AgentTicketPriority&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###420-Note" Required="0" Valid="1">
        <Description Lang="en">Show note link</Description>
        <Description Lang="de">Link für eine Notiz anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Note</Item>
                <Item Key="Action">AgentTicketNote</Item>
                <Item Key="Description">Add a note to this ticket!</Item>
                <Item Key="Link">Action=AgentTicketNote&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'420-Note'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Note',
                Action => 'AgentTicketNote',
                Description => 'Add a note to this ticket!',
                Link => 'Action=AgentTicketNote&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###440-Close" Required="0" Valid="1">
        <Description Lang="en">Show close link</Description>
        <Description Lang="de">Link zum Schließen anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Close</Item>
                <Item Key="Action">AgentTicketClose</Item>
                <Item Key="Description">Close this ticket!</Item>
                <Item Key="Link">Action=AgentTicketClose&TicketID=$QData{"TicketID"}</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Frontend::PreMenuModule'}->{'440-Close'} = {
                Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                Name => 'Close',
                Action => 'AgentTicketClose',
                Description => 'Close this ticket!',
                Link => 'Action=AgentTicketClose&TicketID=$QData{"TicketID"}',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###450-Delete" Required="0" Valid="0">
        <Description Lang="en">Show delete link</Description>
        <Description Lang="de">Link zum Löschen anzeigen</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Delete</Item>
                <Item Key="Action">AgentTicketMove</Item>
                <Item Key="Description">Delete this ticket!</Item>
                <Item Key="Link">Action=AgentTicketMove&TicketID=$Data{"TicketID"}&DestQueue=Delete</Item>
            </Hash>
        </Setting>
        <!--
            # $Self->{'Ticket::Frontend::PreMenuModule'}->{'450-Delete'} = {
                # Module => 'Kernel::Output::HTML::TicketMenuGeneric',
                # Name => 'Delete',
                # Action => 'AgentTicketMove',
                # Description => 'Delete this ticket!',
                # Link => 'Action=AgentTicketMove&TicketID=$Data{"TicketID"}&DestQueue=Delete',
            # };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Frontend::PreMenuModule###460-Spam" Required="0" Valid="0">
        <Description Lang="en">Show spam link</Description>
        <Description Lang="de">Link zum Spam verarbeiten</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendPreMenuModule</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::TicketMenuGeneric</Item>
                <Item Key="Name">Spam</Item>
                <Item Key="Action">AgentTicketMove</Item>
                <Item Key="Description">Mark as Spam!</Item>
                <Item Key="Link">Action=AgentTicketMove&TicketID=$Data{"TicketID"}&DestQueue=Delete</Item>
            </Hash>
        </Setting>
    </ConfigItem>
    <ConfigItem Name="System::Permission" Required="1" Valid="1">
        <Description Lang="en">The different system permissions for tickets.</Description>
        <Description Lang="de">Die unterschiedlichen Zugriffsrechte innerhalb des Systems.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Array>
                <Item>ro</Item>
                <Item>move_into</Item>
                <Item>create</Item>
                <Item>owner</Item>
                <Item>priority</Item>
                <Item>rw</Item>
            </Array>
        </Setting>
        <!--
            $Self->{'System::Permission'} = ['ro', 'move_into', 'create', 'owner', 'priority', 'rw'];
            # $Self->{'System::Permission'} = ['ro', 'move_into', 'create', 'note', 'close', 'pending', 'owner', 'priority', 'customer', 'freetext', 'forward', 'bounce', 'move', 'rw'];
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Permission###1-OwnerCheck" Required="1" Valid="1">
        <Description Lang="en">MOdule to check the owner.</Description>
        <Description Lang="de">Modul zum Überprüfen des Eigentümers.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::Ticket::Permission::OwnerCheck</Item>
                <Item Key="Required">0</Item>
                <Item Key="Granted">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'Ticket::Permission'}->{'1-OwnerCheck'} = {
                Module => 'Kernel::System::Ticket::Permission::OwnerCheck',
                # if this check is needed
                Required => 0,
                # if this check is true, don't do more checks
                Granted => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Ticket::Permission###2-GroupCheck" Required="1" Valid="1">
        <Description Lang="en">Module to check, if a user is in a special group. Access is granted, if the user is in the specifyed group and has ro and rw permissions.</Description>
        <Description Lang="de">Modul zur Überprüfung, ob ein Benutzer in einer bestimmten Gruppe ist. Hat der Benutzer ro- und rw-Zugriffsrechte, wird der Zugriff erlaubt.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::Ticket::Permission::GroupCheck</Item>
                <Item Key="Required">0</Item>
                <Item Key="Granted">0</Item>
                </Hash>
        </Setting>
        <!--
           $Self->{'Ticket::Permission'}->{'2-GroupCheck'} = {
                Module => 'Kernel::System::Ticket::Permission::GroupCheck',
                # if this check is needed
                Required => 0,
                # if this check is true, don't do more checks
                Granted => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerTicket::Permission###1-CustomerUserIDCheck" Required="1" Valid="1">
        <Description Lang="en">Grant access, if customer ID is the same and group is accessable.</Description>
        <Description Lang="de">Den Zugriff erlauben, wenn die Customer ID übereinstimmt und auf die Gruppe zugegriffen werden darf.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::Ticket::CustomerPermission::CustomerUserIDCheck</Item>
                <Item Key="Required">0</Item>
                <Item Key="Granted">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'CustomerTicket::Permission'}->{'1-CustomerUserIDCheck'} = {
                Module => 'Kernel::System::Ticket::CustomerPermission::CustomerUserIDCheck',
                # if this check is needed
                Required => 0,
                # if this check is true, don't do more checks
                Granted => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerTicket::Permission###2-CustomerIDCheck" Required="1" Valid="1">
        <Description Lang="en">Module to check customer permissions.</Description>
        <Description Lang="de">Modul zum überprüfen der Rechte eines Customers.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::Ticket::CustomerPermission::CustomerIDCheck</Item>
                <Item Key="Required">1</Item>
                <Item Key="Granted">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'CustomerTicket::Permission'}->{'2-CustomerIDCheck'} = {
                Module => 'Kernel::System::Ticket::CustomerPermission::CustomerIDCheck',
                # if this check is needed
                Required => 1,
                # if this check is true, don't do more checks
                Granted => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerTicket::Permission###3-GroupCheck" Required="1" Valid="1">
        <Description Lang="en">Module to check the grouppermissions for the access to customer tickets.</Description>
        <Description Lang="de">Modul zur Überprüfung der Zugriffsrechte für Benutzergruppen auf Customer-Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::Ticket::CustomerPermission::GroupCheck</Item>
                <Item Key="Required">1</Item>
                <Item Key="Granted">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'CustomerTicket::Permission'}->{'3-GroupCheck'} = {
                Module => 'Kernel::System::Ticket::CustomerPermission::GroupCheck',
                # if this check is needed
                Required => 1,
                # if this check is true, don't do more checks
                Granted => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###NewTicketNotify" Required="1" Valid="1">
        <Description Lang="en">Parameters for the NewTicketNotify object in the preference view.</Description>
        <Description Lang="de">Parameter für das NewTicketNotify-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Mail Management</Item>
                <Item Key="Label">New ticket notification</Item>
                <Item Key="Desc">Send me a notification if there is a new ticket in "My Queues"</Item>
                <Item Key="Data">Get('YesNoOptions')</Item>
                <Item Key="PrefKey">UserSendNewTicketNotification</Item>
                <Item Key="Prio">1000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{NewTicketNotify} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Mail Management',
                Label => 'New ticket notification',
                Desc => 'Send me a notification if there is a new ticket in "My Queues".',
                Data => $Self->Get('YesNoOptions'),
                PrefKey => 'UserSendNewTicketNotification',
                Prio => 1000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###FollowUpNotify" Required="1" Valid="1">
        <Description Lang="en">Parameters for the FollowUpNotify object in the preference view.</Description>
        <Description Lang="de">Parameter für das FollowUpNotify-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Mail Management</Item>
                <Item Key="Label">Follow up notification</Item>
                <Item Key="Desc">Send me a notification if a customer sends a follow up and I'm the owner of this ticket</Item>
                <Item Key="Data">Get('YesNoOptions')</Item>
                <Item Key="PrefKey">UserSendFollowUpNotification</Item>
                <Item Key="Prio">2000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{FollowUpNotify} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Mail Management',
                Label => 'Follow up notification',
                Desc => "Send me a notification if a customer sends a follow up and I'm the owner of this ticket.",
                Data => $Self->Get('YesNoOptions'),
                PrefKey => 'UserSendFollowUpNotification',
                Prio => 2000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###LockTimeoutNotify" Required="1" Valid="1">
        <Description Lang="en">Parameters for the LockTimeoutNotify object in the preference view.</Description>
        <Description Lang="de">Parameter für das LockTimeoutNotify-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Mail Management"</Item>
                <Item Key="Label">Ticket lock timeout notification</Item>
                <Item Key="Desc">Send me a notification if a ticket is unlocked by the system</Item>
                <Item Key="Data">Self->Get('YesNoOptions</Item>
                <Item Key="PrefKey">UserSendLockTimeoutNotification</Item>
                <Item Key="Prio">3000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{LockTimeoutNotify} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Mail Management',
                Label => 'Ticket lock timeout notification',
                Desc => 'Send me a notification if a ticket is unlocked by the system.',
                Data => $Self->Get('YesNoOptions'),
                PrefKey => 'UserSendLockTimeoutNotification',
                Prio => 3000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###MoveNotify" Required="1" Valid="1">
        <Description Lang="en">Parameters for the MoveNotify object in the preference view.</Description>
        <Description Lang="de">Parameter für das MoveNotify-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Mail Management"</Item>
                <Item Key="Label">Move notification"</Item>
                <Item Key="Desc">Send me a notification if a ticket is moved into one of "My Queues"</Item>
                <Item Key="Data">Self->Get('YesNoOptions</Item>
                <Item Key="PrefKey">UserSendMoveNotification</Item>
                <Item Key="Prio">4000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{MoveNotify} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Mail Management',
                Label => 'Move notification',
                Desc => 'Send me a notification if a ticket is moved into one of "My Queues".',
                Data => $Self->Get('YesNoOptions'),
                PrefKey => 'UserSendMoveNotification',
                Prio => 4000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###CustomQueue" Required="1" Valid="1">
        <Description Lang="en">Parameters for the CustomQueue object in the preference view.</Description>
        <Description Lang="de">Parameter für das CustomQueue-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesCustomQueue</Item>
                <Item Key="Colum">Other Options</Item>
                <Item Key="Label">My Queues</Item>
                <Item Key="Desc">Your queue selection of your favorite queues. You also get notified about this queues via email if enabled.</Item>
                <Item Key="Prio">2000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{CustomQueue} = {
                Module => 'Kernel::Output::HTML::PreferencesCustomQueue',
                Colum => 'Other Options',
                Label => 'My Queues',
                Desc => 'Your queue selection of your favorite queues. You also get notified about this queues via email if enabled.',
                Prio => 2000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###RefreshTime" Required="1" Valid="1">
        <Description Lang="en">Parameters for the RefreshTime object in the preference view.</Description>
        <Description Lang="de">Parameter für das RefreshTime-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">QueueView refresh time</Item>
                <Item Key="Desc">Select your QueueView refresh time</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key="''">off</Item>
                        <Item Key="2">2 minutes</Item>
                        <Item Key="5">5 minutes</Item>
                        <Item Key="7">7 minutes</Item>
                        <Item Key="10">10 minutes</Item>
                        <Item Key="15">15 minutes</Item>
                    </Hash>
                </Item>
                <Item Key="PrefKey">UserRefreshTime</Item>
                <Item Key="Prio">3000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{RefreshTime} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'QueueView refresh time',
                Desc => 'Select your QueueView refresh time.',
                Data => {
                    '' => 'off',
                    2 => ' 2 minutes',
                    5 => ' 5 minutes',
                    7 => ' 7 minutes',
                    10 => '10 minutes',
                    15 => '15 minutes',
                },
                PrefKey => 'UserRefreshTime',
                Prio => 3000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###QueueView" Required="1" Valid="1">
        <Description Lang="en">Parameters for the QueueView object in the preference view.</Description>
        <Description Lang="de">Parameter für das QueueView-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">QueueView</Item>
                <Item Key="Desc">Select your frontend QueueView</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key=" AgentTicketQueueTicketView">Standard</Item>
                        <Item Key="AgentTicketQueueTicketViewLite">Lite</Item>
                    </Hash>
                </Item>
                <Item Key="DataSelected">AgentTicketQueueTicketView</Item>
                <Item Key="PrefKey">UserQueueView</Item>
                <Item Key="Prio">3000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{QueueView} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'QueueView',
                Desc => 'Select your frontend QueueView.',
                Data => {
                    AgentTicketQueueTicketView => 'Standard',
                    AgentTicketQueueTicketViewLite => 'Lite',
                },
                DataSelected => 'AgentTicketQueueTicketView',
                Prio => 3000,
                PrefKey => 'UserQueueView',
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###QueueViewShownTickets" Required="1" Valid="1">
        <Description Lang="en">Parameters for the QueueViewShowTickets object in the preference view.</Description>
        <Description Lang="de">Parameter für das QueueViewShowTickets-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">Shown Tickets</Item>
                <Item Key="Desc">Max. shown Tickets a page in QueueView</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key="10">10</Item>
                        <Item Key="15">15</Item>
                        <Item Key="20">20</Item>
                        <Item Key="25">25</Item>
                    </Hash>
                </Item>
                <Item Key="DataSelected">15</Item>
                <Item Key="PrefKey">UserQueueViewShowTickets</Item>
                <Item Key="Prio">4000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{PreferencesGroups}->{QueueViewShownTickets} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'Shown Tickets',
                Desc => 'Max. shown Tickets a page in QueueView.',
                Data => {
                    10 => 10,
                    15 => 15,
                    20 => 20,
                    25 => 25,
                },
                DataSelected => 15,
                PrefKey => 'UserQueueViewShowTickets',
                Prio => 4000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PreferencesGroups###CreateNextMask" Required="1" Valid="1">
        <Description Lang="en">Parameters for the CreateNextMask object in the preference view.</Description>
        <Description Lang="de">Parameter für das CreateNextMask-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">Screen after new ticket</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key="''">CreateTicket</Item>
                        <Item Key="AgentTicketZoom">TicketZoom</Item>
                    </Hash>
                </Item>
                <Item Key="DataSelected"></Item>
                <Item Key="PrefKey">UserCreateNextMask</Item>
                <Item Key="Prio">5000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
       <!--
            $Self->{PreferencesGroups}->{CreateNextMask} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'Screen after new ticket',
                Desc => 'Select your screen after creating a new ticket.',
                Data => {
                    '' => 'CreateTicket',
                    AgentTicketZoom => 'TicketZoom',
                },
                DataSelected => '',
                # DataSelected => 'AgentTicketZoom',
                PrefKey => 'UserCreateNextMask',
                Prio => 5000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerNotifyJustToRealCustomer" Required="1" Valid="1">
        <Description Lang="en">Send customer notifications just to mapped customer. Normally if no customer is mapped, the latest customer sender gets the notification.</Description>
        <Description Lang="de">Customer-Benachrichtigungen an bestimmte gemapte Customer verschicken. Standardmäßig wird nur der letzte Customer-Sender benachrichtigt.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No"</Item>
                <Item Key="1">Yes</Item>
            </Option>
        </Setting>
        <!-- $Self->{CustomerNotifyJustToRealCustomer} = 0; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPriority" Required="1" Valid="1">
        <Description Lang="en">Is the customer allowed to set the priority for a ticket?</Description>
        <Description Lang="de">Darf der Kunde die Priorität eines Tickets festlegen?</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No"</Item>
                <Item Key="1">Yes</Item>
            </Option>
        </Setting>
        <!-- $Self->{CustomerPriority} = 1; -->
    </ConfigItem>
    <ConfigItem Name="CustomerDefaultPriority}" Required="1" Valid="1">
        <Description Lang="en">Default priority of new customer tickets.</Description>
        <Description Lang="de">Standard Priorität von Customer-Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">3 normal</String>
        </Setting>
        <!--  $Self->{CustomerDefaultPriority} = '3 normal'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerDefaultState" Required="1" Valid="1">
        <Description Lang="en">Ddefault state of new customer tickets.</Description>
        <Description Lang="de">Standard Status neuer Customer-Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">new</String>
        </Setting>
        <!-- $Self->{CustomerDefaultState} = 'new'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerNextScreenAfterNewTicket" Required="1" Valid="1">
        <Description Lang="en">Next screen after new customer ticket.</Description>
        <Description Lang="de">Nächster Bildschirm nach neuem Customer-Ticket.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectecID="CustomerTicketOverView">
                <Item Key="CustomerTicketOverView">CustomerTicketOverView</Item>
                <Item Key="CustomerTicketZoom">CustomerTicketZoom</Item>
            </Option>
        </Setting>
        <!-- $Self->{CustomerNextScreenAfterNewTicket} = 'CustomerTicketOverView'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelArticleType" Required="1" Valid="1">
        <Description Lang="en">Type of note.</Description>
        <Description Lang="de">Notiztyp.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">webrequest</String>
        </Setting>
        <!-- $Self->{CustomerPanelArticleType} = 'webrequest';  -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelSenderType" Required="1" Valid="1">
        <Description Lang="en">Sender type for requests from the customer panel.</Description>
        <Description Lang="de">Sendertyp von Anfragen aus dem Customer-Panel.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">customer</String>
        </Setting>
        <!-- $Self->{CustomerPanelSenderType} = 'customer'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelHistoryType" Required="1" Valid="1">
        <Description Lang="en">Default history type in the customer panel.</Description>
        <Description Lang="de">Standard History im Customer-Panel</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">FollowUp</String>
        </Setting>
        <!-- $Self->{CustomerPanelHistoryType} = 'FollowUp'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelHistoryComment" Required="1" Valid="1">
        <Description Lang="en">Default history comment in the customer panel.</Description>
        <Description Lang="de">Standard History Kommentar im Customer-Panel.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{CustomerPanelHistoryComment} = ''; -->
   </ConfigItem>
    <ConfigItem Name="CustomerPanelDefaultNextComposeType" Required="1" Valid="1">
        <Description Lang="en">Next state for ticket after customer followup.</Description>
        <Description Lang="de">Nächster Status eines Tickets nach einem Customer-Followup.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">open</String>
        </Setting>
        <!-- $Self->{CustomerPanelDefaultNextComposeType} = 'open'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelNextComposeState" Required="1" Valid="1">
        <Description Lang="en">Next commpose state for customer tickets.</Description>
        <Description Lang="de">Nächster Status für vom Customer erstelle Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">1</String>
        </Setting>
        <!-- $Self->{CustomerPanelHistoryComment} = ''; -->
    </ConfigItem>
    <ConfigItem Name="Ticket::CustomerPanelDefaultNextComposeStateType" Required="1" Valid="1">
        <Description Lang="en">Next possible states for customer tickets.</Description>
        <Description Lang="de">Nächst mögliche Stati für vom Customer erstellte Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Array>
              <Item>open</Item>
              <Item>closed</Item>
            </Array>
        </Setting>
        <!-- $Self->{'Ticket::CustomerPanelDefaultNextComposeStateType'} = ['open', 'closed']; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelNewArticleType" Required="1" Valid="1">
        <Description Lang="en">Default article type.</Description>
        <Description Lang="de">Standard Artikeltyp.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">webrequest</String>
        </Setting>
        <!-- $Self->{CustomerPanelNewArticleType} = 'webrequest'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelNewSenderType" Required="1" Valid="1">
        <Description Lang="en">Sender type for new tickets from the customer panel.</Description>
        <Description Lang="de">Sendertyp für neue Tickets aus dem Customer-Panel.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">customer</String>
        </Setting>
        <!-- $Self->{CustomerPanelNewSenderType} = 'customer'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelNewHistoryType" Required="1" Valid="1">
        <Description Lang="en">Default history type.</Description>
        <Description Lang="de">Standard History Typ.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">WebRequestCustomer</String>
        </Setting>
        <!-- $Self->{CustomerPanelNewHistoryType} = 'WebRequestCustomer'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelNewHistoryComment" Required="1" Valid="1">
        <Description Lang="en">Comment for new history entrys in the customer panel.</Description>
        <Description Lang="de">Kommentar für Einträge in der History innerhalb des Customer-Panels.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{CustomerPanelNewHistoryComment} = ''; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelSelectionType" Required="1" Valid="1">
        <Description Lang="en">To: selection type. "Queue" shows all queues, "SystemAddress" displays all system addresses.</Description>
        <Description Lang="de">Auswahl des To: Anzeige-Typs. "Queue" zeigt alle Queues an, "SystemAddress" zeigt alle Systemadressen.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="Queue">
                <Item Key="Queue">Queue</Item>
                <Item Key="SystemAdress">SystemAddress</Item>
            </Option>
        </Setting>
        <!-- $Self->{CustomerPanelSelectionType} = 'Queue'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelSelectionString" Required="0" Valid="0">
        <Description Lang="en">If "Queue" was selected for CustomerPanelSelectionType, you can specify a selection string.</Description>
        <Description Lang="de">Wenn "Queue" für CustomerPanelSelectionType ausgewählt wurde, kann hier eine Zeichenkette für die Auswahl angegeben werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">Queue: &lt;Queue&gt; - &lt;QueueComment&gt;</String>
        </Setting>
        <!-- # $Self->{CustomerPanelSelectionString} = 'Queue: <Queue> - <QueueComment>'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelOwnSelection" Required="0" Valid="0">
        <Description Lang="en">CustomerPanelOwnSelection. If this is in use, just this selection is valid" for the CustomMessage.</Description>
        <Description Lang="de">CustomerPanelOwnSelection. Wird hier etwas eingetragen, ist nur dieser Eintrag für die CustomMessage gültig.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Junk">First Queue</Item>
                <Item Key="Misc">Second Queue</Item>
            </Hash>
        </Setting>
        <!--
            # $Self->{CustomerPanelOwnSelection} = {
            #     # Queue => Frontend-Name
            #       'Junk' => 'First Queue!',
            #       'Misc' => 'Second Queue!',
            #     # QueueID => Frontend-Name (or optional with QueueID)
            #     # '1' => 'First Queue!',
            #     # '2' => 'Second Queue!',
            # };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanel::NewTicketQueueSelectionModule" Required="1" Valid="1">
        <Description Lang="en">Module for To-selection in new ticket screen in the customer panel.</Description>
        <Description Lang="de">Modul für die Auswahl im To-Feld innerhalb der Bildschirm-Maske für neue Tickets im Customer-Panel.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::Output::HTML::CustomerNewTicketQueueSelectionGeneric</String>
        </Setting>
        <!-- $Self->{'CustomerPanel::NewTicketQueueSelectionModule'} = 'Kernel::Output::HTML::CustomerNewTicketQueueSelectionGeneric'; -->
    </ConfigItem>
    <ConfigItem Name="Ticket::CustomerTicketSearch::SearchLimit" Required="1" Valid="1">
        <Description Lang="en">Default limit for ticket search.</Description>
        <Description Lang="de">Standard Limit für die Suche innerhalb von Customer-Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">5000</String>
        </Setting>
        <!-- $Self->{'Ticket::CustomerTicketSearch::SearchLimit'} = 5000;  -->
    </ConfigItem>
    <ConfigItem Name="Ticket::CustomerTicketSearch::SearchPageShown" Valid="1">
        <Description Lang="en">Default number of articles per page after searching through tickets.</Description>
        <Description Lang="de">Standard Limit für Artikel pro Seite, die nach einer Suche über die Tickets angezeigt werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">40</String>
          </Setting>
        <!-- $Self->{'Ticket::CustomerTicketSearch::SearchPageShown'} = 40; -->
      </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###ClosedTickets" Required="1" Valid="1">
        <Description Lang="en">All parameters for the ClosedTickets object in the customer preferences.</Description>
        <Description Lang="de">Parameter für das ClosedTicket-Objkets in den Einstellungen für Customer.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Other Options</Item>
                <Item Key="Label">Closed Tickets</Item>
                <Item Key="Desc">Show closed tickets</Item>
                <Item Key="Data">Get('YesNoOptions')</Item>
                <Item Key="DataSelected">1</Item>
                <Item Key="PrefKey">UserShowClosedTickets</Item>
                <Item Key="Prio">2000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{ClosedTickets} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Other Options',
                Label => 'Closed Tickets',
                Desc => 'Show closed tickets.',
                Data => $Self->Get('YesNoOptions'),
                DataSelected => 1,
                PrefKey => 'UserShowClosedTickets',
                Prio => 2000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###ShownTickets" Required="1" Valid="1">
        <Description Lang="en">All parameters for the ShownTickets object in the customer preferences.</Description>
        <Description Lang="de">Parameter für das ShownTickets-Objket in den Einstellungen für Customer.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">Shown Tickets</Item>
                <Item Key="Desc">Max. shown Tickets a page in Overview</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key="15">15</Item>
                        <Item Key="20">20</Item>
                        <Item Key="25">25</Item>
                        <Item Key="30">30</Item>
                    </Hash>
                </Item>
                <Item Key="DataSelected">25</Item>
                <Item Key="PrefKey">UserShowTickets</Item>
                <Item Key="Prio">4000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{ShownTickets} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'Shown Tickets',
                Desc => 'Max. shown Tickets a page in Overview.',
                Data => {
                    15 => 15,
                    20 => 20,
                    25 => 25,
                    30 => 30,
                },
                DataSelected => 25,
                PrefKey => 'UserShowTickets',
                Prio => 4000,
                Activ => 1,
            };
        -->
    </ConfigItem>

    <ConfigItem Name="CustomerPreferencesGroups###RefreshTime" Required="1" Valid="1">
        <Description Lang="en">All parameters for the RefreshTime object in the customer preferences.</Description>
        <Description Lang="de">Parameter für das RefreshTime-Objket in den Einstellungen für Customer.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">QueueView refresh time</Item>
                <Item Key="Desc">Select your QueueView refresh time</Item>
                <Item Key="Data">
                    <Hash>
                        <Item Key="">off</Item>
                        <Item Key="2">2 minutes</Item>
                        <Item Key="5">5 minutes</Item>
                        <Item Key="7">7 minutes</Item>
                        <Item Key="10">10 minutes</Item>
                        <Item Key="15">15 minutes</Item>
                    </Hash>
                </Item>
                <Item Key="PrefKey">UserRefreshTime</Item>
                <Item Key="Prio">4000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{RefreshTime} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Frontend',
                Label => 'QueueView refresh time',
                Desc => 'Select your QueueView refresh time.',
                Data => {
                    '' => 'off',
                    2 => ' 2 minutes',
                    5 => ' 5 minutes',
                    7 => ' 7 minutes',
                    10 => '10 minutes',
                    15 => '15 minutes',
                },
                PrefKey => 'UserRefreshTime',
                Prio => 3000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::CommonObject###QueueObject" Required="1" Valid="1">
        <Description Lang="en">Path to the file where all settings for the QueueObject object for the frontend are stored.</Description>
        <Description Lang="de">Pfad zur Datei in der alle Einstellung für das QueueObject-Objekt innerhalb des Frontends gespeichert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::System::Queue</String>
        </Setting>
        <!-- $Self->{'Frontend::CommonObject'}->{QueueObject} = 'Kernel::System::Queue'; -->
    </ConfigItem>
    <ConfigItem Name="Frontend::CommonObject###TicketObject" Required="1" Valid="1">
        <Description Lang="en">Path to the file where all settings for the TicketObject object are stored.</Description>
        <Description Lang="de">Pfad zur Datei in der alle Einstellungen zum TicketObject-Objekt gespeichert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::System::Ticket</String>
        </Setting>
       <!-- $Self->{'Frontend::CommonObject'}->{TicketObject} = 'Kernel::System::Ticket'; -->
    </ConfigItem>
    <ConfigItem Name="Frontend::CommonParam###Action" Required="1" Valid="1">
        <Description Lang="en">Default value for the Action parameter. The Action parameter is used in the scripts of the system.</Description>
        <Description Lang="de">Standardwert des Action-Parameters. Der Action-Parameter wird für die Skripte des System benutzt.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">AgentTicketQueue</String>
        </Setting>
        <!-- $Self->{'Frontend::CommonParam'}->{Action} = 'AgentTicketQueue'; -->
    </ConfigItem>
    <ConfigItem Name="Frontend::CommonParam###QueueID" Required="1" Valid="1">
        <Description Lang="en">Default ID for queue, that is used by the system.</Description>
        <Description Lang="de">Standard ID für die Queue, auf die sich das System beziehen soll.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex="">0</String>
        </Setting>
        <!-- $Self->{'Frontend::CommonParam'}->{QueueID} = 0; -->
    </ConfigItem>
    <ConfigItem Name="Frontend::CommonParam###TicketID" Required="1" Valid="1">
        <Description Lang="en">Default ID for ticket, that is used by the system.</Description>
        <Description Lang="de">Standard ID für ein Ticket, die vom System genutzt wird.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{'Frontend::CommonParam'}->{TicketID} = ''; -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::CommonObject###QueueObject" Required="1" Valid="1">
        <Description Lang="en">Path to the file where all settings for the QueueObject object for the customer interface are stored.</Description>
        <Description Lang="de">Pfad zur Datei in der alle Einstellungen für das QueueObject-Objekt für das Customer-Interface gespeichert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::System::Queue</String>
        </Setting>
        <!-- $Self->{'CustomerFrontend::CommonObject'}->{QueueObject} = 'Kernel::System::Queue'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::CommonObject###TicketObject" Required="1" Valid="1">
        <Description Lang="en">Path to the file where all settings for the TicketObject object for the customer interface are stored.</Description>
        <Description Lang="de">Pfad zur Datei in der alle Einstellungen für das TicketObject-Objekt für das Customer-Interface gespeichert sind.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::System::Ticket</String>
        </Setting>>
        <!-- $Self->{'CustomerFrontend::CommonObject'}->{TicketObject} = 'Kernel::System::Ticket'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::CommonParam###Action" Required="1" Valid="1">
        <Description Lang="en">Specify the common action for the Action parameter in the customer interface.</Description>
        <Description Lang="en">Standardwert für den Action-Parameter innerhalb des Customer-Interfaces.</Description>        
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">CustomerTicketOverView</String>
        </Setting>
        <!-- $Self->{'CustomerFrontend::CommonParam'}->{Action} = 'CustomerTicketOverView'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::CommonParam###QueueID" Required="1" Valid="1">
        <Description Lang="en">Standard parameter for the QueueID in the customer interface.</Description>
        <Description Lang="de">Standardwert für die QueueID innerhalb des Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">0</String>
        </Setting>
        <!-- $Self->{'CustomerFrontend::CommonParam'}->{QueueID} = 0; -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::CommonParam###TicketID" Required="1" Valid="1">
        <Description Lang="en">Standard parameter for the TicketID in the customer interface.</Description>
        <Description Lang="de">Standardwert für die TicketID innerhalb des Customer-Interfaces.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{'CustomerFrontend::CommonParam'}->{TicketID} = ''; -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketQueue" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketQuee object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketQueue-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Overview of all open Tickets</Description>
                <Title>QueueView</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Overview of all open Tickets</Description>
                    <Name>QueueView</Name>
                    <Image>overview.png</Image>
                    <Link>Action=AgentTicketQueue</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>o</AccessKey>
                    <Prio>100</Prio>
                </NavBar>
                <NavBar>
                    <Description>Ticket-Area</Description>
                    <Type>Menu</Type>
                    <Block>ItemArea</Block>
                    <Name>Ticket</Name>
                    <Image>desktop.png</Image>
                    <Link>Action=AgentTicketQueue</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>t</AccessKey>
                    <Prio>200</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketQueue'} = {
                Description => 'Overview of all open Tickets',
                Title => 'QueueView',
                NavBarName => 'Ticket',
                NavBar => [
                    {
                    Description => 'Overview of all open Tickets',
                    Name => 'QueueView',
                    Image => 'overview.png',
                    Link => 'Action=AgentTicketQueue',
                    NavBar => 'Ticket',
                    Prio => 100,
                    },
                    {
                    Description => 'Ticket-Area',
                    Type => 'Menu',
                    Block => 'ItemArea',
                    Name => 'Ticket',
                    Image => 'desktop.png',
                    Link => 'Action=AgentTicketQueue',
                    NavBar => 'Ticket',
                    Prio => 200,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketPhone" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketPhone    uee object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketPhone-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Create new Phone Ticket</Description>
                <Title>Phone-Ticket</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Create new Phone Ticket</Description>
                    <Name>Phone-Ticket</Name>
                    <Image>phone-new.png</Image>
                    <Link>Action=AgentTicketPhone</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>n</AccessKey>
                    <Prio>200</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketPhone'} = {
                Description => 'Create new Phone Ticket',
                Title => 'Phone-Ticket',
                NavBarName => 'Ticket',
                NavBar => [
                    {
                    Description => 'Create new Phone Ticket',
                    Name => 'Phone-Ticket',
                    Image => 'phone-new.png',
                    Link => 'Action=AgentTicketPhone',
                    NavBar => 'Ticket',
                    Prio => 200,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketEmail" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketEmail object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketEmail-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Create new Email Ticket</Description>
                <Title>Email-Ticket</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Send Email and create a new Ticket</Description>
                    <Name>Email-Ticket</Name>
                    <Image>mail_new.png</Image>
                    <Link>Action=AgentTicketEmail</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>e</AccessKey>
                    <Prio>210</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketEmail'} = {
                Description => 'Create new Email Ticket',
                Title => 'Email-Ticket',
                NavBarName => 'Ticket',
                NavBar => [
                    {
                    # Description => 'Create new Email Ticket',
                    Description => 'Send Email and create a new Ticket',
                    Name => 'Email-Ticket',
                    Image => 'mail_new.png',
                    Link => 'Action=AgentTicketEmail',
                    NavBar => 'Ticket',
                    Prio => 210,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketSearch" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketSearch object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketSearch-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Search Tickets</Description>
                <Title>Search</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Search Tickets</Description>
                    <Name>Search</Name>
                    <Image>search.png</Image>
                    <Link>Action=AgentTicketSearch</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>s</AccessKey>
                    <Prio>300</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketSearch'} = {
                Description => 'Search Tickets',
                Title => 'Search',
                NavBarName => 'Ticket',
                NavBar => [
                    {
                    Description => 'Search Tickets',
                    Name => 'Search',
                    Image => 'search.png',
                    Link => 'Action=AgentTicketSearch',
                    NavBar => 'Ticket',
                    Prio => 300,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketMailbox" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketMailbox object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketMailbox-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Agent Mailbox</Description>
                <Title>Locked Tickets</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
        $Self->{'Frontend::Module'}->{'AgentTicketMailbox'} = {
            Description => 'Agent Mailbox',
            Title => 'Locked Tickets',
            NavBarName => 'Ticket',
        };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketStatusView" Required="0" Valid="0">
        <Description Lang="en">Frontend module registration for the AgentTicketStatusView object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketStatusView-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Overview of all open tickets</Description>
                <Title>Status View</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Overview of all open Tickets</Description>
                    <Name>StatusView</Name>
                    <Image>overview.png</Image>
                    <Link>Action=AgentTicketStatusView</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>v</AccessKey>
                    <Prio>110</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketStatusView'} = {
                Description => 'Overview of all open tickets',
                Title => 'Status View',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentZoom" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentZoom object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentZoom-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>compat module for Ticket Zoom</Description>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentZoom'} = {
                Description => 'compat module for Ticket Zoom',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketZoom" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketZoom object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketZoom-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Zoom</Description>
                <Title>Zoom</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketZoom'} = {
                Description => 'Ticket Zoom',
                Title => 'Zoom',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketAttachment" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketAtachment object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketAttachment-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>To download attachments</Description>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketAttachment'} = {
                Description => 'To download attachments',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketPlain" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketPlain object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketPlain-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket plain view of an email</Description>
                <Title>Plain Article</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketPlain'} = {
                Description => 'Ticket plain view of an email',
                Title => 'Plain Article',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketNote" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketNote object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketNote-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Note</Description>
                <Title>Note</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketNote'} = {
                Description => 'Ticket Note',
                Title => 'Note',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketPending" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketPending ote object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketPending-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Pending</Description>
                <Title>Pending</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketPending'} = {
                Description => 'Ticket Pending',
                Title => 'Pending',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketPriority" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketPriority object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketPriority-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Priority</Description>
                <Title>Priority</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketPriority'} = {
                Description => 'Ticket Priority',
                Title => 'Priority',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketLock" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketLock object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketLock-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Lock</Description>
				<Title>Lock</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketLock'} = {
                Description => 'Ticket Lock',
                NavBarName => 'Ticket',
            };
-->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketMove" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketMove object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketMove-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Move</Description>
                <Title>Move</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketMove'} = {
                Description => 'Ticket Move',
                Title => 'Move',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketHistory" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketHistory object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketHistory-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket History</Description>
                <Title>History</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketHistory'} = {
                Description => 'Ticket History',
                Title => 'History',
                NavBarName => 'Ticket',
            };
-->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketOwner" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketOwner object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketOwner-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Owner</Description>
                <Title>Owner</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketOwner'} = {
                Description => 'Ticket Owner',
                Title => 'Owner',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketCompose" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketCompose object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketCompose-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Compose Email Answer</Description>
                <Title>Compose</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketCompose'} = {
                Description => 'Ticket Compose Email Answer',
                Title => 'Compose',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketCustomerFollowUp" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketCustomerFollowup object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketCustomerFollowup-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Used if a agent can also be a customer</Description>
                <Title>Compose Follow up</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketCustomerFollowUp'} = {
                Description => 'Used if a agent can also be a customer',
                Title => 'Compose Follow up',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketBounce" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketBounce object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketBounce-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Compose Bounce Email</Description>
                <Title>Bounce</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketBounce'} = {
                Description => 'Ticket Compose Bounce Email',
                Title => 'Bounce',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketForward" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketForward object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketForward-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Forward Email</Description>
                <Title>Forward</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketForward'} = {
                Description => 'Ticket Forward Email',
                Title => 'Forward',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketCustomer" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketCustomer object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketCustomer-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Customer</Description>
                <Title>Customer</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketCustomer'} = {
                Description => 'Ticket Customer',
                Title => 'Customer',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketClose" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketClose object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketClose-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Close</Description>
                <Title>Close</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketClose'} = {
                Description => 'Ticket Close',
                Title => 'Close',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketFreeText" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketFreeText object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketFreeText-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket FreeText</Description>
                <Title>Free Fields</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketFreeText'} = {
                Description => 'Ticket FreeText',
                Title => 'Free Fields',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketPrint" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketPrint object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketPrint-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket Print</Description>
                <Title>Print</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketPrint'} = {
                Description => 'Ticket Print',
                Title => 'Print',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentTicketBulk" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AgentTicketBulk object in the agent interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AgentTicketBulk-Objekt im Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket bulk module</Description>
                <Title>Bulk Action</Title>
                <NavBarName>Ticket</NavBarName>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentTicketBulk'} = {
                Description => 'Ticket bulk module',
                Title => 'Bulk Action',
                NavBarName => 'Ticket',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminQueue" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminQueue object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminQueue-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Queue</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Queue</Name>
                    <Block>Block2</Block>
                    <Prio>100</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminQueue'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Queue',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Queue',
                    Block => 'Block2',
                    Prio => 100,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminResponse" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminResponse object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminResponse-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Response</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Responses</Name>
                    <Block>Block2</Block>
                    <Prio>200</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminResponse'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Response',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Responses',
                    Block => 'Block2',
                    Prio => 200,
                },
    };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminQueueResponses" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminQueueResponses object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminQueueRespnses-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Response &lt;-&gt; Queue</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Responses &lt;-&gt; Queue</Name>
                    <Block>Block2</Block>
                    <Prio>300</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminQueueResponses'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Response <-> Queue',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Responses <-> Queue',
                    Block => 'Block2',
                    Prio => 300,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminAutoResponse" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminAutoResponses object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminAutoResponses-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Auto response change</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Auto Responses</Name>
                    <Block>Block2</Block>
                    <Prio>400</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminAutoResponse'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Auto response change',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Auto Responses',
                    Block => 'Block2',
                    Prio => 400,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminQueueAutoResponse" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminQueueAutoResponses object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminQueueAutoResponses-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Queue &lt;-&gt; Auto Response</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Auto Responses &lt;-&gt; Queue</Name>
                    <Block>Block2</Block>
                    <Prio>500</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminQueueAutoResponse'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Queue <-> Auto Response',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Auto Responses <-> Queue',
                    Block => 'Block2',
                    Prio => 500,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminAttachment" Required="0" Valid="1">
        <Description Lang="en">describe if the module "Attachment" (AdminAttachment) is shown in the admin interface. Describe also the notation of the module.</Description>
        <Description Lang="en">Frontend module registration for the AdminAttachment object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminAttachment-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Attachment</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Attachments</Name>
                    <Block>Block2</Block>
                    <Prio>600</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminAttachment'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Attachment',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Attachments',
                    Block => 'Block2',
                    Prio => 600,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminResponseAttachment" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminResponseAttachment object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminResponseAttachment-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Response &lt;-&gt; Queue</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Attachments &lt;-&gt; Responses</Name>
                    <Block>Block2</Block>
                    <Prio>700</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminResponseAttachment'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Response <-> Queue',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Attachments <-> Responses',
                    Block => 'Block2',
                    Prio => 700,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSalutation" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminSalutation object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminSalutation-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Salutation</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Salutations</Name>
                    <Block>Block3</Block>
                    <Prio>100</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSalutation'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Salutation',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Salutations',
                    Block => 'Block3',
                    Prio => 100,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSignature" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminSignature object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminSignature-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Signature</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Signatures</Name>
                    <Block>Block3</Block>
                    <Prio>200</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSignature'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Signature',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Signatures',
                    Block => 'Block3',
                    Prio => 200,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSystemAddress" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminSystemAddress object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminSystemAddress-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>System address</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Email Addresses</Name>
                    <Block>Block3</Block>
                    <Prio>300</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSystemAddress'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'System address',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Email Addresses',
                    Block => 'Block3',
                    Prio => 300,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminNotification" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminNotification object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminNotification-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Notification</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Notifications</Name>
                    <Block>Block3</Block>
                    <Prio>400</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminNotification'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Notification',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Notifications',
                    Block => 'Block3',
                    Prio => 400,
                },
                };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminState" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminState object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminState-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>State</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Status</Name>
                    <Block>Block3</Block>
                    <Prio>700</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminState'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'State',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Status',
                    Block => 'Block3',
                    Prio => 700,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminGenericAgent" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the AdminGenericAgent object in the admin area.</Description>
        <Description Lang="de">Frontendmodul-Registration für das AdminGenericAgent-Objekt im Admin-Bereich.</Description>
        <Group>Ticket</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>GenericAgent</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>GenericAgent</Name>
                    <Block>Block4</Block>
                    <Prio>300</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminGenericAgent'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'GenericAgent',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'GenericAgent',
                    Block => 'Block4',
                    Prio => 300,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerTicketOverView" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerTicketOverview object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerTicketOverview-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Overview of customer tickets</Description>
                <NavBarName>Ticket</NavBarName>
                <Title>Overview</Title>
                <NavBar>
                    <Description>MyTickets</Description>
                    <Name>MyTickets</Name>
                    <Image>ticket.png</Image>
                    <Link>Action=CustomerTicketOverView&Type=MyTickets</Link>
                    <AccessKey>m</AccessKey>
                    <Prio>110</Prio>
                </NavBar>
                <NavBar>
                    <Description>CompanyTickets</Description>
                    <Name>CompanyTickets</Name>
                    <Image>tickets.png</Image>
                    <Link>Action=CustomerTicketOverView&Type=CompanyTickets</Link>
                    <AccessKey>c</AccessKey>
                    <Prio>120</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerTicketOverView'} = {
                Description => 'Overview of customer tickets.',
                NavBarName => 'Ticket',
                Title => 'Overview',
                NavBar => [
                    {
                    Description => 'MyTickets',
                    Name => 'MyTickets',
                    Image => 'ticket.png',
                    Link => 'Action=CustomerTicketOverView&Type=MyTickets',
                    Prio => 110,
                    },
                    {
                    Description => 'CompanyTickets',
                    Name => 'CompanyTickets',
                    Image => 'tickets.png',
                    Link => 'Action=CustomerTicketOverView&Type=CompanyTickets',
                    Prio => 120,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerTicketMessage" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerTicketMessage object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerTicketMessage-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Create and updated tickets</Description>
                <NavBarName>Ticket</NavBarName>
                <Title>Message</Title>
                <NavBar>
                    <Description>Create new Ticket</Description>
                    <Name>New Ticket</Name>
                    <Image>new.png</Image>
                    <Link>Action=CustomerTicketMessage</Link>
                    <AccessKey>n</AccessKey>
                    <Prio>100</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerTicketMessage'} = {
                Description => 'Create and updated tickets.',
                NavBarName => 'Ticket',
                Title => 'Message',
                NavBar => [
                    {
                    Description => 'Create new Ticket',
                    Name => 'New Ticket',
                    Image => 'new.png',
                    Link => 'Action=CustomerTicketMessage',
                    Prio => 100,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerTicketZoom" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerTicketZoom object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerTicketZoom-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Ticket zoom view</Description>
                <NavBarName>Ticket</NavBarName>
                <Title>Zoom</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerTicketZoom'} = {
                Description => 'Ticket zoom view',
                NavBarName => 'Ticket',
                Title => 'Zoom',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerZoom" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerZoom object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerZoom-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>compat mod</Description>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerZoom'} = {
            Description => 'compat mod',
        };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerTicketAttachment" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerTicketAttachment object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerTicketAttachment-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>To download attachments</Description>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerTicketAttachment'} = {
                Description => 'To download attachments',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::ModuleCustomerTicketSearch" Required="0" Valid="1">
        <Description Lang="en">Frontend module registration for the CustomerTicketSearch object in the customer interface.</Description>
        <Description Lang="de">Frontendmodul-Registration für das CustomerTicketSearch-Objekt im Customer-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Customer ticket search</Description>
                <NavBarName>Ticket</NavBarName>
                <Title>Search</Title>
                <NavBar>
                    <Description>Search</Description>
                    <Name>Search</Name>
                    <Image>search.png</Image>
                    <Link>Action=CustomerTicketSearch</Link>
                    <AccessKey>s</AccessKey>
                    <Prio>300</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerTicketSearch'} = {
                Description => 'Customer ticket search.',
                NavBarName => 'Ticket',
                Title => 'Search',
                NavBar => [
                    {
                    Description => 'Search',
                    Name => 'Search',
                    Image => 'search.png',
                    Link => 'Action=CustomerTicketSearch',
                    Prio => 300,
                    },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="TicketACL::Default::Action" Required="1" Valid="1">
        <Description Lang="en">Default Ticket Action ACL.</Description>
        <Description Lang="de">Standard ACL für Ticketaktion.</Description>
        <Group>Ticket</Group>
        <SubGroup>TicketCore</SubGroup>
        <Setting>
            <Hash>
            </Hash>
        </Setting>
        <!-- $Self->{'TicketACL::Default::Action'} = {}; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterMaxEmails" Required="1" Valid="1">
        <Description Lang="en">Maximal post master daemon email to own email-address a day. Loop-Protection! Default: 40</Description>
        <Description Lang="de">Maximale Anzahl an Postmaster-Daemon-E-Mails pro Tag an die eigenen Mailadressen. Schutz vor Mailschleifen! Default: 40</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">40</String>
        </Setting>
        <!-- $Self->{PostmasterMaxEmails} = 40; -->
    </ConfigItem>
    <ConfigItem Name="PostMasterPOP3MaxEmailSize" Required="1" Valid="1">
        <Description Lang="en">Maximal size in KBytes for mails that can be fetched via pop3 (KBytes).</Description>
        <Description Lang="de">Maximale Größe für Mails, die via POP3 abgeholt werden können (in KBytes).</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">6144</String>
        </Setting>
        <!-- $Self->{PostMasterPOP3MaxEmailSize} = 1024 * 6; -->
    </ConfigItem>C
    <ConfigItem Name="PostMasterPOP3ReconnectMessage" Required="1" Valid="1">
        <Description Lang="en">"bin/PostMasterPOP3.pl" will reconnect to pop3 host after the specifiyed count of messages.</Description>
        <Description Lang="de">"bin/PostMasterPOP3.pl" baut eine neue Verbindung zum pop3-Server nach der hier angegebenen Anzahl an Nachrichten auf.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">20</String>
        </Setting>
        <!-- $Self->{PostMasterPOP3ReconnectMessage} = 20; -->
    </ConfigItem>
    <ConfigItem Name="LoopProtectionModule" Required="1" Valid="1">
        <Description Lang="en">Default loop protection modul</Description>
        <Description Lang="de">Standard Modul zum Schutz vor Endlos-Schleifen</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Option Location="Kernel/System/PostMaster/LoopProtection/*.pm" SelectedID="Kernel::System::PostMaster::LoopProtection::DB"></Option>
        </Setting>
        <!-- $Self->{LoopProtectionModule} = 'Kernel::System::PostMaster::LoopProtection::DB'; -->
    </ConfigItem>
    <ConfigItem Name="LoopProtectionLog" Required="1" Valid="1">
        <Description Lang="en">If "FS" was selected for LoopProtectionModule, a logfile has to be specifyed.</Description>
        <Description Lang="de">Wenn "FS" für LoopProtectionModule ausgewählt wurde, muss ein Logfile angegeben werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">&lt;OTRS_CONFIG_Home&gt;/var/log/LoopProtection</String>
        </Setting>
        <!-- $Self->{LoopProtectionLog} = '<OTRS_CONFIG_Home>/var/log/LoopProtection'; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterAutoHTML2Text" Required="1" Valid="1">
        <Description Lang="en">Would you like to convert HTML mails into text messages?</Description>
        <Description Lang="de">Sollen HTML-Mails in Textnachrichten umgewandelt werden?</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>
            </Option>
        </Setting>
        <!-- $Self->{PostmasterAutoHTML2Text} = 1; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterFollowUpSearchInReferences" Required="1" Valid="1">
        <Description Lang="en">Would you like to execute followup checks on In-Reply-To or References headers for mails, that don't have a ticket number in the subject?</Description>
        <Description Lang="de">Sollen auf die Header-Einträge für In-Reply-To und References-Header Followups Checks ausgeführt werden, wenn im Betreff einer Mail keine Ticketnummer angegeben ist?</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>
            </Option>
        </Setting>
        <!-- $Self->{PostmasterFollowUpSearchInReferences} = 0; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterUserID" Required="1" Valid="1">
        <Description Lang="en">Specify the postmaster DB userID.</Description>
        <Description Lang="de">Geben Sie die UserID in der Datenbank für Postmaster an.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">1</String>
        </Setting>
        <!-- $Self->{PostmasterUserID} = 1; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterDefaultQueue" Required="1" Valid="1">
        <Description Lang="en">What is the postmaster default queue?</Description>
        <Description Lang="de">Postmaster default Queue?</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">Raw</String>
        </Setting>
        <!-- $Self->{PostmasterDefaultQueue} = 'Raw'; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterDefaultPriority" Required="1" Valid="1">
        <Description Lang="en">The default priority of new tickets.</Description>
        <Description Lang="de">Die Standard-Priorität neuer Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">3 normal</String>
        </Setting>
        <!-- $Self->{PostmasterDefaultPriority} = '3 normal'; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterDefaultState" Required="1" Valid="1">
        <Description Lang="en">Default state of new tickets.</Description>
        <Description Lang="de">Der Standard-Status neuer Tickets.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">new</String>
        </Setting>
        <!-- $Self->{PostmasterDefaultState} = 'new'; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterFollowUpState" Required="1" Valid="1">
        <Description Lang="en">The state if a ticket got a followup.</Description>
        <Description Lang="de">Status für ein Ticket, für das ein FollowUp eintrifft.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">open</String>
        </Setting>
        <!-- $Self->{PostmasterFollowUpState} = 'open'; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterFollowUpOnUnlockAgentNotifyOnlyToOwner" Required="1" Valid="1">
        <Description Lang="en">Send agent follow up notification just to the owner, if a ticket is unlocked? The default is to send a notification to all agents, if a ticket is unlocked.</Description>
        <Description Lang="de">Soll eine Benachrichtigung über ein FollowUp nur an den Eigentümer des Tickets gesendet werden? Der Standard ist, dass alle Agenten über ein FollowUp und somit über ein entsperrtes Ticket benachrichtig werden.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="0">Yes</Item>
            </Option>
        </Setting>
        <!-- $Self->{PostmasterFollowUpOnUnlockAgentNotifyOnlyToOwner} = 0; -->
    </ConfigItem>
    <ConfigItem Name="PostmasterX-Header" Required="1" Valid="1">
        <Description Lang="en">All X-headers that should be scanned.</Description>
        <Description Lang="de">Alle überwachten X-Header-Einträge.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Array>
                <Item>From</Item>
                <Item>To</Item>
                <Item>Cc</Item>
                <Item>Reply-To</Item>
                <Item>ReplyTo</Item>
                <Item>Subject</Item>
                <Item>Message-ID</Item>
                <Item>Message-Id</Item>
                <Item>Resent-To</Item>
                <Item>Resent-From</Item>
                <Item>Precedence</Item>
                <Item>Mailing-List</Item>
                <Item>List-Id</Item>
                <Item>List-Archive</Item>
                <Item>Errors-To</Item>
                <Item>References</Item>
                <Item>In-Reply-To</Item>
                <Item>X-Loop</Item>
                <Item>X-Spam-Flag</Item>
                <Item>X-Spam-Status</Item>
                <Item>X-No-Loop</Item>
                <Item>X-Priority</Item>
                <Item>Importance</Item>
                <Item>X-Mailer</Item>
                <Item>User-Agent</Item>
                <Item>Organization</Item>
                <Item>X-Original-To</Item>
                <Item>Delivered-To</Item>
                <Item>X-OTRS-Loop</Item>
                <Item>X-OTRS-Info</Item>
                <Item>X-OTRS-Priority</Item>
                <Item>X-OTRS-Queue</Item>
                <Item>X-OTRS-Ignore</Item>
                <Item>X-OTRS-State</Item>
                <Item>X-OTRS-CustomerNo</Item>
                <Item>X-OTRS-CustomerUser</Item>
                <Item>X-OTRS-ArticleKey1</Item>
                <Item>X-OTRS-ArticleKey2</Item>
                <Item>X-OTRS-ArticleKey3</Item>
                <Item>X-OTRS-ArticleValue1</Item>
                <Item>X-OTRS-ArticleValue2</Item>
                <Item>X-OTRS-ArticleValue3</Item>
                <Item>X-OTRS-SenderType</Item>
                <Item>X-OTRS-ArticleType</Item>
                <Item>X-OTRS-TicketKey1</Item>
                <Item>X-OTRS-TicketKey2</Item>
                <Item>X-OTRS-TicketKey3</Item>
                <Item>X-OTRS-TicketKey4</Item>
                <Item>X-OTRS-TicketKey5</Item>
                <Item>X-OTRS-TicketKey6</Item>
                <Item>X-OTRS-TicketKey7</Item>
                <Item>X-OTRS-TicketKey8</Item>
                <Item>X-OTRS-TicketValue1</Item>
                <Item>X-OTRS-TicketValue2</Item>
                <Item>X-OTRS-TicketValue3</Item>
                <Item>X-OTRS-TicketValue4</Item>
                <Item>X-OTRS-TicketValue5</Item>
                <Item>X-OTRS-TicketValue6</Item>
                <Item>X-OTRS-TicketValue7</Item>
                <Item>X-OTRS-TicketValue8</Item>
            </Array>
        </Setting>
        <!--
            $Self->{'PostmasterX-Header'} = [
                'From',
                'To',
                'Cc',
                'Reply-To',
                'ReplyTo',
                'Subject',
                'Message-ID',
                'Message-Id',
                'Resent-To',
                'Resent-From',
                'Precedence',
                'Mailing-List',
                'List-Id',
                'List-Archive',
                'Errors-To',
                'References',
                'In-Reply-To',
                'X-Loop',
                'X-Spam-Flag',
                'X-Spam-Status',
                'X-No-Loop',
                'X-Priority',
                'Importance',
                'X-Mailer',
                'User-Agent',
                'Organization',
                'X-Original-To',
                'Delivered-To',
                'X-OTRS-Loop',
                'X-OTRS-Info',
                'X-OTRS-Priority',
                'X-OTRS-Queue',
                'X-OTRS-Ignore',
                'X-OTRS-State',
                'X-OTRS-CustomerNo',
                'X-OTRS-CustomerUser',
                'X-OTRS-ArticleKey1',
                'X-OTRS-ArticleKey2',
                'X-OTRS-ArticleKey3',
                'X-OTRS-ArticleValue1',
                'X-OTRS-ArticleValue2',
                'X-OTRS-ArticleValue3',
                'X-OTRS-SenderType',
                'X-OTRS-ArticleType',
                'X-OTRS-TicketKey1',
                'X-OTRS-TicketKey2',
                'X-OTRS-TicketKey3',
                'X-OTRS-TicketKey4',
                'X-OTRS-TicketKey5',
                'X-OTRS-TicketKey6',
                'X-OTRS-TicketKey7',
                'X-OTRS-TicketKey8',
                'X-OTRS-TicketValue1',
                'X-OTRS-TicketValue2',
                'X-OTRS-TicketValue3',
                'X-OTRS-TicketValue4',
                'X-OTRS-TicketValue5',
                'X-OTRS-TicketValue6',
                'X-OTRS-TicketValue7',
                'X-OTRS-TicketValue8',
            ];
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###1-Match" Required="0" Valid="0">
        <Description Lang="en">Module to filter and manipulate incoming messages. Block/ignore all spam email with From: noreply@ address.</Description>
        <Description Lang="de">Modul zum Filtern und ändern eingehender Nachrichten. Blocken und ignorieren von Spam mit Hilfe der noreply@-Adresse.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::Match</Item>
                <Item Key="Match">
                    <Hash>
                        <Item Key="From">noreply@</Item>
                    </Hash>
                </Item>
                <Item Key="Set">
                    <Hash>
                        <Item Key="X-OTRS-Ignore">yes</Item>
                    </Hash>
                </Item>
            </Hash>
        </Setting>
        <!--
            # $Self->{'PostMaster::PreFilterModule'}->{'1-Match'} = {
            #     Module => 'Kernel::System::PostMaster::Filter::Match',
            #     Match => {
            #         From => 'noreply@',
            #     },
            #     Set => {
            #         'X-OTRS-Ignore' => 'yes',
            #     },
            # };
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###2-Match" Required="0" Valid="0">
        <Description Lang="en">Module to filter and manipulate incoming messages. Get a 4 digit number to ticket free text, use regex in Match e. g. From => '(.+?)@.+?', and use () as [***] in Set =>.</Description>
        <Description Lang="de">Modul zum Filtern und Ändern eingehender Nachrichten. Generiert eine 4 stellige Nummer im Ticket-Frei-Text, verwendet reguläre Ausdrücke in Form von => '(.+?)@.+?', und verwendet () als [***] in Set =>.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::Match</Item>
                <Item Key="Match">
                    <Hash>
                        <Item Key="Subject">SomeNumber:(\d\d\d\d)</Item>
                    </Hash>
                </Item>
                <Item Key="Set">
                    <Hash>
                        <Item Key="X-OTRS-TicketKey-1">SomeNumber</Item>
                        <Item Key="X-OTRS-TicketValue-1">[***]</Item>
                    </Hash>
                </Item>
            </Hash>
        </Setting>
        <!--
            #    $Self->{'PostMaster::PreFilterModule'}->{'2-Match'} = {
            #        Module => 'Kernel::System::PostMaster::Filter::Match',
            #        Match => {
            #            Subject => 'SomeNumber:(\d\d\d\d)',
            #        },
            #        Set => {
            #            'X-OTRS-TicketKey-1' => 'SomeNumber',
            #            'X-OTRS-TicketValue-1' => '[***]',
            #        },
            #    };
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###5-SpamAssassin" Required="0" Valid="0">
        <Description Lang="en">SpamAssassin example setup. Ignore emails that are marked with SpamAssassin.</Description>
        <Description Lang="de">SpamAssassin Beispiel Setup. Von Spamassassin gekennzeichnete Nachrichten werden ignoriert.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::CMD</Item>
                <Item Key="CMD">/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"</Item>
                <Item Key="Set">
                    <Hash>
                        <Item Key="X-OTRS-Ignore">yes</Item>
                    </Hash>
                </Item>
            </Hash>
        </Setting>
        <!--
        #    $Self->{'PostMaster::PreFilterModule'}->{'5-SpamAssassin'} = {
        #        Module => 'Kernel::System::PostMaster::Filter::CMD',
        #        CMD => '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
        #        Set => {
        #            'X-OTRS-Ignore' => 'yes',
        #        },
        #    };
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###5-SpamAssassin" Required="0" Valid="0">
        <Description Lang="en">SpamAssassin example setup. Move  marked mails to spam queue.</Description>
        <Description Lang="de">SpamAssassin Beispiel Setup. Markierte Nachrichten werden in eine Spam-Queue verschoben.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::CMD</Item>
                <Item Key="CMD">/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"</Item>
                <Item Key="Set">
                    <Hash>
                        <Item Key="X-OTRS-Queue">spam</Item>
                    </Hash>
                </Item>
            </Hash>
        </Setting>
        <!--
            #    $Self->{'PostMaster::PreFilterModule'}->{'5-SpamAssassin'} = {
            #        Module => 'Kernel::System::PostMaster::Filter::CMD',
            #        CMD => '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
            #        Set => {
            #            'X-OTRS-Queue' => 'spam',
            #        },
            #    };
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###000-MatchDBSource" Required="1" Valid="1">
        <Description Lang="en">Module to use database filter storage (use it at first).</Description>
        <Description Lang="de">Modul zum Anwenden von Datenbank-Filter-Ablagen (als erstes anwenden).</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::MatchDBSource</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'PostMaster::PreFilterModule'}->{'000-MatchDBSource'} = {
                Module => 'Kernel::System::PostMaster::Filter::MatchDBSource',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="PostMaster::PreFilterModule###999-AgentInterface" Required="0" Valid="0">
        <Description Lang="en">A email agent interface.</Description>
        <Description Lang="de">Ein Email-Agent-Interface.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::PostMaster::Filter::AgentInterface</Item>
                <Item Key="AgentInterfaceAddress">otrs-agent@example.org</Item>
            </Hash>
        </Setting>
        <!--
            #    $Self->{'PostMaster::PreFilterModule'}->{'999-AgentInterface'} = {
            #        Module => 'Kernel::System::PostMaster::Filter::AgentInterface',
            #        AgentInterfaceAddress => 'otrs-agent@example.org',
            #    };
        -->
    </ConfigItem>
    <ConfigItem Name="SendNoAutoResponseRegExp" Required="1" Valid="1">
        <Description Lang="en">If this regex matches, no message will be send by the autoresponder.</Description>
        <Description Lang="de">Trifft dieser reguläre Ausdruck zu, wird keine Nachricht vom Autoresponder gesendet.</Description>
        <Group>Ticket</Group>
        <SubGroup>Postmaster</SubGroup>
        <Setting>
            <String Regex="">(MAILER-DAEMON|postmaster|abuse)@.+?\..+?</String>
        </Setting>
        <!-- $Self->{SendNoAutoResponseRegExp} = '(MAILER-DAEMON|postmaster|abuse)@.+?\..+?'; -->
    </ConfigItem>
</otrs_config>
