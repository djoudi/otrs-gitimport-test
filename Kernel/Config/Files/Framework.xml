<?xml version="1.0" encoding="iso-8859-1" ?>
<!--
Possible SubGroups
        - AgentFrontend
        - AgentPreferences
        - Core        
        - CustomerFrontend
        - CustomerPreferences
        - FrontendModuleNotify                   
        - FrontendModulReg
        - LinkObject
        - Log  
        - MIME-Viewer         
        - Package            
        - PGP
        - Session
        - SMIME
        - SpellChecker
        - Stats        
        - TicketCore
        - Time                     

String
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup>a</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
    </ConfigItem>                     

Options (PullDownMenu)
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Option SelectedID="Key">
                <Item Key=""></Item>
                <Item Key=""></Item>                
            </Option>
        </Setting>
    </ConfigItem>   
    
Hash
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Hash>
                <Item Key=""></Item>
                <Item Key=""></Item>                
            </Hash>
        </Setting>
    </ConfigItem> 
    
Array
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup></SubGroup>
        <Setting>
            <Array>
                <Item></Item>
                <Item></Item>                
            </Array>
        </Setting>
    </ConfigItem>             
    
TextArea
    <ConfigItem Name="" Required="1" Valid="1">
        <Description Lang="en"></Description>
        <Description Lang="de"></Description>
        <Group>Ticket</Group>
        <SubGroup>a</SubGroup>
        <Setting>
            <TextArea>
                use &gt; instead of >
                and &lt; instead of <           
            </TextArea>
        </Setting>
    </ConfigItem> 
    
TimeVacationDaysOneTime 
TimeVacationDays 
TimeWorkingHours    
                                      
-->
<otrs_config version="1.0" init="Framework">
    <CVS>$Id: Framework.xml,v 1.27 2005-05-17 09:20:08 tr Exp $</CVS>
    <ConfigItem Name="SecureMode" Required="1" Valid="1">
        <Description Lang="en">If enabled, the webinstaller (installer.pl) can't be used.</Description>
        <Description Lang="de">Wird diese Option aktiviert, kann der WEB-Installer (installer.pl) nicht genutzt werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>                
            </Option>
        </Setting>
        <!--  $Self->{SecureMode} = 0; -->
    </ConfigItem>     
    <ConfigItem Name="SystemID" Required="1" Valid="1">
        <Description Lang="en">The system identifyer. Every ticket number and ID of a http session starts with this number.</Description>
        <Description Lang="de">Identifikationsnummer für das installierte System. Jede Ticketnummer und ID einer http-Session beginnt mit dieser Nummer.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">10</String>
        </Setting>
        <!-- $Self->{SystemID} = 10; -->
    </ConfigItem>                     
    <ConfigItem Name="FQDN" Required="1" Valid="1">
        <Description Lang="en">Full qualified domain name of your system.</Description>
        <Description Lang="de">Vollständiger Domain Name des Systems.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">yourhost.example.com</String>
        </Setting>
        <!-- $Self->{FQDN} = 'yourhost.example.com'; -->
    </ConfigItem>                     
    <ConfigItem Name="HttpType" Required="1" Valid="1">
        <Description Lang="en">If you want to use https protocoll instead of plain http, specify it here.</Description>
        <Description Lang="de">Legen Sie hier fest, ob das http- oder https-Protokoll innerhalb des Systems genutzt werden soll.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="http">
                <Item Key="http">http</Item>
                <Item Key="https">https</Item>                
            </Option>
        </Setting>
        <!-- $Self->{HttpType} = 'http'; -->
    </ConfigItem>   
    <ConfigItem Name="ScriptAlias" Required="1" Valid="1">
        <Description Lang="en">Prefix to index.pl, like it is specifyed in your webserver configuration.</Description>
        <Description Lang="de">ScriptAlias zur Datei index.pl, wie in der Webserver-Konfiguration festgelegt.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">otrs/</String>
        </Setting>
        <!-- $Self->{ScriptAlias} = 'otrs/'; -->
    </ConfigItem>                     
    <ConfigItem Name="AdminEmail" Required="1" Valid="1">
        <Description Lang="en">Mailaddress of the system administrator.</Description>
        <Description Lang="de">Mailadresse des Systemadministrators.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">admin@example.com</String>
        </Setting>
        <!-- $Self->{AdminEmail} = 'admin@example.com'; -->
    </ConfigItem>                     
    <ConfigItem Name="Organization" Required="1" Valid="1">
        <Description Lang="en">If an organization name is specifyed, every outgoing message will contain a X-header entry with the organization string.</Description>
        <Description Lang="de">Name der Firma bzw. Organisation. Jede ausgehende Nachricht wird mit einem X-Header-Eintrag für die Organisation und dem angegebenen Namen als Wert versehen.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{Organization} = ''; -->
    </ConfigItem>                     
    <ConfigItem Name="ProductName" Required="1" Valid="1">
        <Description Lang="en">The name of the application that is shown in the frontend.</Description>
        <Description Lang="de">Im WebFrontend angezeigter Softwarename.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">OTRS</String>
        </Setting>
        <!-- $Self->{ProductName} = 'OTRS'; -->
    </ConfigItem>                     
    <ConfigItem Name="DefaultCharset" Required="1" Valid="1">
        <Description Lang="en">Default frontend charset. "utf-8" is a good choice for envirorments with many possible charsetss. Specify another charset (e.g "iso-8859-1"), if only this specific charset is needed.</Description>
        <Description Lang="de">Standard-Zeichensatz des Frontends. Wählen Sie "utf-8", wenn verschiedene Zeichensätze für die Anzeige benötigt werden. Wir nur ein Zeichensatz eingesetzt (z.B. "iso8859-1"), nutzen Sie bitte diese Einstellung.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="iso-8859-1">
                <Item Key="iso-8859-1">iso-8859-1</Item>
                <Item Key="iso-8859-15">iso-8859-15</Item>
                <Item Key="utf-8">utf-8</Item>                
            </Option>
        </Setting>
        <!-- $Self->{DefaultCharset} = 'utf-8'; -->
    </ConfigItem>   
    <ConfigItem Name="DefaultLanguage" Required="1" Valid="1">
        <Description Lang="en">The default frontend language. Possible values are bg, cz, de, en, es, fi, fr, hu, it, nb, nl, pl, pt, ru, and sv.</Description>
        <Description Lang="de">Standard Frontend Sprache. Mögliche Werte sind bg, cz, de, en, es, fi, fr, hu, it, nb, nl, pl, pt, ru, and sv.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String REgex="">en</String>
<!-- <Option SelectedID="en">
                <Item Key="cz">Czech</Item>
                <Item Key="de">Deutsch</Item>
                <Item Key="en">English</Item>
                <Item Key="es">Espaniol</Item>
                <Item Key="fi">Suomi</Item>
                <Item Key="fr">Francais</Item>
                <Item Key="hu">Hungarian</Item>
                <Item Key="it">Italiano</Item>
                <Item Key="nb">Norsk Bokmå</Item>
                <Item Key="nl">Nederlands</Item>
                <Item Key="pl">Polski</Item>
                <Item Key="pt">Portuguise</Item>
                <Item Key="ru">Russian</Item>
                <Item Key="sv">Svenska</Item>
            </Option>
            -->
        </Setting>
        <!-- $Self->{DefaultLanguage} = 'en'; -->
    </ConfigItem>                     
    <ConfigItem Name="DefaultUsedLanguages" Required="1" Valid="1">
        <Description Lang="en">Shortname for languages (short name = long name and file).</Description>
        <Description Lang="de">Abkürzung für die Zuordnung der verschiedenen Sprachen (Abkürzung = Vollständiger Name und Datei).</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Hash>
                <Item Key="en">English</Item>
                <Item Key="de">Deutsch</Item>
                <Item Key="nl">Nederlands</Item>
                <Item Key="fr">Francais</Item>
                <Item Key="bg">Bulgarian</Item>
                <Item Key="fi">Suomi</Item>
                <Item Key="es">Espaniol</Item>
                <Item Key="pt_BR">Portuguise Brasileiro</Item>
                <Item Key="pt">Portuguise</Item>
                <Item Key="it">Italiano</Item>
                <Item Key="ru">Russian</Item>
                <Item Key="cz">Czech</Item>
                <Item Key="pl">Polski</Item>
                <Item Key="nb_NO">Norsk bokmål</Item>
                <Item Key="sv">Svenska</Item>
                <Item Key="hu">Hungarian</Item>
            </Hash>
        </Setting>
    </ConfigItem> 
    <ConfigItem Name="CustomerPanelBodyNewAccount" Required="1" Valid="1">
        <Description Lang="en">Body of notification email about new account.</Description>
        <Description Lang="de">Body der Benachrichtigungsmail bei einem neuen Account.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <TextArea>Hi &lt;OTRS_USERFIRSTNAME&gt;,

you or someone impersonating you has created a new OTRS account for
you (&lt;OTRS_USERFIRSTNAME&gt; &lt;OTRS_USERLASTNAME&gt;).

Login: &lt;OTRS_USERLOGIN&gt;
Password: &lt;OTRS_USERPASSWORD&gt;

&lt;OTRS_CONFIG_HttpType>://&lt;OTRS_CONFIG_FQDN>/&lt;OTRS_CONFIG_ScriptAlias&gt;customer.pl

Your OTRS Notification Master
            </TextArea>
        </Setting>
    </ConfigItem> 
    <ConfigItem Name="DefaultTheme" Required="1" Valid="1">
        <Description Lang="en">Default frontend HTML theme (Standard or Lite).</Description>
        <Description Lang="de">Standard Design der Weboberfläche (Standard oder Lite).</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">Standard</String>
        </Setting>
        <!-- $Self->{DefaultTheme} = 'Standard'; -->
    </ConfigItem>                     
    <ConfigItem Name="DefaultViewNewLine" Required="1" Valid="1">
        <Description Lang="en">Automatical line break in text messages after how many characters?</Description>
        <Description Lang="de">Nach wie vielen Zeichen soll in Textnachrichten automatisch eine neue Zeile begonnen werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">85</String>
        </Setting>
        <!-- $Self->{DefaultViewNewLine} = 85; -->
    </ConfigItem>                     
    <ConfigItem Name="DefaultPreViewLines" Required="1" Valid="1">
        <Description Lang="en">How many lines should be displayed in the preview for messages (e.g. for tickets in the QueueView)?</Description>
        <Description Lang="de">Wie viele Zeilen sollen bei der Vorschau von Textnachrichten angezeigt werden (z.B. bei Tickets in der Queue Ansicht)?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">18</String>
        </Setting>
        <!-- $Self->{DefaultPreViewLines} = 18; -->
    </ConfigItem>                     
    <ConfigItem Name="DefaultViewLines" Required="1" Valid="1">
        <Description Lang="en">How many lines should be displayed in text messages (e.g. ticket lines in the QueueZoom)?</Description>
        <Description Lang="de">Wie viele Zeilen sollen für eine Textnachricht angezeigt werden (z.B. im QueueZoom)?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">6000</String>
        </Setting>
        <!-- $Self->{DefaultViewLines} = 6000; -->
    </ConfigItem>                     
    <ConfigItem Name="ShowAlwaysLongTime" Required="1" Valid="1">
        <Description Lang="en">Show always time in long (days, hours, minutes) or short (days, hours) format?</Description>
        <Description Lang="de">Zeitangaben immer im ausführlichen (Tag, Stunden, Minuten oder im kurzem Format (Tag, Stunden) anzeigen?</Description>
        <Group>Framework</Group>
        <SubGroup>Time</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">Short</Item>
                <Item Key="1">Long</Item>
            </Option>
        </Setting>
        <!-- $Self->{ShowAlwaysLongTime} = 0; -->
    </ConfigItem>                     
    <ConfigItem Name="AttachmentDownloadType" Required="1" Valid="1">
        <Description Lang="en">Show the attachments of a ticket in the browser (inline) or just make them downloadable (attachment)?</Description>
        <Description Lang="de">Sollen Dateianhänge von Tickets im Browser angezeigt (inline) oder lediglich zum Download angeboten werden (attachment)?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="inline">
                <Item Key="inline">inline</Item>
                <Item Key="attachment">attachment</Item>               
            </Option>
        </Setting>
        <!-- $Self->{'AttachmentDownloadType'} = 'inline'; -->
    </ConfigItem>   
    <ConfigItem Name="CheckEmailAddresses" Required="1" Valid="1">
        <Description Lang="en">Check the syntax of email addresses?</Description>
        <Description Lang="de">Sollen Mailadressen auf ihre korrekte Syntax überprüft werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{CheckEmailAddresses} = 1; -->
    </ConfigItem>                     
    <ConfigItem Name="CheckMXRecord" Required="1" Valid="1">
        <Description Lang="en">Check the MX record of email addresses before sending a mail?</Description>
        <Description Lang="de">Soll der MX-Record von Mailadressen vor dem Versenden überprüft werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{CheckMXRecord} = 1; -->
    </ConfigItem>                     
    <ConfigItem Name="CheckEmailValidAddress" Required="1" Valid="1">
        <Description Lang="en">Regex for email addresses, that aren't syntacticaly valid but necesary for the system, e.g. "root@localhost".</Description>
        <Description Lang="de">Regulärer Ausdruck für syntaktisch nicht korrekte Mailadressen, die aber trotzdem im System verwendet werden sollen, z.B. "root@localhost".</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">^(root@localhost|admin@localhost)$</String>
        </Setting>
        <!-- $Self->{CheckEmailValidAddress} = '^(root@localhost|admin@localhost)$'; -->
    </ConfigItem>   
    <ConfigItem Name="CheckEmailInvalidAddress" Required="1" Valid="1">
        <Description Lang="en">Regex of not allowed email addresses.</Description>
        <Description Lang="de">Regulärer Ausdruck für nicht zulässige Mailadressen.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">@(aa|aaa|aaaa|aaaaa|abc|any|anywhere|anonymous|bar|demo|example|foo|hello|hallo|me|nospam|nowhere|null|some|somewhere|test|teste.|there|user|xx|xxx|xxxx)\.(..|...)$</String>
        </Setting>
        <!--  $Self->{CheckEmailInvalidAddress} = '@(aa|aaa|aaaa|aaaaa|abc|any|anywhere|anonymous|bar|demo|example|foo|hello|hallo|me|nospam|nowhere|null|some|somewhere|test|teste.|there|user|xx|xxx|xxxx)\.(..|...)$'; -->
    </ConfigItem>   
    <ConfigItem Name="LogModule" Required="1" Valid="1">
        <Description Lang="en">Witch log module do you want to use? "File" writes all messages in a given logfile, "SysLog" uses the syslog daemon of the system, e.g. syslogd.</Description>
        <Description Lang="de">Welches Logmodul soll verwendet werden? "File" schreibt in eine anzugebende Datei, "SysLog" logt mit Hilfe des systemspezifischen Logdaemons, z.B. syslogd.</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <Option Location="Kernel/System/Log/*.pm" SelectedID="Kernel::System::Log::SysLog"></Option>
        </Setting>
        <!-- $Self->{CheckMXRecord} = 1; -->
    </ConfigItem>                     
    <ConfigItem Name="LogModule::SysLog::Facility" Required="0" Valid="0">
        <Description Lang="en">If "SysLog" was selected for LogModule, you can specify a special log facility.</Description>
        <Description Lang="de">Wenn für LogModule der Wert "SysLog" ausgewählt wurde, kann hier ein spezielles Log-Facility angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <String Regex="">Log</String>
        </Setting>
        <!--  $Self->{'LogModule::SysLog::Facility'} = 'user'; -->
    </ConfigItem>   
    <ConfigItem Name="LogModule::SysLog::Charset" Required="1" Valid="1">
        <Description Lang="en">If "SysLog" was selected for LogModule, you can specify the charset that should be used for loggin.</Description>
        <Description Lang="de">Wenn "SysLog" für LogModule ausgewählt wurde, kann hier der Zeichensatz festgelegt werden, der für das Schreiben der Logeinträge benutzt werden soll.</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <Option SelectedID="iso-8859-1">
                <Item Key="iso-8859-1">iso-8859-1</Item>
                <Item Key="iso-8859-15">iso-8859-15</Item>
                <Item Key="utf-8">utf-8</Item>                
            </Option>
        </Setting>
        <!-- $Self->{'LogModule::SysLog::Charset'} = 'iso-8859-15'; -->
    </ConfigItem>   
    <ConfigItem Name="LogModule::LogFile" Required="1" Valid="1">
        <Description Lang="en">If "file" was selected for LogModule, you have to specify a logfile. The file will be created by the system, if it doesn't exist.</Description>
        <Description Lang="de">Wenn "File" für LogModul ausgewählt wurde, muss eine Logdatei angegeben werden. Diese wird automatisch vom System angelegt, falls sie noch nicht existiert.</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <String Regex="">/tmp/otrs.log</String>
        </Setting>
        <!--  $Self->{'LogModule::LogFile'} = '/tmp/otrs.log'; -->
    </ConfigItem>   
    <ConfigItem Name="LogModule::LogFile::Date" Required="0" Valid="0">
        <Description Lang="en">Would you like to add a time stamp as sufix for every log entry?</Description>
        <Description Lang="de">Soll für jeden Logeintrag das Datum und die aktuelle Zeit mit protokolliert werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{'LogModule::LogFile::Date'} = 0; -->
    </ConfigItem>                     
    <ConfigItem Name="LogSystemCacheSize" Required="0" Valid="0">
        <Description Lang="en">Cache size for admin system log (in KBytes).</Description>
        <Description Lang="de">Größe des Caches für Admin System Log (in KBytes).</Description>
        <Group>Framework</Group>
        <SubGroup>Log</SubGroup>
        <Setting>
            <String Regex="">4096</String>
        </Setting>
        <!--  $Self->{'LogSystemCacheSize'} = 4*1024; -->
        <!-- Angabe der Größeneinheit? byte? kbyte? -->
    </ConfigItem>   
    <ConfigItem Name="SendmailModule" Required="0" Valid="0">
        <Description Lang="en">Module to send E-Mails. "Sendmail" directly uses the sendmail binary of your operating system. "SMTP" uses a specifyed mailserver.</Description>
        <Description Lang="de">Modul zum Versenden von Mails. "Sendmail" verwendet das sendmail-Binary Ihres Betriebssystems. "SMTP" versendet die Nachrichten über den dafür vorgesehenen Mailserver.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option Location="Kernel/System/Email/*.pm" SelectedID="Kernel::System::Email::Sendmail"></Option>
        </Setting>
        <!--  $Self->{'SendmailModule'} = 'Kernel::System::Email::Sendmail'; -->
    </ConfigItem>   
    <ConfigItem Name="SendmailModule::CMD" Required="1" Valid="1">
        <Description Lang="en">If "Sendmail" was selected for SendmailModule, you have to specify the location of your sendmail binary and the needed options.</Description>
        <Description Lang="de">Wenn "Sendmail" als SendmailModule ausgewählt wurde, müssen Sie dem System den Pfad zu Ihrem sendmail-Binary und die benötigten Optionen mitteilen.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">/usr/sbin/sendmail -i -f</String>
        </Setting>
        <!--  $Self->{'SendmailModule::CMD'} = '/usr/sbin/sendmail -i -f '; -->
    </ConfigItem>   
    <ConfigItem Name="SendmailModule::Host" Required="0" Valid="0">
        <Description Lang="en">If "SMTP" was selected for SendmailModule, you have to specify the mailhost, that sends out the mails.</Description>
        <Description Lang="de">Wenn Sie für SendmailModule "SMTP" ausgwählt haben, müssen Sie hier den Mailserver angeben, der zum Versenden von Nachrichten genutzt werden soll.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">mail.example.com</String>
        </Setting>
        <!-- $Self->{'SendmailModule::Host'} = 'mail.example.com'; -->
    </ConfigItem>
    <ConfigItem Name="SendmailModule::Port" Required="0" Valid="0">
        <Description Lang="en">If "SMTP" was selected for SendmailModule, specify the port where your mailserver is listening for incoming connections.</Description>
        <Description Lang="de">Wenn Sie für SendmailModule den Wert "SMTP" ausgewählt haben, können Sie hier den Port angeben, auf dem Ihr Mailserver Mails entgegen nimmt.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">25</String>
        </Setting>
        <!-- $Self->{'SendmailModule::Port'} = '25'; -->
    </ConfigItem>   
    <ConfigItem Name="SendmailModule::AuthUser" Required="0" Valid="0">
        <Description Lang="en">If "SMTP" was selected for SendmailModule and you need to authenticate to your mailserver, specify the username.</Description>
        <Description Lang="de">Wenn Sie für SendmailModule den Wert "SMTP" ausgewählt haben und sich an Ihrem Mailserver anmelden müssen, geben Sie hier bitte den Benutzernamen für die Authentifizierung an.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">MailserverLogin</String>
        </Setting>
        <!-- $Self->{'SendmailModule::AuthUser'} = ''; -->
    </ConfigItem> 
    <ConfigItem Name="SendmailModule::AuthPassword" Required="0" Valid="0">
        <Description Lang="en">If "SMTP" was selected for SendmailModule and you need to authenticate to your mailserver, specify the password.</Description>
        <Description Lang="de">Wenn Sie für SendmailModule den Wert "SMTP" ausgewählt haben und sich an Ihrem Mailserver anmelden müssen, geben Sie hier das Passwort für die Authentifizierung an.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">MailserverPassword</String>
        </Setting>
        <!-- $Self->{'SendmailModule::AuthPassword'} = ''; -->
    </ConfigItem>   
    <ConfigItem Name="SendmailBcc" Required="1" Valid="1">
        <Description Lang="en">Send all outgoing email via bcc to the specifyed address. Please use this only for backup reasons!</Description>
        <Description Lang="de">Alle ausgehenden Nachrichten werden via BCC an die angegebene Adresse gesendet. Bitte nutzen Sie dieses Feature nur aus Gründen der Datensicherung!</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{'SendmailBcc'} = ''; -->
    </ConfigItem>   
    <ConfigItem Name="LoginURL" Required="1" Valid="1">
        <Description Lang="en">Alternate URL, where the login link refers to.</Description>
        <Description Lang="de">Alternative URL, auf die der Link für die Anmeldung am system verweist.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{LoginURL} = ''; -->
    </ConfigItem>   
    <ConfigItem Name="LogoutURL" Required="1" Valid="1">
        <Description Lang="en">Alternate URL, where the logout link refers to.</Description>
        <Description Lang="de">Alternative URL, auf die der Linkk für die Abmeldung vom System verweist.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{LogoutURL} = ''; -->
    </ConfigItem>   
    <ConfigItem Name="PreApplicationModule" Required="0" Valid="0">
        <Description Lang="en">This module is usefull to load some specific user options or to redirect not accept new application news.</Description>
        <Description Lang="de">Mit Hilfe dieses Moduls können bestimmt Benutzeroptionen geladen oder Neuigkeiten angezeigt werden.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontend</SubGroup>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">Kernel::Modules::AgentInfo.pm</String>
        </Setting>
        <!-- $Self->{PreApplicationModule} = 'Kernel::Modules::AgentInfo'; -->
    </ConfigItem>   
    <ConfigItem Name="InfoKey" Required="0" Valid="0">
        <Description Lang="en">Key to check with Kernel::Modules::AgentInfo module. If this user preferences key is true, then the message is accepted by the system.</Description>
        <Description Lang="de">Key, der mit Hilfe des Moduls Kernel::Modules::AgentInfo überprüft werden soll. Wird dieser Key angegeben, wird auch die Nachricht akzeptiert</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">wpt22</String>
        </Setting>
        <!-- $Self->{InfoKey} = 'wpt22'; -->
    </ConfigItem>   
    <ConfigItem Name="InfoFile" Required="0" Valid="0">
        <Description Lang="en">File that is displayed, if located under Kernel/Output/HTML/Standard/AgentInfo.dtl.</Description>
        <Description Lang="de">Datei die mit Hilfe des Moduls Kernel/Output/HTML/Standard/AgentInfo.dtl angezeigt werden soll.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">AgentInfo</String>
        </Setting>
        <!-- $Self->{InfoFile} = 'AgentInfo'; -->
    </ConfigItem>   
    <ConfigItem Name="Frontend::NotifyModule###1-CharsetCheck" Required="1" Valid="1">
        <Description Lang="en">Module to inform agents via the agent interface about the used charset. A notification is displayed, if the default charset is not used, e.g. in tickets.</Description>
        <Description Lang="de">Modul, das die Agenten innerhalb des Agent-Interfaces über den benutzten Zeichensatz informiert. Es wird ein Hinweis ausgegeben, wenn z.B. Tickets mit einem anderen als den Standard-Zeichensatz angezeigt werden.</Description>
        <Group>Framework</Group>
        <SubGroup>FrontendModuleNotify</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::NotificationCharsetCheck</Item>              
                </Hash>
            </Setting>
        <!--    $Self->{'Frontend::NotifyModule'}->{'1-CharsetCheck'} = {
                     Module => 'Kernel::Output::HTML::NotificationCharsetCheck',}; 
        -->
    </ConfigItem>   
    <ConfigItem Name="Frontend::NotifyModule###2-UID-Check" Required="1" Valid="1">
        <Description Lang="en">Module to display a notification in the agent interface, if the system is used by the admin user (normaly you shouldn't work as admin!).</Description>
        <Description Lang="de">Modul zur Ausgabe eines Hinweises, wenn als Admin-Benutzer im System gearbeitet wird (normal sollte nicht als Administrator gearbeitet werden).</Description>
        <Group>Framework</Group>
        <SubGroup>FrontendModuleNotify</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::NotificationUIDCheck</Item>              
                </Hash>
            </Setting>
        <!--    $Self->{'Frontend::NotifyModule'}->{'2-UID-Check'} = {
                        Module => 'Kernel::Output::HTML::NotificationUIDCheck', -->
    </ConfigItem>   
    <ConfigItem Name="Frontend::NotifyModule###3-ShowAgentOnline" Required="0" Valid="0">
        <Description Lang="en">Module to show currently logged in agents in the agent interface.</Description>
        <Description Lang="de">Mit diesem Modul können andere Agents innerhalb des Agent-Interfaces angezeigt werden, die im Moment am System angemeldet sind.</Description>
        <Group>Framework</Group>
        <SubGroup>FrontendModuleNotify</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::NotificationAgentOnline</Item>              
                </Hash>
            </Setting>
        <!--    $Self->{'Frontend::NotifyModule'}->{'3-ShowAgentOnline'} = {
                Module => 'Kernel::Output::HTML::NotificationAgentOnline',}; 
        -->
    </ConfigItem>   
    <ConfigItem Name="Frontend::NotifyModule###4-ShowCustomerOnline" Required="0" Valid="0">
        <Description Lang="en">Module to show currently loged in customers in the agent interface.</Description>
        <Description Lang="de">Mit diesem Modul können die Kunden innerhalb des Agent-Interfaces angezeigt werden, die gerade am System angemeldet sind.</Description>
        <Group>Framework</Group>
        <SubGroup>FrontendModuleNotify</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::NotificationCustomerOnline</Item>              
                </Hash>
            </Setting>
        <!--    $Self->{'Frontend::NotifyModule'}->{'4-ShowCustomerOnline'} = {
                Module => 'Kernel::Output::HTML::NotificationCustomerOnline',}; -->
    </ConfigItem>   
    <ConfigItem Name="Frontend::Output::PostFilter###ActiveElementFilter" Required="0" Valid="0">
        <Description Lang="en">A filter for html output of the application. With this filter you can for example filter out javascript or suppress java applets.</Description>
        <Description Lang="de">Ein Filter für den HTML-Inhalt innerhalb der Applikation. Mit Hilfe des Filters kann z.B. die Anzeige von Javaapplets oder Javascript unterdrückt werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::OutputFilterActiveElement</Item>
                    <Item Key="Debug">0</Item>                 
                </Hash>
            </Setting>
    </ConfigItem> 
    <ConfigItem Name="SessionModule" Required="1" Valid="1">
        <Description Lang="en">How do you want to store the session data? Advantage of "DB" is that you can split the frontend server from the db server. "FS" or "IPC" is much faster.</Description>
        <Description Lang="de">Wie sollen die Session-Daten gespeichert werden? "DB" hat den Vorteil, dass die WEB-Oberfläche und die Datenbank auf verschiedenen Maschinen installiert werden kann, "FS" oder "IPC" sind hingegen viel schneller.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option Location="Kernel/System/AuthSession/*.pm" SelectedID="Kernel::System::AuthSession::DB"></Option>
        </Setting>
        <!--  $Self->{SessionModule} = 'Kernel::System::AuthSession::DB'; -->
    </ConfigItem>   
    <ConfigItem Name="SessionName" Required="1" Valid="1">
        <Description Lang="en">Name of the session key. E.g. Session, SessionID, OTRS.</Description>
        <Description Lang="de">Name der Session-Kennung. Z.B. Session, SessionID, OTRS.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">Session</String>
        </Setting>
        <!-- $Self->{SessionName} = 'Session'; -->
    </ConfigItem>   
    <ConfigItem Name="SessionCheckRemoteIP" Required="1" Valid="1">
        <Description Lang="en">If the application is used for example via a proxy farm or a dialup connection, the remote ip address is mostly different for the requests. Turn of this check, if you are in this situation.</Description>
        <Description Lang="de">Wird das System z.B über eine Proxy-Farm oder über eine Einwählverbindung angesprochen, kann sich die IP-Adresse für die einzelnen Anfragen oft ändern. Schalten Sie in diesem Fall diese Überprüfung ab.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{SessionCheckRemoteIP} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="SessionDeleteIfNotRemoteID" Required="1" Valid="1">
        <Description Lang="en">Delete a session, if the session id is used with an invalied remote IP?</Description>
        <Description Lang="de">Session bei falscher IP Adresse löschen?</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{SessionDeleteIfNotRemoteID} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="SessionMaxTime" Required="1" Valid="1">
        <Description Lang="en">Maximal valid time for a session id (in seconds).</Description>
        <Description Lang="de">Gültigkeitsdauer einer Session (in Sekunden).</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">32400</String>
        </Setting>
        <!-- $Self->{SessionMaxTime} = 9*60*60; -->
    </ConfigItem>   
    <ConfigItem Name="SessionMaxIdleTime" Required="1" Valid="1">
        <Description Lang="en">A session will be killed and the user will be loged out after this time of inactifity (in seconds).</Description>
        <Description Lang="de">Eine Session wird beendet und der Benutzer automatisch abgemeldet, wenn er für die hier angegebene Zeit in Sekunden inaktiv war.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">18000</String>
        </Setting>
        <!-- $Self->{SessionMaxIdleTime} = 5*60*60; -->
    </ConfigItem>   
    <ConfigItem Name="SessionDeleteIfTimeToOld" Required="1" Valid="1">
        <Description Lang="en">Delete requested sessions if they are timed out?</Description>
        <Description Lang="de">Sollen Anfragen für Sessions automatisch gelöscht werden, wenn diese Sessions bereits schon lange abgelaufen sind?</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{SessionDeleteIfTimeToOld} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="SessionUseCookie" Required="1" Valid="1">
        <Description Lang="en">Should the session management use html cookies? It's more comfortable to send the session id via links. If you have a valid session, you don't have to login again. If the client browser disabled html cookies, the system will work as usual and append the session id to the links.</Description>
        <Description Lang="de">Sessionmanagement mit Cookies? Es ist komfortabler, wenn sie die Session-ID per Link und nicht via Cookie übermitteln. Wenn eine gültige Session vorliegt, wird so eine Neuanmeldung am System überflüssig. Werden vom verwendeten Browser keine Cookies unterstützt, wird die Session-ID automatisch per Link übermittelt.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{SessionUseCookie} = 1; -->
    </ConfigItem>   
    <ConfigItem Name="SessionUseCookieAfterBrowserClose" Required="1" Valid="1">
        <Description Lang="en">Store cookies after the browser has ben closed?</Description>
        <Description Lang="de">Cookies nach dem schließen des Browsers nicht löschen?</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{SessionUseCookieAfterBrowserClose} = 0; -->
    </ConfigItem>   
    <ConfigItem Name="SessionDir" Required="1" Valid="1">
        <Description Lang="en">If "FS" was selected for SessionModule you have to specify a directory where the session data will be stored.</Description>
        <Description Lang="de">Wenn "FS" für SessionModule ausgewählt wurde, muss ein Verzeichnis zum zwischenspeichern der Session-Daten angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">&lt;OTRS_CONFIG_Home&gt;/var/sessions</String>
        </Setting>
        <!-- $Self->{SessionDir} = '<OTRS_CONFIG_Home>/var/sessions'; -->
    </ConfigItem>   
    <ConfigItem Name="SessionTable" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for SessionModule, you have to specify a table in database where session data will be stored.</Description>
        <Description Lang="de">Wenn "DB" als SessionModule ausgewählt wurde, muss eine Tabelle in der Datenbank zum Speichern der Session-Daten, angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">sessions</String>
        </Setting>
        <!-- $Self->{SessionTable} = 'sessions'; -->
    </ConfigItem>
    <ConfigItem Name="SessionTableID" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for SessionModule, you have to specify a column for ID in session table.</Description>
        <Description Lang="de">Wenn "DB" als SessionModule ausgewählt wurde, muss ein Feld für die ID innerhalb der Tabelle für die Sessions angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">session_id</String>
        </Setting>
        <!-- $Self->{SessionTableID} = 'session_id'; -->
    </ConfigItem>
    <ConfigItem Name="SessionTableValue" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for SessionModule, you have to specify a column for the values in session table.</Description>
        <Description Lang="de">Wenn "DB" als SessionModule ausgewählt wurde, muss ein Feld für die Values innerhalb der Session-Tabelle angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">session_value</String>
        </Setting>
        <!-- $Self->{SessionTableValue} = 'session_value'; -->
    </ConfigItem>
    <ConfigItem Name="TimeZone" Required="0" Valid="0">
        <Description Lang="en">Set the system time zone. Default is local time +/- 0.</Description>
        <Description Lang="de">Einstellen derZeitzone, standardmäßig wird die locale Systemzeit verwendet, +/- 0.</Description>
        <Group>Framework</Group>
        <SubGroup>Time</SubGroup>
        <Setting>
            <String Regex="">+0</String>
        </Setting>
        <!-- $Self->{TimeZone} = '+9'; -->
    </ConfigItem>
    <ConfigItem Name="TimeWorkingHours" Required="1" Valid="1">
        <Description Lang="en">For witch hours and week days do you want to count the working time?</Description>
        <Description Lang="de">Für welche Wochentage und Stunden soll die Arbeitszeit erfasst werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Time</SubGroup>
        <Setting>
            <TimeWorkingHours>
                <Day Name="Mon">
                  <Hour>8</Hour>
                  <Hour>9</Hour>
                  <Hour>10</Hour>
                  <Hour>11</Hour>
                  <Hour>12</Hour>
                  <Hour>13</Hour>
                  <Hour>14</Hour>
                  <Hour>15</Hour>
                  <Hour>16</Hour>
                  <Hour>17</Hour>
                  <Hour>18</Hour>
                  <Hour>19</Hour>
                  <Hour>20</Hour>
                </Day> 
                <Day Name="Tue">
                  <Hour>8</Hour>
                  <Hour>9</Hour>
                  <Hour>10</Hour>
                  <Hour>11</Hour>
                  <Hour>12</Hour>
                  <Hour>13</Hour>
                  <Hour>14</Hour>
                  <Hour>15</Hour>
                  <Hour>16</Hour>
                  <Hour>17</Hour>
                  <Hour>18</Hour>
                  <Hour>19</Hour>
                  <Hour>20</Hour>
                </Day> 
                <Day Name="Wed">
                  <Hour>8</Hour>
                  <Hour>9</Hour>
                  <Hour>10</Hour>
                  <Hour>11</Hour>
                  <Hour>12</Hour>
                  <Hour>13</Hour>
                  <Hour>14</Hour>
                  <Hour>15</Hour>
                  <Hour>16</Hour>
                  <Hour>17</Hour>
                  <Hour>18</Hour>
                  <Hour>19</Hour>
                  <Hour>20</Hour>
                </Day> 
                <Day Name="Thu">
                  <Hour>8</Hour>
                  <Hour>9</Hour>
                  <Hour>10</Hour>
                  <Hour>11</Hour>
                  <Hour>12</Hour>
                  <Hour>13</Hour>
                  <Hour>14</Hour>
                  <Hour>15</Hour>
                  <Hour>16</Hour>
                  <Hour>17</Hour>
                  <Hour>18</Hour>
                  <Hour>19</Hour>
                  <Hour>20</Hour>
                </Day> 
                <Day Name="Fri">
                  <Hour>8</Hour>
                  <Hour>9</Hour>
                  <Hour>10</Hour>
                  <Hour>11</Hour>
                  <Hour>12</Hour>
                  <Hour>13</Hour>
                  <Hour>14</Hour>
                  <Hour>15</Hour>
                  <Hour>16</Hour>
                  <Hour>17</Hour>
                  <Hour>18</Hour>
                  <Hour>19</Hour>
                  <Hour>20</Hour>
                </Day> 
                <Day Name="Sat">
                </Day> 
                <Day Name="Sun">
                </Day> 
            </TimeWorkingHours>
        </Setting>
    </ConfigItem>
    <ConfigItem Name="TimeVacationDays" Required="1" Valid="1">
        <Description Lang="en">Add your permanent vacation days.</Description>
        <Description Lang="de">Hinterlegen Sie hier Ihre permanenten Freizeit-Tage im System.</Description>
        <Group>Framework</Group>
        <SubGroup>Time</SubGroup>
        <Setting>
            <TimeVacationDays>
                <Item Month="01" Day="01">New Year's Eve!</Item>
                <Item Month="05" Day="01">1 St. May</Item>
                <Item Month="12" Day="24">Christmas</Item>
                <Item Month="12" Day="25">First Christmas Day</Item>
                <Item Month="12" Day="26">Second Christmas Day</Item>
                <Item Month="12" Day="31">Silvester</Item>
            </TimeVacationDays>
        </Setting>
    </ConfigItem>
    <ConfigItem Name="TimeVacationDaysOneTime" Required="1" Valid="1">
        <Description Lang="en">One time vacation days.</Description>
        <Description Lang="de">Einmaligen Freizeit-Tage im System hinterlegen.</Description>
        <Group>Framework</Group>
        <SubGroup>Time</SubGroup>
        <Setting>
            <TimeVacationDaysOneTime>
                <Item Year="2004" Month="01" Day="01">test</Item>
            </TimeVacationDaysOneTime>
        </Setting>
    </ConfigItem>
    <ConfigItem Name="WebMaxFileUpload" Required="1" Valid="1">
        <Description Lang="en">Maximal size for file uploads via the browser (in Bytes).</Description>
        <Description Lang="de">Maximale Dateigröße für Dateiuploads über den Browser (in Bytes).</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <SubGroup>Web</SubGroup>        
        <Setting>
            <String Regex="">5242880</String>
        </Setting>
        <!-- $Self->{WebMaxFileUpload} = 1024 * 1024 * 5; -->
        <!-- Größeneinheiten hinzufügen!!! -->
    </ConfigItem>
    <ConfigItem Name="WebUploadCacheModule" Required="1" Valid="1">
        <Description Lang="en">Select the module to handle uplads via the web interface. "DB" stores all uploads in the database, "FS" uses the file system.</Description>
        <Description Lang="de">Wählen Sie das Modul, welches Uploads über die WEB-Oberfläche speichert. "DB" benutzt die Datenbank zum Speichern der Uploads, "FS" legt die Daten im Dateisystem ab.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <SubGroup>Web</SubGroup>        
        <Setting>
            <Option Location="Kernel/System/Web/UploadCache/*.pm" SelectedID="Kernel::System::Web::UploadCache::DB"></Option>
        </Setting>
        <!-- $Self->{WebUploadCacheModule} = 'Kernel::System::Web::UploadCache::DB'; -->
    </ConfigItem>
    <ConfigItem Name="CGILogPrefix" Required="1" Valid="1">
        <Description Lang="en">Log prefix for the CGI scripts of the system.</Description>
        <Description Lang="de">Logprefix für die CGI-Skripte des Systems</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">OTRS-CGI</String>
        </Setting>
        <!-- $Self->{CGILogPrefix} = 'OTRS-CGI'; -->
    </ConfigItem>
    <ConfigItem Name="LostPassword" Required="1" Valid="1">
        <Description Lang="en">Activate lost password feature fpr agents?</Description>
        <Description Lang="de">Feature für verlorenes Kennwort aktivieren?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{LostPassword} = 1; -->
    </ConfigItem>
    <ConfigItem Name="ShowMotd" Required="1" Valid="1">
        <Description Lang="en">Show message of the day after login screen?</Description>
        <Description Lang="de">Meldungen des Tages nach Login anzeigen?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{ShowMotd} = 0; -->
    </ConfigItem>
    <ConfigItem Name="DemoSystem" Required="1" Valid="1">
        <Description Lang="en">Activate the demo system? If set to "yes", agents can change their preferences like selection of language and theme via the agent frontend just for the current session. Also it isn't possible to change passwords.</Description>
        <Description Lang="de">Demosystem aktivieren? Wenn diese Einstellung aktiviert wird, können Agenten nur für die aktuelle Sitzung ihre Sprache oder das Anzeige-Schema auswählen. Weiterhin können keine Kennwörter geändert werden.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Option SelectedID="0">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{DemoSystem} = 0; -->
    </ConfigItem>
    <ConfigItem Name="MIME-Viewer###application/excel" Required="0" Valid="0">
        <Description Lang="en">Path to converter to view Microsoft Excel files in the web interface.</Description>
        <Description Lang="de">Pfad zum Konvertierungsprogramm, um Microsoft Excel Dateien über die WEB-Oberfläche anzuzeigen.</Description>
        <Group>Framework</Group>
        <SubGroup>MIME-Viewer</SubGroup>
        <Setting>
            <String Regex="">xlhtml</String>
        </Setting>
        <!-- $Self->{'MIME-Viewer'}->{'application/excel'} = 'xlhtml'; -->
    </ConfigItem>
    <ConfigItem Name="MIME-Viewer###application/msword" Required="0" Valid="0">
        <Description Lang="en">Path to converter to view Microsoft Word files in the web interface.</Description>
        <Description Lang="de">Pfad zum Konvertierungsprogramm, um Microsoft Word Dateien über die WEB-Oberfläche anzuzeigen.</Description>
        <Group>Framework</Group>
        <SubGroup>MIME-Viewer</SubGroup>
        <Setting>
            <String Regex="">wvWare</String>
        </Setting>
        <!-- $Self->{'MIME-Viewer'}->{'application/msword'} = 'wvWare'; -->
    </ConfigItem>
    <ConfigItem Name="MIME-Viewer###application/pdf" Required="0" Valid="0">
        <Description Lang="en">Path to programm to view PDF Documents in the web interface.</Description>
        <Description Lang="de">Pfad zum Programm, um PDF Dateien über die WEB-Oberfläche anzuzeigen.</Description>
        <Group>Framework</Group>
        <SubGroup>MIME-Viewer</SubGroup>
        <Setting>
            <String Regex="">pdftohtml -stdout -i</String>
        </Setting>
        <!-- $Self->{'MIME-Viewer'}->{'application/pdf'} = 'pdftohtml -stdout -i'; -->
    </ConfigItem>
    <ConfigItem Name="MIME-Viewer###text/xml" Required="0" Valid="0">
        <Description Lang="en">Path to converter to view XML files in the web interface.</Description>
        <Description Lang="de">Pfad zum Konvertierungsprogramm, um XML Dateien in der WEB-Oberfläche anzuzeigen.</Description>
        <Group>Framework</Group>
        <SubGroup>MIME-Viewer</SubGroup>
        <Setting>
            <String Regex="">/opt/otrs/scripts/tools/xml2html.pl</String>
        </Setting>
        <!-- $Self->{'MIME-Viewer'}->{'text/xml'} = $Self->{Home}.'/scripts/tools/xml2html.pl'; -->
    </ConfigItem>
    <ConfigItem Name="SpellChecker" Required="1" Valid="1">
        <Description Lang="en">Install ispell or aspell on your system, if you want to use a spellchecker. Please specify the path to the aspell or ispell binary on your operating system.</Description>
        <Description Lang="de">Installieren Sie ispell oder aspell, um auf eine Rechtschreibhilfe zurück greifen zu können. Bitte geben Sie hier den Pfad zum Binary von ispell oder aspell an.</Description>
        <Group>Framework</Group>
        <SubGroup>SpellChecker</SubGroup>
        <Setting>
            <String Regex="">/usr/bin/ispell</String>
        </Setting>
        <!-- $Self->{SpellChecker} = '/usr/bin/ispell'; -->
    </ConfigItem>
    <ConfigItem Name="SpellCheckerDictDefault" Required="1" Valid="1">
        <Description Lang="en">What is the default spell checker dictionary?</Description>
        <Description Lang="de">Welches Wörterbuch soll standardmäßig für die Rechtschreibprüfung verwendet werden?</Description>
        <Group>Framework</Group>
        <SubGroup>SpellChecker</SubGroup>
        <Setting>
            <String Regex="">english</String>
        </Setting>
        <!-- $Self->{SpellCheckerDictDefault} = 'english'; -->
    </ConfigItem>
    <ConfigItem Name="SpellCheckerIgnore" Required="1" Valid="1">
        <Description Lang="en">A list of words, that are ignored by the spelll checker by default.</Description>
        <Description Lang="de">Folgende Wörter werden von der Rechtschreibprüfung standardmäßig ignoriert.</Description>
        <Group>Framework</Group>
        <SubGroup>SpellChecker</SubGroup>
        <Setting>
            <Array>
                <Item>www</Item>
                <Item>webmail</Item>
                <Item>https</Item>
                <Item>http</Item>
                <Item>html</Item>
                <Item>rfc</Item>
            </Array>
        </Setting>
        <!-- $Self->{SpellCheckerIgnore} = ['www', 'webmail', 'https', 'http', 'html', 'rfc']; -->
    </ConfigItem>             
    <ConfigItem Name="Package::RepositoryRoot" Required="1" Valid="1">
        <Description Lang="en">Location to get online repository list for aditional packages. The first availabel result will be used.</Description>
        <Description Lang="de">Online-Quelle, über die zusätzliche Pakete bezogen werden können. Die Quelle, die zuerst erfolgreich abgefragt werden kann, wird verwendet.</Description>
        <Group>Framework</Group>
        <SubGroup>Package</SubGroup>
        <Setting>
            <Array>
                <Item>http://ftp.otrs.org/pub/otrs/misc/packages/repository.xml</Item>
                <Item>http://otrs.org/repository.xml</Item>
            </Array>
        </Setting>
        <!-- $Self->{'Package::RepositoryRoot'} = [
                'http://ftp.otrs.org/pub/otrs/misc/packages/repository.xml',
                'http://otrs.org/repository.xml',]; -->
    </ConfigItem>             
    <ConfigItem Name="Package::RepositoryList" Required="0" Valid="0">
        <Description Lang="en">List of online repositorys.</Description>
        <Description Lang="de">Liste der zur Verfügung stehenden Online-Quellen.</Description>
        <Group>Framework</Group>
        <SubGroup>Package</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="ftp://ftp.example.com/pub/otrs/misc/packages/">[Example] ftp://ftp.example.com/</Item>              
                </Hash>
            </Setting>
        <!--   $Self->{'Package::RepositoryList'} = {'ftp://ftp.example.com/pub/otrs/misc/packages/' => '[Example] ftp://ftp.example.com/',}; -->
    </ConfigItem>   
    <ConfigItem Name="Package::Timeout" Required="1" Valid="1">
        <Description Lang="en">http/ftp timeout for package downloads.</Description>
        <Description Lang="de">Timeout für das Herunterladen von zusätzlichen Paketen.</Description>
        <Group>Framework</Group>
        <SubGroup>Package</SubGroup>
        <Setting>
            <String Regex="">12</String>
        </Setting>
        <!-- $Self->{'Package::Timeout'} = 12; -->
    </ConfigItem>
    <ConfigItem Name="Package::Proxy" Required="0" Valid="0">
        <Description Lang="en">Fetch packages via proxy.</Description>
        <Description Lang="de">Laden von zusätzlichen Paketen über einen Proxyserver.</Description>
        <Group>Framework</Group>
        <SubGroup>Package</SubGroup>
        <Setting>
            <String Regex="">http://proxy.sn.no:8001/</String>
        </Setting>
        <!-- $Self->{'Package::Proxy'} = 'http://proxy.sn.no:8001/'; -->
    </ConfigItem>
    <ConfigItem Name="PGP" Required="1" Valid="1">
        <Description Lang="en">Enable PGP support?</Description>
        <Description Lang="de">PGP aktivieren?</Description>
        <Group>Framework</Group>
        <SubGroup>PGP</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{'PGP'} = 1; -->
    </ConfigItem>
    <ConfigItem Name="PGP::Bin" Required="1" Valid="1">
        <Description Lang="en">Path to PGP binary.</Description>
        <Description Lang="de">Pfad zum PGP Binary.</Description>
        <Group>Framework</Group>
        <SubGroup>PGP</SubGroup>
        <Setting>
            <String Regex="">/usr/bin/gpg</String>
        </Setting>
        <!-- $Self->{'PGP::Bin'} = '/usr/bin/gpg'; -->
    </ConfigItem>
    <ConfigItem Name="PGP::Options" Required="1" Valid="1">
        <Description Lang="en">Options for PGP binary.</Description>
        <Description Lang="de">Optionen für das PGP Binary.</Description>
        <Group>Framework</Group>
        <SubGroup>PGP</SubGroup>
        <Setting>
            <String Regex="">--homedir /var/lib/wwwrun/.gnupg/ --batch --no-tty --yes</String>
        </Setting>
        <!-- $Self->{'PGP::Options'} = '--homedir /var/lib/wwwrun/.gnupg/ --batch --no-tty --yes'; -->
    </ConfigItem>
    <ConfigItem Name="PGP::Key::Password" Required="0" Valid="0">
        <Description Lang="en">Password for PGP key.</Description>
        <Description Lang="de">Kennwort für PGP-Schlüssel.</Description>
        <Group>Framework</Group>
        <SubGroup>PGP</SubGroup>
        <Setting>
             <Hash>
                <Item Key="Module">Kernel::Output::HTML::OutputFilterActiveElement</Item>                 
            </Hash>
        </Setting>
        <!-- $Self->{'PGP::Key::Password'} = {'488A0B8F' => 1234,}; -->
    </ConfigItem>
    <ConfigItem Name="SMIME" Required="1" Valid="1">
        <Description Lang="en">Activate S/MIME support?</Description>
        <Description Lang="de">Unterstützung für S/MIME aktivieren?</Description>
        <Group>Framework</Group>
        <SubGroup>SMIME</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{'SMIME'} = 1; -->
    </ConfigItem>
    <ConfigItem Name="HOME" Required="0" Valid="0">
        <Description Lang="en">Directory to store S/MIME settings.</Description>
        <Description Lang="de">Verzeichnis zum Speichern der S/MIME-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">/var/lib/wwwrun</String>
        </Setting>
        <!-- $ENV{HOME} = '/var/lib/wwwrun'; -->
    </ConfigItem>
    <ConfigItem Name="SMIME::Bin" Required="1" Valid="1">
        <Description Lang="en">Path to openssl binary.</Description>
        <Description Lang="de">Pfad zum openssl Binary.</Description>
        <Group>Framework</Group>
        <SubGroup>SMIME</SubGroup>
        <Setting>
            <String Regex="">/usr/bin/openssl</String>
        </Setting>
        <!-- $Self->{'SMIME::Bin'} = '/usr/bin/openssl'; -->
    </ConfigItem>
    <ConfigItem Name="SMIME::CertPath" Required="0" Valid="0">
        <Description Lang="en">In witch directory are your SSL certificates stored?</Description>
        <Description Lang="de">In welchem Verzeichnis sind Ihre SSL-Zertifikate gespeichert?</Description>
        <Group>Framework</Group>
        <SubGroup>SMIME</SubGroup>
        <Setting>
            <String Regex="">/etc/ssl/certs</String>
        </Setting>
        <!-- $Self->{'SMIME::CertPath'} = '/etc/ssl/certs'; -->
    </ConfigItem>
    <ConfigItem Name="SMIME::PrivatePath" Required="0" Valid="0">
        <Description Lang="en">In witch directory are the private SSL certificates stored?</Description>
        <Description Lang="de">In welchem Verzeichnis werden die privaten SSL-Zertifikate gespeichert?</Description>
        <Group>Framework</Group>
        <SubGroup>SMIME</SubGroup>
        <Setting>
            <String Regex="">/etc/ssl/private/private</String>
        </Setting>
        <!-- $Self->{'SMIME::PrivatePath'} = '/etc/ssl/private/private'; -->
    </ConfigItem>
    <ConfigItem Name="System::Permission" Required="1" Valid="1">
        <Description Lang="en">The different system permissions.</Description>
        <Description Lang="de">Die unterschiedlichen Zugriffsrechte innerhalb des Systems.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Array>
                <Item>ro</Item>
                <Item>rw</Item>                
            </Array>
        </Setting>
        <!-- $Self->{'System::Permission'} = ['ro', 'rw']; -->
    </ConfigItem>
    <ConfigItem Name="System::Customer::Permission" Required="1" Valid="1">
        <Description Lang="en">The different system permissions for customers.</Description>
        <Description Lang="de">Die verschiedenen Zugrifssrechte für die Customer.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <Array>
                <Item>ro</Item>
                <Item>rw</Item>                
            </Array>
        </Setting>
        <!-- $Self->{'System::Customer::Permission'} = ['ro', 'rw']; -->
    </ConfigItem>    
    <ConfigItem Name="PreferencesTable" Required="1" Valid="1">
        <Description Lang="en">The name of the table, where the customer preferences are stored.</Description>
        <Description Lang="de">Der Name der Tabelle, in der die Voreinstellungen für die Customer gespeichert werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <String Regex="">user_preferences</String>
        </Setting>
        <!-- $Self->{PreferencesTable} = 'user_preferences'; -->
    </ConfigItem>
    <ConfigItem Name="PreferencesTableKey" Required="1" Valid="1">
        <Description Lang="en">Key for preferences table.</Description>
        <Description Lang="de">Key für die Tabelle mit den Voreinstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <String Regex="">preferences_key</String>
        </Setting>
        <!-- $Self->{PreferencesTableKey} = 'preferences_key'; -->
    </ConfigItem>
    <ConfigItem Name="PreferencesTableValue" Required="1" Valid="1">
        <Description Lang="en">Name of column in preferences table to store the data.</Description>
        <Description Lang="de">Spaltenname in der Tabelle für die Einstellungen, in der die Daten gespeichert werden.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <String Regex="">preferences_value</String>
        </Setting>
        <!-- $Self->{PreferencesTableValue} = 'preferences_value'; -->
    </ConfigItem>
    <ConfigItem Name="PreferencesTableUserID" Required="1" Valid="1">
        <Description Lang="en">Name of column in preference table, where the UserID is stored.</Description>
        <Description Lang="de">Spaltenname in der Tabelle für die Einstellungen, in der die UserID gespeichert wird.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
        <Setting>
            <String Regex="">user_id</String>
        </Setting>
        <!-- $Self->{PreferencesTableUserID} = 'user_id'; -->
    </ConfigItem>
    <ConfigItem Name="PreferencesView" Required="1" Valid="1">
        <Description Lang="en">In witch order are the different items in the preference view displayed?</Description>
        <Description Lang="de">In welcher Reihenfolge sollen die verschiedenen Abschnitte innerhalb der Ansicht für die Einstellungen angezeigt werden?</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Array>
                <Item>Frontend</Item>
                <Item>Mail Management</Item>
                <Item>Other Options</Item>                   
            </Array>
        </Setting>
        <!-- $Self->{PreferencesView} = ['Frontend', 'Mail Management', 'Other Options']; -->
    </ConfigItem>    
    <ConfigItem Name="PreferencesGroups###Password" Required="1" Valid="1">
        <Description Lang="en">Parameters for the Password object in the preference view.</Description>
        <Description Lang="de">Parameter für das Password-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesPassword</Item>
                    <Item Key="Colum">Other Options</Item>
                    <Item Key="Label">Change Password</Item>
                    <Item Key="Prio">1000</Item>
                    <Item Key="Area">Agent</Item>
                    <Item Key="PasswordRegExp"></Item>
                    <Item Key="PasswordMinSize">0</Item>
                    <Item Key="PasswordMin2Lower2UpperCharacters">0</Item>
                    <Item Key="PasswordMin2Characters">0</Item>
                    <Item Key="PasswordNeedDigit">0</Item>
                    <Item Key="Activ">1</Item>
                </Hash>
            </Setting>
        <!--        $Self->{PreferencesGroups}->{Password} = {
        Module => 'Kernel::Output::HTML::PreferencesPassword',
        Colum => 'Other Options',
        Label => 'Change Password',
        Prio => 1000,
#        PasswordRegExp => '[a-z]|[A-z]|[0-9]|\.|;|,|:|-|\+|#|!|\$|&|\?',
        PasswordRegExp => '',
        PasswordMinSize => 0,
        PasswordMin2Lower2UpperCharacters => 0,
        PasswordMin2Characters => 0,
        PasswordNeedDigit => 0,
        Activ => 1,
    };
 -->
    </ConfigItem>   
    <ConfigItem Name="PreferencesGroups###SpellDict" Required="1" Valid="1">
        <Description Lang="en">Parameters for the SpellDict object in the preference view.</Description>
                <Description Lang="de">Parameter für das SpellDict-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                    <Item Key="Colum">Other Options</Item>
                    <Item Key="Label">Spelling Dictionary</Item>
                    <Item Key="Desc">Select your default spelling dictionary</Item>
                    <Item Key="Data">
                        <Hash>
                            <Item Key="english">English</Item>
                            <Item Key="deutsch">Deutsch</Item>
                        </Hash>
                    </Item>
                    <Item Key="PrefKey">UserSpellDict</Item>
                    <Item Key="Prio">5000</Item>
                    <Item Key="Activ">1</Item>
                </Hash>
            </Setting>
        <!-- $Self->{PreferencesGroups}->{SpellDict} = {
        Module => 'Kernel::Output::HTML::PreferencesGeneric',
        Colum => 'Other Options',
        Label => 'Spelling Dictionary',
        Desc => 'Select your default spelling dictionary.',
        Data => {
            # installed dict catalog (check your insalled catalogues, e. g. deutsch -=> german!)
            # dict => frontend (ispell)
            'english' => 'English',
            'deutsch' => 'Deutsch',
            # dict => frontend (aspell)
#            'english' => 'English',
#            'german' => 'Deutsch',
        },
        PrefKey => 'UserSpellDict',
        Prio => 5000,
        Activ => 1,
    };

 -->
    </ConfigItem>   
    <ConfigItem Name="PreferencesGroups###Comment" Required="1" Valid="1">
        <Description Lang="en">Parameters for the Comment object in the preference view.</Description>
        <Description Lang="de">Parameter für das Comment-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                    <Item Key="Colum">Other Options</Item>
                    <Item Key="Label">Comment</Item>
                    <Item Key="Desc">Comment</Item>
                    <Item Key="Block">Input</Item>
                    <Item Key="Data">$Env{"UserComment"}</Item>
                    <Item Key="PrefKey">UserComment</Item>
                    <Item Key="Prio">6000</Item>
                    <Item Key="Activ">0</Item>
                </Hash>
            </Setting>
        <!-- $Self->{PreferencesGroups}->{Comment} = {
                Module => 'Kernel::Output::HTML::PreferencesGeneric',
                Colum => 'Other Options',
                Label => 'Comment',
                Desc => 'Comment',
                Block => 'Input',
                Data => '$Env{"UserComment"}',
                PrefKey => 'UserComment',
                Prio => 6000,
                Activ => 0,
            };
 -->
    </ConfigItem>   
    <ConfigItem Name="PreferencesGroups###FreeText" Required="0" Valid="0">
        <Description Lang="en">Parameters for the Freetext object in the preference view.</Description>
        <Description Lang="de">Parameter für das Freetext-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesGeneric</Item>
                    <Item Key="Colum">Other Options</Item>
                    <Item Key="Label">Comment</Item>
                    <Item Key="Desc">Example for free text</Item>
                    <Item Key="Block">Input</Item>
                    <Item Key="Data">$Env{"UserFreeText"}</Item>
                    <Item Key="PrefKey">UserFreeText</Item>
                    <Item Key="Prio">7000</Item>
                    <Item Key="Activ">1</Item>
                </Hash>
            </Setting>
        <!--     $Self->{PreferencesGroups}->{FreeText} = {
        Module => 'Kernel::Output::HTML::PreferencesGeneric',
        Colum => 'Other Options',
        Label => 'Free Text',
        Desc => 'Example for free text.',
        Block => 'Input',
        Data => '$Env{"UserFreeText"}',
        PrefKey => 'UserFreeText',
        Prio => 7000,
        Activ => 1,
    };
 -->
    </ConfigItem>   
    <ConfigItem Name="PreferencesGroups###Language" Required="1" Valid="1">
        <Description Lang="en">Parameters for the Language object in the preference view.</Description>
        <Description Lang="de">Parameter für das Language-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesLanguage</Item>
                    <Item Key="Colum">Frontend</Item>
                    <Item Key="Label">Language</Item>
                    <Item Key="Desc">Select your frontend language</Item>
                    <Item Key="PrefKey">UserLanguage</Item>
                    <Item Key="Prio">1000</Item>
                    <Item Key="Activ">1</Item>
                </Hash>
            </Setting>
        <!--      $Self->{PreferencesGroups}->{Language} = {
        Module => 'Kernel::Output::HTML::PreferencesLanguage',
        Colum => 'Frontend',
        Label => 'Language',
        Desc => 'Select your frontend language.',
        PrefKey => 'UserLanguage',
        Prio => 1000,
        Activ => 1,
    };
 -->
    </ConfigItem>   
    <ConfigItem Name="PreferencesGroups###Theme" Required="1" Valid="1">
        <Description Lang="en">Parameters for the Time object in the preference view.</Description>
        <Description Lang="de">Parameter für das Time-Objekt in der Ansicht für die Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentPreferences</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::PreferencesTheme</Item>
                    <Item Key="Colum">Frontend</Item>
                    <Item Key="Label">Theme</Item>
                    <Item Key="Desc">Select your frontend Theme</Item>
                    <Item Key="PrefKey">UserTheme</Item>
                    <Item Key="Prio">2000</Item>
                    <Item Key="Activ">1</Item>
                </Hash>
            </Setting>
        <!--      $Self->{PreferencesGroups}->{Theme} = {
        Module => 'Kernel::Output::HTML::PreferencesTheme',
        Colum => 'Frontend',
        Label => 'Theme',
        Desc => 'Select your frontend Theme.',
        PrefKey => 'UserTheme',
        Prio => 2000,
        Activ => 1,
    };

 -->
    </ConfigItem>   
    <ConfigItem Name="NotificationSenderName" Required="1" Valid="1">
        <Description Lang="en">Witch name do you want to use for the sender of system notification messages?</Description>
        <Description Lang="de">Welcher Name soll für den Sender von Benachrichtigungsmails verwendet werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">OTRS Notification Master</String>
        </Setting>
        <!-- $Self->{NotificationSenderName} = 'OTRS Notification Master'; -->
    </ConfigItem>
    <ConfigItem Name="NotificationSenderEmail" Required="1" Valid="1">
        <Description Lang="en">Witch mail address should be used for the sender of notification messages?</Description>
        <Description Lang="de">Welche Mailadresse soll für das Versenden von Benachrichtigungsmails verwendet werden?</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">otrs@&lt;OTRS_CONFIG_FQDN&gt;</String>
        </Setting>
        <!-- $Self->{NotificationSenderEmail} = 'otrs@&lt;OTRS_CONFIG_FQDN&gt;'; -->
    </ConfigItem>
    <ConfigItem Name="NotificationSubjectLostPassword" Required="1" Valid="1">
        <Description Lang="en">Subject for the notification email to agents about new password.</Description>
        <Description Lang="de">Betreff für die Benachrichtigungsmail an die Agents für ein neues Kennwort.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <String Regex="">New OTRS Password!</String>
        </Setting>
        <!-- $Self->{NotificationSubjectLostPassword} = 'New OTRS Password!'; -->
    </ConfigItem>
    <ConfigItem Name="NotificationBodyLostPassword" Required="1" Valid="1">
        <Description Lang="en">Body for notification mail to agents about new password.</Description>
        <Description Lang="de">Body der Benachrichtigungsmail an die Agents für ein neues Kennwort.</Description>
        <Group>Framework</Group>
        <SubGroup>Core</SubGroup>
        <Setting>
            <TextArea>
                Hi &lt;OTRS_USERFIRSTNAME&gt;,

you or someone impersonating you has requested to change your OTRS
password.

New Password: &lt;OTRS_NEWPW&gt;

&lt;OTRS_CONFIG_HttpType&gt;://&lt;OTRS_CONFIG_FQDN&gt;/&lt;OTRS_CONFIG_ScriptAlias&gt;index.pl

Your OTRS Notification Master
            </TextArea>
        </Setting>
    </ConfigItem> 
    <ConfigItem Name="CustomerPanelSessionName" Required="1" Valid="1">
        <Description Lang="en">Name of the key for customer sessions.</Description>
        <Description Lang="de">Kennung für Kunden-Sitzungen.</Description>
        <Group>Framework</Group>
        <SubGroup>Session</SubGroup>
        <Setting>
            <String Regex="">CSID</String>
        </Setting>
        <!-- $Self->{CustomerPanelSessionName} = 'CSID'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelUserID" Required="1" Valid="1">
        <Description Lang="en">UserID for customer panel.</Description>
        <Description Lang="de">UserID für das Customer-Panel.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">1</String>
        </Setting>
        <!-- $Self->{CustomerPanelUserID} = 1; -->
    </ConfigItem>
    <ConfigItem Name="CustomerGroupSupport" Required="1" Valid="1">
        <Description Lang="en">Activate support for customer groups?</Description>
        <Description Lang="de">Soll die Unterstützung von Customer-Gruppen aktiviert werden?</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{CustomerGroupSupport} = 0; -->
    </ConfigItem>
    <ConfigItem Name="CustomerGroupAlwaysGroups" Required="1" Valid="1">
        <Description Lang="en">If CustomerGroupSupport is enabled and you don't want to manage every user for this groups, then put the groups for all customer user in there.</Description>
        <Description Lang="de">Ist CustomerGroupSupport aktiviert und sollen nicht alle Benutzer dieser Gruppen einzeln verwaltet werden, können die einzelnen Gruppen hier angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Array>
                <Item>users</Item>
                <Item>info</Item>                   
            </Array>
        </Setting>
        <!-- $Self->{CustomerGroupAlwaysGroups} = ['users', 'info']; -->
    </ConfigItem>    
    <ConfigItem Name="CustomerFrontend::NotifyModule###1-ShowAgentOnline" Required="1" Valid="1">
        <Description Lang="en">Module that shows the currently loged in agents in the customer interface.</Description>
        <Description Lang="de">Modul für die Anzeige von gerade am System angemeldeten Agenten innerhalb des Customer-Interfaces.</Description>
        <Group>Framework</Group>
        <SubGroup>FrontendModulNotify</SubGroup>
            <Setting>
                <Hash>
                    <Item Key="Module">Kernel::Output::HTML::NotificationAgentOnline</Item>
                </Hash>
            </Setting>
        <!--  $Self->{'CustomerFrontend::NotifyModule'}->{'1-ShowAgentOnline'} = {
                     Module => 'Kernel::Output::HTML::NotificationAgentOnline',   };
 -->
    </ConfigItem>   
    <ConfigItem Name="CustomerPanelLoginURL" Required="1" Valid="1">
        <Description Lang="en">Alternate login URL for the customer panel..</Description>
        <Description Lang="de">Alternative Login-URL für das Customer-Panel.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <SubGroup>Unknown</SubGroup>        
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{CustomerPanelLoginURL} = ''; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelLogoutURL" Required="1" Valid="1">
        <Description Lang="en">Alternate logout URL for the customer panel.</Description>
        <Description Lang="de">Alternative Logout-URL für das Customer-Panel.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <SubGroup>Unknown</SubGroup>        
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- $Self->{CustomerPanelLogoutURL} = ''; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelPreApplicationModule" Required="0" Valid="0">
        <Description Lang="en">CustomerPanelPreApplicationModule. This module and its PreRun() function will be executed, if defined, for every request. This module is useful to check some user options or to display news about new applications.</Description>
        <Description Lang="de">CustomerPanelPreApplicationModule. Dieses Modul und seine PreRun() Funktion wird für jede Anfrage ausgeführt. Das Modul kann für die Überprüfung einiger Benutzeroptionen oder für die Anzeige von Neuigkeiten verwendet werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">Kernel::Modules::CustomerAccept</String>
        </Setting>
        <!-- $Self->{CustomerPanelPreApplicationModule} = 'Kernel::Modules::CustomerAccept'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanel::InfoKey" Required="0" Valid="0">
        <Description Lang="en">Key to check with CustomerAccept. If this user preferences key is true, then the message is accepted by the system.</Description>
        <Description Lang="de">Key für CustomerAccept. Wurde dieser Schlüssel verifiziert, wird die Nachricht vom System akzeptiert.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">CustomerAccept1</String>
        </Setting>
        <!-- $Self->{'CustomerPanel::InfoKey'} = 'CustomerAccept1'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanel::InfoFile" Required="0" Valid="0">
        <Description Lang="en">Shown InfoFile, that is located under Kernel/Output/HTML/Standard/CustomerAccept.dtl.</Description>
        <Description Lang="de">Angezeigtes InfoFile, welches unter Kernel/Output/HTML/Standard/CustomerAccept.dtl zu finden ist.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">CustomerAccept</String>
        </Setting>
        <!-- $Self->{'CustomerPanel::InfoFile'} = 'CustomerAccept'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelLostPassword" Required="1" Valid="1">
        <Description Lang="en">Activate lost passowrd feature for customers?</Description>
        <Description Lang="de">Feature für das Zuschicken verlorener Passwörter für die Customer aktivieren?</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Option SelectedID="1">
                <Item Key="0">No</Item>
                <Item Key="1">Yes</Item>               
            </Option>
        </Setting>
        <!-- $Self->{CustomerPanelLostPassword} = 1; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelCreateAccount" Required="1" Valid="1">
        <Description Lang="en">Can Customers create their own account?</Description>
        <Description Lang="de">Können Customer selbst Ihren Account erstellen?</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
           <Option SelectedID="1">
               <Item Key="0">No</Item>
               <Item Key="1">Yes</Item>
           </Option>
        </Setting>
        <!-- $Self->{CustomerPanelCreateAccount} = 1; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelSubjectLostPassword" Required="1" Valid="1">
        <Description Lang="en">Subject of notification mail to customers about new password.</Description>
        <Description Lang="de">Betreff der Benachrichtigungsmail für Customer, die bei der Vergabe eines neuen Kennworts geschickt wird</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">New OTRS Password!</String>
        </Setting>
        <!-- $Self->{CustomerPanelSubjectLostPassword} = 'New OTRS Password!'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelBodyLostPassword" Required="1" Valid="1">
        <Description Lang="en">Body of notification mail for customers about new password</Description>
        <Description Lang="de">Body der Benachrichtigungsmail für Customer, die für ein neues Kennwort versendet wird</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <TextArea>Hi &lt;OTRS_USERFIRSTNAME&gt;,

you or someone impersonating you has requested to change your OTRS
password.

New Password: &lt;OTRS_NEWPW&gt;

&lt;OTRS_CONFIG_HttpType&gt;://&lt;OTRS_CONFIG_FQDN&gt;/&lt;OTRS_CONFIG_ScriptAlias&gt;customer.pl

Your OTRS Notification Master
            </TextArea>
        </Setting>
    </ConfigItem> 
    <ConfigItem Name="CustomerPanelSubjectNewAccount" Required="1" Valid="1">
        <Description Lang="en">Subject for notification email to customers about new account.</Description>
        <Description Lang="de">Betreff der Benachrichtigungsmail an den Customer bei einem neuen Account.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">New OTRS Account!</String>
        </Setting>
        <!-- $Self->{CustomerPanelSubjectNewAccount} = 'New OTRS Account!'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPanelBodyNewAccount" Required="1" Valid="1">
        <Description Lang="en">Body of notification email to customer about new account.</Description>
        <Description Lang="de">Body der Benachrichtigungsmail an den Customer bei einem neuen Account.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <TextArea>Hi &lt;OTRS_USERFIRSTNAME&gt;,

you or someone impersonating you has created a new OTRS account for
you (&lt;OTRS_USERFIRSTNAME&gt; &lt;OTRS_USERLASTNAME&gt;).

Login: &lt;OTRS_USERLOGIN&gt;
Password: &lt;OTRS_USERPASSWORD&gt;

&lt;OTRS_CONFIG_HttpType&gt;://&lt;OTRS_CONFIG_FQDN&gt;/&lt;OTRS_CONFIG_ScriptAlias&gt;customer.pl

Your OTRS Notification Master
            </TextArea>
        </Setting>
    </ConfigItem> 
    <ConfigItem Name="Customer::AuthModule" Required="1" Valid="1">
        <Description Lang="en">Module to authenticate customers.</Description>
        <Description Lang="de">Modul zum authentifizieren der Customer.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <SubGroup>Unknown</SubGroup>
        <Setting>
            <Option Location="Kernel/System/CustomerAuth/*.pm" SelectedID="Kernel::System::CustomerAuth::DB"></Option>
        </Setting>
        <!-- $Self->{'Customer::AuthModule'} = 'Kernel::System::CustomerAuth::DB'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::Table" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you have to specify the name f the table where your customer data are stored.</Description>
        <Description Lang="de">Wenn "DB" für Customer::AuthModule ausgewählt wurde, muss der Name der Tabelle angegeben werden, in der die Daten der Customer gespeichert werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">customer_user</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::Table'} = 'customer_user'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::CustomerKey" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you have to specify the name of the column for the CustomerKey in your customer table.</Description>
        <Description Lang="de">Wenn "DB" als Customer::AuthModule augewählt wurde, muss der Spaltenname innerhalb der Customer-Tabelle angegeben werden, in der der CustomerKey gespeichert wird.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">login</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::CustomerKey'} = 'login'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::CustomerPassword" Required="1" Valid="1">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you have to specify the column name for the CustomerPassword in your customer table.</Description>
        <Description Lang="de">Wenn "DB" als Customer::AuthModule ausgewählt wurde, muss der Spaltenname angegeben werden, in dem das Customer-Passwort innerhalb der Customer-Tabelle gespeichert wird.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">pw</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::CustomerPassword'} = 'pw'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::DSN" Required="0" Valid="0">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you hav to specify the DSN for the connection to the customer table.</Description>
        <Description Lang="de">Wenn "DB" als Customer::AuthModule ausgewählt wurde, muss der DSN für die Verbindung zur Customer-Tablle angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">DBI:mysql:database=customerdb;host=customerdbhost</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::DSN'} = "DBI:mysql:database=customerdb;host=customerdbhost"; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::User" Required="0" Valid="0">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you can specify a username to connect to your customer table.</Description>
        <Description Lang="de">Wenn "DB" für Customer::AuthModule ausgewählt wurde, kann ein Benutzername für den Verbindungsaufbau zur Customer-Tabelle angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">some_user</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::User'} = "some_user"; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::DB::Password" Required="0" Valid="0">
        <Description Lang="en">If "DB" was selected for Customer::AuthModule, you can specify a password to connect to your customer table.</Description>
        <Description Lang="de">Wenn "DB" für Customer::AuthModule ausgewählt wurde, kann ein Kennwort für den Verbindungsaufbau zur Customer-Tabelle angegeb
                en werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">some_password</String>
        </Setting>
        <!-- $Self->{'Customer::AuthModule::DB::Password'} = "some_password"; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::Host" Required="0" Valid="0">
        <Description Lang="en">If "LDAP was selected for Customer::AuthModule, you can specify your LDAP host.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule ausgewählt wurde, muss der Name des LDAP Hosts angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">ldap.example.com</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::Host'} = 'ldap.example.com'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::BaseDN" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthModule, specify your BaseDN.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule augewählt wurde, muss die BaseDN angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">dc=example,dc=com</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::BaseDN'} = 'dc=example,dc=com'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::UID" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::Authmodule, specefy the UID.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthMOdule ausgewählt wurde, kann hier die UID angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">uid</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::UID'} = 'uid'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::GroupDN" Required="0" Valid="0">
        <Description Lang="en">I "LDAP" was selected for Customer::Authmodule, you can check if the user is allowed to auth because he is in a posixGroup, e.g. user needs to be in a group xyz to use otrs. Specify the group, who may access the system.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule ausgewählt wurde und nur eine bestimmte Posixgruppen auf das System zugreifen soll, dann kann diese Gruppe hier angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">cn=otrsallow,ou=posixGroups,dc=example,dc=com</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::GroupDN'} = 'cn=otrsallow,ou=posixGroups,dc=example,dc=com'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::AccessAttr" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthModule, you can specify access attributes here.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule ausgewählt wurde, können hier Zugriffssattribute angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">memberUid</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::AccessAttr'} = 'memberUid'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::UserAttr" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthMOdule, you can specify user attributes. For LDAP posixGroups objectclass UID, for non ldap posixGroups objectclass full user DN.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule ausgewählt wurde, können Benutzerattribute spezifiziert werden. Für die ObjectClass PosixGroups aus dem LDAP-Baum UID, für nicht-PostxGroups muss der volle DN angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">UID</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::UserAttr'} = 'UID'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::SearchUserDN" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthMOdule and your ussers have only anonymous access to the LDAP tree, but you want to search throug the data, you can do this with a user who has access to the LDAP directory. Specify the username for this special user here.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthMOdule ausgewählt wurde und die Benutzer nur anonymen Zugriff auf die Daten im LDAP-Baum haben, diese Daten aber trotzdem durchsucht werden sollen, dann kann dies über einen speziellen Benutzer mit Zugriff auf das LDAP-Verzeichnis realisiert werden. Hier kann der Benutzername für diesen speziellen User angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::SearchUserDN'} = ''; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::SearchUserPw" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthMOdule and your ussers have only anonymous access to the LDAP tree, but you want to search throug the data, you can do this with a user who has access to the LDAP directory. Specify the password for this special user here.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthMOdule ausgewählt wurde und die Benutzer nur anonymen Zugriff auf die Daten im LDAP-Baum haben, diese Daten aber trotzdem durchsucht werden sollen, dann kann dies über einen speziellen Benutzer mit Zugriff auf das LDAP-Verzeichnis realisiert werden. Hier kann das Kennwort für diesen speziellen User angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::SearchUserPw'} = ''; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::AlwaysFilter" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected, you can add a filter to each LDAP query, e.g. (mail=*) or (objectclass=user).</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule gewählt wurde und für jede Suche standardmäßig ein Filter vorhanden sein soll, dann kann dieser Filter hier angegeben werden, z.B. (mail=*) oder (objectclass=user).</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex=""></String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::AlwaysFilter'} = ''; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::UserSuffix" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthModule an if you want to add a suffix to every customer login name, specifiy it here, e. g. you just want to write the username user but in your ldap directory exists user@domain.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthMOdule ausgewählt wurde und automatisch ein Suffix an jeden Benutzernamen gehängt werden soll, dann kann dieses Suffix hier angegeben werden. ZB. soll nur user als Benutzername eingegeben werden, im LDAP-Tree existiert aber user@domain.com.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">@domain.com</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::LDAP::UserSuffix'} = '@domain.com'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::LDAP::Params" Required="0" Valid="0">
        <Description Lang="en">If "LDAP" was selected for Customer::AuthModule and special paramaters are needed for the Net::LDAP perl module, you can specify them here. See "perldoc Net::LDAP" for more information about the parameters.</Description>
        <Description Lang="de">Wenn "LDAP" als Customer::AuthModule ausgewählt wurde und spezielle Parameter für das Net::LDAP-perl-Modul angegeben werden sollen, dann kann das hier gemacht werden. Mehr Infos zu den möglichen Parametern bekommt man mit "perdoc Net::LDAP".</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <Hash>
                <Item Key="port">389</Item>
                <Item Key="timeout">120</Item>
                <Item Key="async">0</Item>
                <Item Key=" version">3</Item>
            </Hash>
        </Setting>
        <!--
            #    $Self->{'Customer::AuthModule::LDAP::Params'} = {
            #        port => 389,
            #        timeout => 120,
            #        async => 0,
            #        version => 3,
            #    };
        -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::Radius::Host" Required="0" Valid="0">
        <Description Lang="en">If "Radius" was selected for Customer::AuthModule, specify your radius host.</Description>
        <Description Lang="de">Wenn "Radius" als Customer::AuthModule ausgewählt wurde, kann hier der Radius-Server angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">radiushost</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::Radius::Host'} = 'radiushost'; -->
    </ConfigItem>
    <ConfigItem Name="Customer::AuthModule::Radius::Password" Required="0" Valid="0">
        <Description Lang="en">If "Radius" was selected for Customer::AuthModule, specfiy the password to authenticate to your radius host.</Description>
        <Description Lang="de">Wenn "Radius" als Customer::AuthModule ausgewählt wurde, kann hier das Kennwort für die Anmeldung am Radius-Server angegeben werden.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontend</SubGroup>
        <Setting>
            <String Regex="">radiussecret</String>
        </Setting>
        <!-- # $Self->{'Customer::AuthModule::Radius::Password'} = 'radiussecret'; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferences" Required="1" Valid="1">
        <Description Lang="en">Parameters for the customer preference table.</Description>
        <Description Lang="de">Parameter für die Tabelle mit den Einstellungen für die Customer.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::System::CustomerUser::Preferences::DB</Item>
                <Item  Key="Params">
                    <Hash>
                        <Item Key="Table">customer_preferences</Item>
                        <Item Key="TableKey">preferences_key</Item>
                        <Item Key="TableValue">preferences_value</Item>
                        <Item Key="TableUserID">user_id</Item>
                    </Hash>
                </Item>
            </Hash>
        </Setting>
        <!--
            $Self->{'CustomerPreferences'} = {
                Module => 'Kernel::System::CustomerUser::Preferences::DB',
                Params => {
                    Table => 'customer_preferences',
                    TableKey => 'preferences_key',
                    TableValue => 'preferences_value',
                    TableUserID => 'user_id',
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesView" Required="1" Valid="1">
        <Description Lang="en">How are the different items in the customer preferences view ordered?</Description>
        <Description Lang="de">In welcher Reihenfolge werden die verschiedenen Abschnitte innerhalb der Customer-Einstellungen angezeigt?</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Array>
                <Item>Frontend</Item>
                <Item>Other Options</Item>
            </Array>
        </Setting>
        <!-- $Self->{CustomerPreferencesView} = ['Frontend', 'Other Options']; -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###Password" Required="1" Valid="1">
        <Description Lang="en">All parameters for the password area in the customer preferences.</Description>
        <Description Lang="de">Alle Parameter für den Passwort-Bereich in den Customer-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesPassword</Item>
                <Item Key="Colum">Other Options</Item>
                <Item Key="Label">Change Password</Item>
                <Item Key="Prio">1000</Item>
                <Item Key="Area">Customer</Item>
                <!-- <Item Key="PasswordRegExp">[a-z]|[A-z]|[0-9]|\.|;|,|:|-|\+|#|!|\$|&|\?</Item> -->
                <Item Key="PasswordRegExp"></Item>
                <Item Key="PasswordMinSize">0</Item>
                <Item Key="PasswordMin2Lower2UpperCharacters">0</Item>
                <Item Key="PasswordMin2Characters">0</Item>
                <Item Key="PasswordNeedDigit">0</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{Password} = {
                Module => 'Kernel::Output::HTML::PreferencesPassword',
                Colum => 'Other Options',
                Label => 'Change Password',
                Prio => 1000,
                # PasswordRegExp => '[a-z]|[A-z]|[0-9]|\.|;|,|:|-|\+|#|!|\$|&|\?',
                PasswordRegExp => '',
                PasswordMinSize => 0,
                PasswordMin2Lower2UpperCharacters => 0,
                PasswordMin2Characters => 0,
                PasswordNeedDigit => 0,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###Language" Required="1" Valid="1">
        <Description Lang="en">All parameters for the language area in the customer preferences.</Description>
        <Description Lang="de">Alle Parameter für den Bereich zur Sprachenauswahl in den Customer-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesLanguage</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">Language</Item>
                <Item Key="Desc">Select your frontend language</Item>
                <Item Key="Data">Get('DefaultUsedLanguages')</Item>
                <Item Key="PrefKey">UserLanguage</Item>
                <Item Key="Prio">2000</Item>
                <Item Key="Activ">1</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{Language} = {
                Module => 'Kernel::Output::HTML::PreferencesLanguage',
                Colum => 'Frontend',
                Label => 'Language',
                Desc =>'Select your frontend language.',
                Data => $Self->Get('DefaultUsedLanguages'),
                PrefKey => 'UserLanguage',
                Prio => 2000,
                Activ => 1,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###Theme" Required="1" Valid="1">
        <Description Lang="en">All parameters for the theme area in the customer preferences.</Description>
        <Description Lang="de">Alle Parameter für den Bereich der Theme-Auswahl innerhalb der Customer-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesTheme</Item>
                <Item Key="Colum">Frontend</Item>
                <Item Key="Label">Theme</Item>
                <Item Key="Desc">Select your frontend Theme</Item>
                <Item Key="PrefKey">UserTheme</Item>
                <Item Key="Prio">1000</Item>
                <Item Key="Activ">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{Theme} = {
                Module => 'Kernel::Output::HTML::PreferencesTheme',
                Colum => 'Frontend',
                Label => 'Theme',
                Desc => 'Select your frontend Theme.',
                PrefKey => 'UserTheme',
                Prio => 1000,
                Activ => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###PGP" Required="1" Valid="1">
        <Description Lang="en">All parameters for the PGP area in the customer preferences.</Description>
        <Description Lang="de">Alle Parameter für die PGP-Einstellungen innerhalb der Customer-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesPGP</Item>
                <Item Key="Colum">Other Options</Item>
                <Item Key="Label">PGP Key</Item>
                <Item Key="Desc">PGP Key Upload</Item>
                <Item Key="PrefKey">UserPGPKey</Item>
                <Item Key="Prio">10000</Item>
                <Item Key="Activ">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{PGP} = {
                Module => 'Kernel::Output::HTML::PreferencesPGP',
                Colum => 'Other Options',
                Label => 'PGP Key',
                Desc => 'PGP Key Upload',
                PrefKey => 'UserPGPKey',
                Prio => 10000,
                Activ => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerPreferencesGroups###SMIME" Required="1" Valid="1">
        <Description Lang="en">All parameters for the S/MIME area in the customer preferences.</Description>
        <Description Lang="de">Alle Parameter für die S/MIME-Einstellungen innerhalb der Customer-Einstellungen.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerPreferences</SubGroup>
        <Setting>
            <Hash>
                <Item Key="Module">Kernel::Output::HTML::PreferencesSMIME</Item>
                <Item Key="Colum">Other Options</Item>
                <Item Key="Label">SMIME Certificate</Item>
                <Item Key="Desc">SMIME Certificate Upload</Item>
                <Item Key="PrefKey">UserSMIMEKey</Item>
                <Item key="Prio">11000</Item>
                <Item Key="Activ">0</Item>
            </Hash>
        </Setting>
        <!--
            $Self->{CustomerPreferencesGroups}->{SMIME} = {
                Module => 'Kernel::Output::HTML::PreferencesSMIME',
                Colum => 'Other Options',
                Label => 'SMIME Certificate',
                Desc => 'SMIME Certificate Upload',
                PrefKey => 'UserSMIMEKey',
                Prio => 11000,
                Activ => 0,
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###Logout" Required="1" Valid="1">
        <Description Lang="en">All parameters for the Logout object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des Logout-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Logout</Description>
                <NavBar>
                    <Description>Logout</Description>
                    <Name>Logout</Name>
                    <Image>exit.png</Image>
                    <Link>Action=Logout</Link>
                    <NavBar></NavBar>
                    <Block>ItemPre</Block>
                    <AccessKey>l</AccessKey>
                    <Prio>100</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'Logout'} = {
                Description => 'Logout',
                NavBar => [
                    {
                    Description => 'Logout',
                    Name => 'Logout',
                    Image => 'exit.png',
                    Link => 'Action=Logout',
                    NavBar => '',
                    Block => 'ItemPre',
                    Prio => 100,
                },
            ],
        };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentPreferences" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AgentPreference object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentPreference-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Agent Preferences</Description>
                <Title>Preferences</Title>
                <NavBar>
                    <Description>Agent Preferences</Description>
                    <Name>Preferences</Name>
                    <Image>prefer.png</Image>
                    <Link>Action=AgentPreferences</Link>
                    <AccessKey>p</AccessKey>
                    <Prio>1000</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentPreferences'} = {
                Description => 'Agent Preferences',
                Title => 'Preferences',
                NavBar => [
                {
                    Description => 'Agent Preferences',
                    Name => 'Preferences',
                    Image => 'prefer.png',
                    Link => 'Action=AgentPreferences',
                    Prio => 1000,
                },
            ],
        };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentSpelling" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AgentSpelling object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentSpelling-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Spell checker</Description>
                <Title>Spell Checker</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentSpelling'} = {
                Description => 'Spell checker',
                Title => 'Spell Checker',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentBook" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AgentBook object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentBook-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Address book of CustomerUser sources</Description>
                <Title>Address Book</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentBook'} = {
                Description => 'Address book of CustomerUser sources',
                Title => 'Address Book',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentLinkObject" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AgentLinkObject object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentLinkObject-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Link Object</Description>
                <Title>Link Object</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentLinkObject'} = {
                Description => 'Link Object',
                Title => 'Link Object',    
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentInfo" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AgentInfo object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentInfo-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Generic Info module</Description>
                <Title>Info</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AgentInfo'} = {
                Description => 'Generic Info module',
                Title => 'Info',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###SystemStats" Required="1" Valid="1">
        <Description Lang="en">All parameters for the SystemStats object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des SystemStats-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <GroupRo>['stats','admin']</GroupRo>
                <Description>Stats</Description>
                <Title>Stats</Title>
                <NavBarName>Ticket</NavBarName>
                <NavBar>
                    <Description>Stats-Area</Description>
                    <Name>Stats</Name>
                    <Image>stats.png</Image>
                    <Link>Action=SystemStats</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>t</AccessKey>
                    <Prio>400</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'SystemStats'} = {
                GroupRo => ['stats', 'admin'],
                Description => 'Stats',
                Title => 'Stats',
                NavBarName => 'Ticket',
                NavBar => [
                {
                    Description => 'Stats-Area',
                    Name => 'Stats',
                    Image => 'stats.png',
                    Link => 'Action=SystemStats',
                    NavBar => 'Ticket',
                    Prio => 400,
                },
            ],
        };
    -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###Admin" Required="1" Valid="1">
        <Description Lang="en">All parameters for the Admin object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des Admin-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin-Area</Description>
                <Title></Title>
                <NavBarName>Admin</NavBarName>
                <NavBar>
                    <Description>Admin-Area</Description>
                    <Type>Menu</Type>
                    <Block>ItemArea</Block>
                    <Name>Admin</Name>
                    <Image>admin.png</Image>
                    <Link>Action=Admin</Link>
                    <NavBar>Admin</NavBar>
                    <AccessKey>a</AccessKey>
                    <Prio>10000</Prio>
                </NavBar>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'Admin'} = {
                Group => admin,
                Description => 'Admin-Area',
                Title => '',
                NavBarName => 'Admin',
                NavBar => [
                {
                    Description => 'Admin-Area',
                    Type => 'Menu',
                    Block => 'ItemArea',
                    Name => 'Admin',
                    Image => 'admin.png',
                    Link => 'Action=Admin',
                    NavBar => 'Admin',
                    Prio => 10000,
                },
                ],
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminUser" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminUser object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminUser-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>User</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Users</Name>
                    <Block>Block1</Block>
                    <Prio>100</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminUser'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'User',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Users',
                    Block => 'Block1',
                    Prio => 100,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminGroup" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminGroup object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminGroup-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Group</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Groups</Name>
                    <Block>Block1</Block>
                    <Prio>150</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminGroup'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Group',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Groups',
                    Block => 'Block1',
                    Prio => 150,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminUserGroup" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminUserGroup object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminUserGroup-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>User &lt;-&gt; Groups</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Users &lt;-&gt; Groups</Name>
                    <Block>Block1</Block>
                    <Prio>200</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminUserGroup'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'User <-> Groups',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Users <-> Groups',
                    Block => 'Block1',
                    Prio => 200,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminCustomerUser" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminCustomerUser object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminCustomerUser-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <GroupRo></GroupRo>
                <Group>admin</Group>
                <Group>users</Group>
                <Description>Edit Customer Users</Description>
                <Title>Customer User</Title>
                <NavBarName></NavBarName>
                <NavBar>
                    <Description>Edit Customer Users</Description>
                    <Name>Customer</Name>
                    <Image>folder_yellow.png</Image>
                    <Link>Action=AdminCustomerUser&Nav=Agent</Link>
                    <NavBar>Ticket</NavBar>
                    <AccessKey>c</AccessKey>
                    <Prio>9000</Prio>
                </NavBar>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Customer Users</Name>
                    <Block>Block1</Block>
                    <Prio>300</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminCustomerUser'} = {
                GroupRo => '',
                Group => ['admin', 'users'],
                Description => 'Edit Customer Users',
                Title => 'Customer User',
                NavBarName => '',
                NavBar => [
                {
                    Description => 'Edit Customer Users',
                    Name => 'Customer',
                    Image => 'folder_yellow.png',
                    Link => 'Action=AdminCustomerUser&Nav=Agent',
                    NavBar => 'Ticket',
                    Prio => 9000,
                }
                ],
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Customer Users',
                    Block => 'Block1',
                    Prio => 300,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminCustomerUserGroup" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminCustomerUserGroup object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminCustomerUserGroup-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Customer User &lt;-&gt; Group</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Customer Users &lt;-&gt; Groups</Name>
                    <Block>Block1</Block>
                    <Prio>400</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminCustomerUserGroup'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Customer User <-> Group',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Customer Users <-> Groups',
                    Block => 'Block1',
                    Prio => 400,
                },
                };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminRole" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminRole object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminRole-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Role</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Roles</Name>
                    <Block>Block1</Block>
                    <Prio>500</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminRole'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Role',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Roles',
                    Block => 'Block1',
                    Prio => 500,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminRoleUser" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminRoleUser object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminRoleUser-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Role &lt;-&gt; User</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Roles &lt;-&gt; Users</Name>
                    <Block>Block1</Block>
                    <Prio>600</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminRoleUser'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Role <-> User',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Roles <-> Users',
                    Block => 'Block1',
                    Prio => 600,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminRoleGroup" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminRoleGroup object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminRoleGroup-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>'Role &lt;-&gt; Groups</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Roles &lt;-&gt; Groups</Name>
                    <Block>Block1</Block>
                    <Prio>700</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminRoleGroup'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Role <-> Groups',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Roles <-> Groups',
                    Block => 'Block1',
                    Prio => 700,
                },
            };
        -->        
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSMIME" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminSMIME object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminSMIME-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>SMIME Management</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>SMIME</Name>
                    <Block>Block3</Block>
                    <Prio>500</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSMIME'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'SMIME Management',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'SMIME',
                    Block => 'Block3',
                    Prio => 500,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminPGP" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminPGP object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminPGP-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>PGP Key Management</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>PGP</Name>
                    <Block>Block3</Block>
                    <Prio>600</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminPGP'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'PGP Key Management',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'PGP',
                    Block => 'Block3',
                    Prio => 600,
                 },
             };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminPOP3" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminPop3 object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminPop3-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>POP3 Account</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>PostMaster POP3 Account</Name>
                    <Block>Block4</Block>
                    <Prio>100</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminPOP3'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'POP3 Account',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'PostMaster POP3 Account',
                    Block => 'Block4',
                    Prio => 100,
                },  
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminPostMasterFilter" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminPostMasterFilter object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminPostMasterFilter-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>PostMaster Filter</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>PostMaster Filter</Name>
                    <Block>Block4</Block>
                    <Prio>200</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminPostMasterFilter'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'PostMaster Filter',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'PostMaster Filter',
                    Block => 'Block4',
                    Prio => 200,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminEmail" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminEmail object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminEmail-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Admin-Email</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>AdminEmail</Name>
                    <Block>Block4</Block>
                    <Prio>400</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminEmail'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Admin-Email',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'AdminEmail',
                    Block => 'Block4',
                    Prio => 400,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSession" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminSession object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminSession-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Session Management</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Session Management</Name>
                    <Block>Block4</Block>
                    <Prio>500</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSession'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Session Management',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Session Management',
                    Block => 'Block4',
                    Prio => 500,
                },
            };    
        -->
     </ConfigItem>    
     <ConfigItem Name="Frontend::Module###AdminLog" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminLog object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminLog-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>System Log</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>System Log</Name>
                    <Block>Block4</Block>
                    <Prio>600</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminLog'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'System Log',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'System Log',
                    Block => 'Block4',
                    Prio => 600,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminSelectBox" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminSelectBox object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminSelectBox-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Admin</Description>
                <Title>Select box</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Select Box</Name>
                    <Block>Block4</Block>
                    <Prio>700</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminSelectBox'} = {
                Group => admin,
                Description => 'Admin',
                Title => 'Select box',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Select Box',
                    Block => 'Block4',
                    Prio => 700,
                },
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AdminPackageManager" Required="1" Valid="1">
        <Description Lang="en">All parameters for the AdminPackageManager object in the admin area.</Description>
        <Description Lang="de">Alle Parameter des AdminPackageManager-Objekts im Admin-Bereich.</Description>
        <Group>Framework</Group>
        <SubGroup>AdminFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Group>admin</Group>
                <Description>Software Package Manager</Description>
                <Title>Package Manager</Title>
                <NavBarName>Admin</NavBarName>
                <NavBarModule>
                    <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>
                    <Name>Package Manager</Name>
                    <Block>Block4</Block>
                    <Prio>1000</Prio>
                </NavBarModule>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'Frontend::Module'}->{'AdminPackageManager'} = {
                Group => admin,
                Description => 'Software Package Manager',
                Title => 'Package Manager',
                NavBarName => 'Admin',
                NavBarModule => {
                    Module => 'Kernel::Output::HTML::NavBarModuleAdmin',
                    Name => 'Package Manager',
                    Block => 'Block4',
                    Prio => 1000,
                },
                };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###Logout" Required="1" Valid="1">
        <Description Lang="en">All parameters for the Logout object in the customer frontend.</Description>
        <Description Lang="de">Alle Parameter für das Logout-Objekt innerhalb des Customer-Frontends.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Logout of customer panel</Description>
                <NavBarName></NavBarName>
                <NavBar>
                    <Description>Logout</Description>
                    <Name>Logout</Name>
                    <Image>exit.png</Image>
                    <Link>Action=Logout</Link>
                    <AccessKey>l</AccessKey>
                    <Prio>10</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'Logout'} = {
                Description => 'Logout of customer panel.',
                NavBarName => '',
                NavBar => [
                {
                    Description => 'Logout',
                    Name => 'Logout',
                    Image => 'exit.png',
                    Link => 'Action=Logout',
                    Prio => 10,
                },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerPreferences" Required="1" Valid="1">
        <Description Lang="en">All parameters for the CustomerPreferences object in the customer frontend.</Description>
        <Description Lang="de">Alle Parameter für das CustomerPreferences-Objekt innerhalb des Customer-Frontends.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>Customer preferences</Description>
                <Title>Preferences</Title>
                <NavBar>
                    <Description>Preferences</Description>
                    <Name>Preferences</Name>
                    <Image>prefer.png</Image>
                    <Link>Action=CustomerPreferences</Link>
                    <AccessKey>p</AccessKey>
                    <Prio>1000</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerPreferences'} = {
                Description => 'Customer preferences.',
                Title => 'Preferences',
                NavBar => [
                {     
                    Description => 'Preferences',
                    Name => 'Preferences',
                    Image => 'prefer.png',
                    Link => 'Action=CustomerPreferences',
                    Prio => 1000,
                },
                ],
            };
        -->
    </ConfigItem>
    <ConfigItem Name="CustomerFrontend::Module###CustomerAccept" Required="1" Valid="1">
        <Description Lang="en">All parameters for the CustomerAccept object in the customer frontend.</Description>
        <Description Lang="de">Alle Parameter für das CustomerAccept-Objekt innerhalb des Customer-Frontends.</Description>
        <Group>Framework</Group>
        <SubGroup>CustomerFrontendModulRegistration</SubGroup>
        <Setting>
            <FrontendModuleReg>
                <Description>To accept login infos</Description>
                <Title>Info</Title>
            </FrontendModuleReg>
        </Setting>
        <!--
            $Self->{'CustomerFrontend::Module'}->{'CustomerAccept'} = {
                Description => 'To accept login infos',
                Title => 'Info',
            };
        -->
    </ConfigItem>
    <ConfigItem Name="Frontend::Module###AgentPreferences" Required="1" Valid="1">
        <Description Lang="en">All parameters of AgentPreferences object in the agent interface.</Description>
        <Description Lang="de">Alle Parameter des AgentPreferences-Objekts im Agent-Interface.</Description>
        <Group>Framework</Group>
        <SubGroup>AgentFrontendModulRegistration</SubGroup>        
        <Setting>
            <FrontendModuleReg>
                <Title>Preferences</Title>
                <NavBar>
                    <Description>Agent Preferences</Description>
                    <Name>Preferences</Name>
                    <Image>prefer.png</Image>
                    <Link>Action=AgentPreferences</Link>
                    <Prio>1000</Prio>
                </NavBar>
            </FrontendModuleReg>
        </Setting>
    </ConfigItem>
</otrs_config>
