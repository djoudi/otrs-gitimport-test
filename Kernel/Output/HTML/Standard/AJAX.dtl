# --
# AJAX.dtl - provides AJAX functions
# Copyright (C) 2001-2008 OTRS GmbH, http://otrs.org/
# --
# $Id: AJAX.dtl,v 1.2 2008-01-09 14:41:42 martin Exp $
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see http://www.gnu.org/licenses/gpl.txt.
# --

# use prototype lib
<script src="$Env{"Images"}/../../../prototype.js" type="text/javascript"></script>

<script language="JavaScript" type="text/javascript">
<!--
function AJAXUpdate(Subaction, Depend, Update) {
    var url = AJAXURLGet(Subaction, Depend);
    new Ajax.Request(url,
        {
            method:'get',
            onLoading: function() {
               AJAXLoadingImage('Load', Update);
            },
            onLoaded: function() {
               AJAXLoadingImage('Unload', Update);
            },
            onSuccess: function(transport) {
                var Response = transport.responseText;
                if (!Response) {
                    alert("ERROR: No content from: " + url);
                }
                var ObjectRef= Response.evalJSON();
                if (ObjectRef) {
                    AJAXUpdateItems(ObjectRef, Update);
                }
                else {
                    alert("ERROR: Invalid JSON: " + Response);
                }
            },
            onFailure: function() {
                alert('ERROR: Something went wrong!')
            }
        }
    );
}

function AJAXURLGet (Subaction, FieldName) {
    var ParamPart = '';
    for (F=0;F<FieldName.length;F++) {
        if (document.compose[FieldName[F]]) {
            var Param = document.compose[FieldName[F]].value;
            var ParamEncode = encodeURIComponent(Param);
            ParamPart = ParamPart + '&' + FieldName[F] + '=' + ParamEncode;
        }
    }
    var url = '$Env{"Baselink"}Action=$Env{"Action"}&Subaction=' + Subaction + ParamPart;
    return url;
}

function AJAXUpdateItems (ObjectRef, FieldName) {
    for (F=0;F<FieldName.length;F++) {
        if (document.compose[FieldName[F]]) {
            var T = 'Option';
            if (T == 'Option') {
                var Length = document.compose[FieldName[F]].length;
                var Selected = document.compose[FieldName[F]].value;
                for(i=0; i<=Length; i++) {
                    document.compose[FieldName[F]].options[0] = null;
                }
                if (ObjectRef) {
                    var List = ObjectRef[FieldName[F]];
                    if (List) {
                        for (var i = 0; i < List.length; i++) {
                            var SelectedOption = null;
                            if (Selected == List[i][0]) {
                                SelectedOption = true;
                            }
                            document.compose[FieldName[F]].options[i] = new Option(List[i][1],List[i][0],SelectedOption,SelectedOption);
                        }
                    }
                }
            }
            else if (T == 'String') {
                if (ObjectRef) {
                    document.compose[FieldName[F]].value = String;
                }
            }
        }
    }
    return true;
}

function AJAXLoadingImage (Type, FieldName) {
    for (F=0;F<FieldName.length;F++) {
        if (document.compose[FieldName[F]] && document.getElementById('AJAXImage' + FieldName[F]) ) {
            if (Type == 'Load') {
                document.getElementById('AJAXImage' + FieldName[F]).innerHTML="<img src=\"$Env{"Images"}loading.gif\" border=\"0\">";
            }
            else {
                document.getElementById('AJAXImage' + FieldName[F]).innerHTML="";
            }
        }
    }
    return true;
}

// -->
</script>
