#!/usr/bin/perl -w
# --
# otrs.getUserId - Returns numeric user id
# Copyright (C) 2002 Atif Ghaffar <aghaffar@developer.ch>
# --
# $Id: otrs.getUserID,v 1.10 2007-10-01 09:45:36 mh Exp $
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (GPL). If you
# did not receive this file, see http://www.gnu.org/licenses/gpl.txt.
# --

use strict;
use warnings;

use File::Basename;
use FindBin qw($RealBin);
use lib dirname($RealBin);
use lib dirname($RealBin) . "/Kernel/cpan-lib";

unless ( $ARGV[0] ) {
    print "Usage: $FindBin::Script username";
    print "\n";
    exit;
}

use Kernel::Config;
use Kernel::System::Log;
use Kernel::System::DB;
use Kernel::System::User;

# create common objects
my %CommonObject = ();
$CommonObject{ConfigObject} = Kernel::Config->new(%CommonObject);
$CommonObject{LogObject} = Kernel::System::Log->new( %CommonObject, LogPrefix => 'otrs.getUserId' );
$CommonObject{DBObject}  = Kernel::System::DB->new(%CommonObject);
$CommonObject{UserObject} = Kernel::System::User->new(%CommonObject);

my %Param = ();

#user id of the person making the query
$Param{UserID} = '1';

$Param{UserLogin} = $ARGV[0];

if ( my $Uid = $CommonObject{UserObject}->UserLookup( UserLogin => $Param{UserLogin} ) ) {
    print $Uid , "\n";
}
else {
    print "Failed to get User ID. Perhaps non-existent user..\n";
}

exit(0);
