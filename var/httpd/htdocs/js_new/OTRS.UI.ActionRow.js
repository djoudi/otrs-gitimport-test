// --
// OTRS.UI.ActionRow.js - provides all functions for the Action row
// Copyright (C) 2001-2010 OTRS AG, http://otrs.org/\n";
// --
// $Id: OTRS.UI.ActionRow.js,v 1.8 2010-05-07 13:33:29 mn Exp $
// --
// This software comes with ABSOLUTELY NO WARRANTY. For details, see
// the enclosed file COPYING for license information (AGPL). If you
// did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
// --

"use strict";

var OTRS = OTRS || {};
OTRS.UI = OTRS.UI || {};

/**
 * @namespace
 * @exports TargetNS as OTRS.UI.ActionRow
 * @description
 *      Action row functionality
 * @requires
 *      OTRS.JSON
 *      OTRS.Data
 */
OTRS.UI.ActionRow = (function (TargetNS) {

    if (!OTRS.Debug.CheckDependency('OTRS.UI.ActionRow', 'OTRS.JSON', 'OTRS JSON API')) {
        return;
    }
    if (!OTRS.Debug.CheckDependency('OTRS.UI.ActionRow', 'OTRS.Data', 'OTRS Data API')) {
        return;
    }

    var TicketElementSelectors = {
        'Small': 'div.Overview table td input:checkbox[name=TicketID]',
        'Medium': 'ul.Overview input:checkbox[name=TicketID]',
        'Large': 'ul.Overview input:checkbox[name=TicketID]'
    },
        TicketView;

    /**
     * @function
     * @description
     *      This functions adds information about the valid action of an element to the element.
     *      These information are used to generate the action row individually for this element.
     * @param {jQueryObject} $Element
     *      The element for which the data is stored
     * @param {String} JSONString
     *      The JSON string which contains the information about the valid actions of the element (generated by Perl module)
     *      Could also be an javascript object directly
     * @return nothing
     */
    TargetNS.AddActions = function ($Element, JSONString) {
        var Actions;
        // The element of the given ID must exist, JSONString must not be empty
        if (isJQueryObject($Element)) {
            if (typeof JSONString === 'String') {
                Actions = OTRS.JSON.Parse(JSONString);
            }
            else {
                Actions = JSONString;
            }

            // save action data to the given element
            OTRS.Data.Set($Element, 'Actions', Actions);
        }
        else {
            OTRS.Debug.Log('Element does not exist or no valid data structure passed.');
        }
    };

    /**
     * @function
     * @description
     *      This function is called on click on the checkbox of an ticket element and updates the action row for this element.
     * @param {jQueryObject} $ClickedElement
     *      jQueryObject of the clicked element (normally $(this))
     * @param {jQueryObject} Checkboxes
     *      jQueryObject of the checkboxes of the different tickets
     * @param {jQueryObject} $ActionRow
     *      The jQueryObject of the ActionRow wrapper (normally the <ul>-Element)
     * @return nothing
     */
    TargetNS.UpdateActionRow = function ($ClickedElement, $Checkboxes, $ActionRow) {
        var $Checkboxes,
            TicketActionData,
            ActionRowElement;

        // Check, if one or more items are selected
        $Checkboxes = $Checkboxes.filter(':checked');
        // No checkbox is selected
        if (!$Checkboxes.length) {
            // Remove actions and deactivate bulk action
            $ActionRow
                .find('li').filter(':not(.Bulk)').remove()
                .end().end()
                .find('#BulkAction').addClass('Inactive')
                .end()
                .find('li.Last').removeClass('Last')
                .end()
                .find('li:last').addClass('Last');
        }
        // Exactly one checkbox is selected
        else if ($Checkboxes.length === 1) {
            // Update actions and deactivate bulk action
            $ActionRow.find('#BulkAction').addClass('Inactive');

            // Find the element which is active (it must not be the clicked element!)
            // and get the data
            TicketActionData = OTRS.Data.Get($Checkboxes.closest('li, tr'), 'Actions');
            if (typeof TicketActionData !== 'undefined') {
                $.each(TicketActionData, function (Index, Value) {
                    if (Value.HTML) {
                        $(Value.HTML).attr('id', Value.ID).appendTo($ActionRow);
                        ActionRowElement = $ActionRow.find('#' + Value.ID).find('a');
                        if (typeof Value.Target === 'undefined' || Value.Target === "") {
                            ActionRowElement.attr('href', Value.Link);
                        }
                        else if (Value.Target === "PopUp") {
                            ActionRowElement.bind('click.Popup', function () {
                                OTRS.UI.Popup.OpenPopup(Value.Link, 'Action');
                                return false;
                            });
                        }
                    }
                });
            }

            // Apply the Last class to the right element
            $ActionRow
                .find('li.Last').removeClass('Last')
                .end()
                .find('li:last').addClass('Last');
        }
        // Two ore more checkboxes selected
        else {
            // Remove actions and activate bulk action
            $ActionRow
                .find('li').filter(':not(.Bulk)').remove()
                .end().end()
                .find('#BulkAction').removeClass('Inactive')
                .end()
                .find('li.Last').removeClass('Last')
                .end()
                .find('li:last').addClass('Last');
        }
    };

    /**
     * @function
     * @description
     *      This function initializes the complete ActionRow funcionality and binds all click events.
     * @return nothing
     */
    TargetNS.Init = function () {
        // Get used ticket view mode
        if ($('#TicketOverviewMedium').length) {
            TicketView = 'Medium';
        }
        else if ($('#TicketOverviewLarge').length) {
            TicketView = 'Large';
        }
        else {
            TicketView = 'Small';
        }

        OTRS.UI.RegisterEvent('click', $('#SelectAllTickets'), function () {
            var Status = $(this).attr('checked');
            $(TicketElementSelectors[TicketView]).attr('checked', Status).triggerHandler('click');
        });

        OTRS.UI.RegisterEvent('click', $(TicketElementSelectors[TicketView]), function () {
            OTRS.UI.ActionRow.UpdateActionRow($(this), $(TicketElementSelectors[TicketView]), $('div.OverviewActions ul.Actions'));
        });

        OTRS.UI.RegisterEvent('click', $('BulkAction a'), function () {
            var $Element = $(this),
                $SelectedTickets,
                TicketIDParameter = "TicketID=",
                TicketIDs = "";
            if ($Element.parent('li').hasClass('Inactive')) {
                return false;
            }
            else {
                $SelectedTickets = $(TicketElementSelectors[TicketView] + ':checked');
                $SelectedTickets.each(function () {
                    TicketIDs += TicketIDParameter + $(this).val() + ";";
                });
                OTRS.UI.Popup.OpenPopup(OTRS.Config.Get('Baselink') + "Action=AgentTicketBulk;" + TicketIDs, 'Action');
            }
            return false;
        });
    };

    return TargetNS;
}(OTRS.UI.ActionRow || {}));